{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","api/static.js","Views/Admin/ViewOrder.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","PARAMS","methodType","method","headers","authHeader","getProductUnitList","a","URL","c","axios","assign","data","checkError","getMainUnitRelateRecords","payload","getOrderStatusList","RESET_VALUES","date","Date","orderStatus","ViewOrder","props","console","log","useState","inputs","setInputs","orderList","setOrderList","orderedProductList","setOrderedProductList","orderStatusList","setOrderStatusList","useEffect","getOrderListOfSingleDay","handleInputChange","e","name","OrderAPI","order_status","getDate","result","orderedProducts","StaticAPI","className","class","for","id","type","onChange","map","index","onClick","order","totalProduct","pro","order_id","product","rowspan","getDateInDDMMYYYY","order_date","full_name","product_name","quantity","ordered_unit_name","flat_add","street_add","city","to","pathname","state","style","display"],"mappings":"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","file":"static/js/8.57e31cb3.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import axios from 'axios';\r\nimport * as c from './config/Constants';\r\nimport checkError from './config/HttpClient';\r\nimport {authHeader} from './config/AuthHeader.js';\r\n\r\nconst PARAMS = ({ methodType = 'GET' }) => ({\r\n  method: methodType,\r\n  headers: authHeader(),\r\n});\r\n\r\nexport default {\r\n\r\n  getProductUnitList:async () => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getProductUnitList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getMainUnitRelateRecords:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getMainUnitRelateRecords`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getOrderStatusList:async () => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getOrderStatusList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n};","import React, {useState, useEffect, Fragment} from 'react';\r\nimport {Link} from  'react-router-dom';\r\n\r\n//Components \r\nimport Header from '../Partials/Header.js';\r\nimport Footer from '../Partials/Footer.js';\r\nimport OrderAPI from '../../api/order.js';\r\nimport StaticAPI from '../../api/static.js';\r\n\r\n\r\nimport {getDateInDDMMYYYY, getDate} from '../../common/moment.js';\r\n\r\nconst RESET_VALUES = {\r\n    date : new Date(),\r\n    orderStatus : '1',\r\n}\r\n\r\n\r\nexport default function ViewOrder(props) {\r\n    console.log(props)\r\n\r\n    const [inputs, setInputs] =  useState(RESET_VALUES);\r\n\tconst [orderList, setOrderList] = useState([]);\r\n    const [orderedProductList, setOrderedProductList] = useState([]);\r\n    const [orderStatusList, setOrderStatusList]  = useState([]);\r\n\r\n    useEffect(()=>{\r\n        getOrderListOfSingleDay();\r\n        getOrderStatusList();\r\n    },[]);\r\n\r\n\r\n    \r\n\tconst  handleInputChange = (e) => {\r\n\t\tsetInputs({...inputs, [e.target.name]: e.target.value});\r\n\t}\r\n\r\n    const getOrderListOfSingleDay = async () => {\r\n        try{\r\n            const result = await OrderAPI.getOrderListOfSingleDay({\r\n                order_status : inputs.orderStatus,\r\n                date : getDate(inputs.date),\r\n            });\r\n            setOrderList(result.orderList);            \r\n            setOrderedProductList(result.orderedProducts);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    const getOrderStatusList = async () => {\r\n        try{\r\n            const result = await StaticAPI.getOrderStatusList({});\r\n            setOrderStatusList(result.orderStatusList);\r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n\r\n    const proceedToDelivered = async (order) => {\r\n        console.log(order)\r\n        // try{\r\n        //     const result = await OrderAPI.proceedToDelivered({\r\n        //         orderId : orderId,\r\n        //         order_status : inputs.orderStatus,\r\n        //     });\r\n        //     setOrderList(result.orderList);\r\n        //     setOrderedProductList(result.orderedProducts);            \r\n        // }catch(e){\r\n        //     console.log('Error...',e);\r\n        // }\r\n    }\r\n\r\n    return(\r\n\t\t<Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<section className=\"ftco-section\">\r\n                <div class=\"container\">\r\n                <h3>Modify Orders</h3>\r\n                <div class=\"row justify-content-center p-bottom-30\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <div class=\"p-5 bg-light b-top-dark\">\r\n                                    <div class=\"row align-items-end\">\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"date\">Date * </label>\r\n                                                <input id=\"date\" name=\"date\" type=\"date\" value={getDate(inputs.date)} class=\"form-control\"  onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>   \r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"orderStatus\">Status * </label>\r\n                                                <select id=\"orderStatus\" name=\"orderStatus\" value={inputs.orderStatus} class=\"form-control\" onChange={handleInputChange}>\r\n                                                    {(orderStatusList.length > 0 ? orderStatusList : [] ).map((data, index)=>{\r\n                                                        return(\r\n                                                            <option id={data.id} value={data.id} >{data.order_status}</option>\r\n                                                        )\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"col-md-12 m-bottom-20\">\r\n                                            <div class=\"form-group\">\r\n                                                <div class=\"d-flex f-right\">\r\n                                                <button class=\"btn btn-primary px-4\" onClick={getOrderListOfSingleDay}> Click to view</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"w-100\">\r\n                                            <table className=\"unit-array-table\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Order Date</th>\r\n                                                        <th>Order Id</th>\r\n                                                        <th>Customer</th>\r\n                                                        <th>Product</th>\r\n                                                        {/* <th>Price</th> */}\r\n                                                        <th>Quantity</th>\r\n                                                        {/* <th>Total</th> */}\r\n                                                        <th>Address</th>\r\n                                                        {/* <th>Total</th> */}\r\n                                                        {inputs.orderStatus == 1 && <th>Action</th>}\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {(orderList.length>0 ? orderList :[]).map((order, index) => {                                                    \r\n                                                    let totalProduct = orderedProductList.filter(pro => pro.order_id === order.id).length;                                                    \r\n                                                    return(\r\n                                                        (orderedProductList.length >0 ? orderedProductList :[]).map((product) =>  {\r\n                                                            if(product.order_id === order.id){\r\n                                                            return(\r\n                                                                <tr class=\"text-center\">\r\n                                                                    {totalProduct !== 0 &&                                                                    \r\n                                                                        <Fragment>                                                                            \r\n                                                                            <td rowspan={totalProduct}>{index + 1}</td>\r\n                                                                            <td rowspan={totalProduct}>{getDateInDDMMYYYY(order.order_date)}</td>\r\n                                                                            <td rowspan={totalProduct}>{order.order_id}</td>\r\n                                                                            <td rowspan={totalProduct}>{order.full_name}</td>\r\n                                                                        </Fragment>\r\n                                                                    }\r\n                                                                    <td>{product.product_name}</td>\r\n                                                                    {/* <td>{`$${product.price}/${product.unit_name}`}</td> */}\r\n                                                                    <td>{`${product.quantity}  ${product.ordered_unit_name}`}</td>\r\n                                                                    {/* <td>{product.total}</td> */}\r\n                                                                    {totalProduct !== 0 &&\r\n                                                                        <Fragment>\r\n                                                                            <td rowspan={totalProduct}>{`${order.flat_add}, ${order.street_add}, ${order.city}`}</td>\r\n                                                                            {/* <td rowspan={totalProduct}>{order.total}</td> */}\r\n                                                                            {inputs.orderStatus == 1 && <td rowspan={totalProduct}>\r\n                                                                                <Link to={{pathname :'/delivery-form', state : order}}>Click to delivered</Link>\r\n                                                                            </td>}\r\n                                                                        </Fragment>\r\n                                                                    }   \r\n                                                                    <div style={{display:'none'}}>{totalProduct = 0}</div>\r\n                                                                </tr>\r\n                                                                )\r\n                                                            }\r\n                                                            })\r\n                                                        )\r\n                                                    })\r\n                                                }\t\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n                    \r\n                </div>\r\n\t\t\t\t\t{/* <div className=\"row mt-5\">\r\n\t\t\t\t\t\t<div className=\"col text-center\">\r\n\t\t\t\t\t\t\t<div className=\"block-27\">\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li><a href=\"#\">&lt;</a></li>\r\n\t\t\t\t\t\t\t\t<li className=\"active\"><span>1</span></li>\r\n\t\t\t\t\t\t\t\t<li><a href=\"#\">2</a></li>\r\n\t\t\t\t\t\t\t\t<li><a href=\"#\">3</a></li>\r\n\t\t\t\t\t\t\t\t<li><a href=\"#\">4</a></li>\r\n\t\t\t\t\t\t\t\t<li><a href=\"#\">5</a></li>\r\n\t\t\t\t\t\t\t\t<li><a href=\"#\">&gt;</a></li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> */}\r\n    </section>\r\n\t\t<Footer />\r\n\t</Fragment>\r\n    )\r\n}"],"sourceRoot":""}