{"version":3,"sources":["api/config/Constants.js","Views/Partials/Loader.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","API_CONSUMER","APP_TOKEN","set","user_id","name","token","account_id","id","role_id","sessionStorage","setItem","get","userId","getItem","remove","removeItem","cond1","this","cond2","cond3","CART_TOKEN","product","prev","filtered","JSON","parse","filter","ele","push","stringify","cartTotal","length","cart","removeProduct","productId","removeCart","Loader","class","width","height","cx","cy","r","fill","stroke-width","stroke","stroke-miterlimit","Login","lazy","Home","AddProduct","ViewProduct","ViewOrder","ViewOrderedProduct","CartList","ProceedToCheckout","ViewOrderReport","ViewOrderedProductReport","DeliveryForm","ProductVerification","ViewCustomerOrder","AlterCategories","AlterSubCategories","ViewProductDetails","ProductDetails","App","fallback","exact","path","render","props","notEmpty","isAdmin","to","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.23821df2.chunk.js","sourcesContent":["export const API_URL = 'http://ordernow.a1abilities.co.nz/'; // Config[KEY].API_URL;\r\nexport const AUTH_URL = 'http://ordernow.a1abilities.co.nz/'; // Config[KEY].AUTH_URL;\r\nexport const API_CONSUMER = 'http://ordernow.a1abilities.co.nz/'; // Config[KEY].API_URL;\r\n\r\n// export const API_URL = 'http://localhost:5000';         // Config[KEY].API_URL;\r\n// export const AUTH_URL = 'http://localhost:5000';        // Config[KEY].AUTH_URL;\r\n// export const API_CONSUMER = 'http://localhost:5000';   // Config[KEY].API_URL;\r\n\r\nexport const APP_TOKEN = {\r\n    set: ({user_id, name, token, account_id, id, role_id}) => {\r\n        sessionStorage.setItem('userId', id);\r\n        sessionStorage.setItem('token', token);\r\n        sessionStorage.setItem('user_id', user_id);\r\n        sessionStorage.setItem('role_id', role_id);\r\n        sessionStorage.setItem('name', name);\r\n        sessionStorage.setItem('account_id', account_id);\r\n    },\r\n    get: () => ({\r\n        userId: sessionStorage.getItem('userId'),\r\n        token: sessionStorage.getItem('token'),\r\n        user_id : sessionStorage.getItem('user_id'),\r\n        role_id : sessionStorage.getItem('role_id'),\r\n        name : sessionStorage.getItem('name'),\r\n        account_id: sessionStorage.getItem('account_id'),\r\n    }),\r\n    remove: () => {\r\n        // sessionStorage.clear();\r\n        sessionStorage.removeItem('userId');\r\n        sessionStorage.removeItem('token');\r\n        sessionStorage.removeItem('user_id');\r\n        sessionStorage.removeItem('role_id');\r\n        sessionStorage.removeItem('name');\r\n        sessionStorage.removeItem('account_id');\r\n    },    \r\n    get notEmpty() {\r\n        const cond1 = this.get().token !== null;\r\n        const cond2 = this.get().token !== '';\r\n        return cond1 && cond2;\r\n    },\r\n    get isAdmin() {\r\n        const cond1 = this.get().user_id == 'admin';\r\n        const cond2 = this.get().userId == 1;\r\n        const cond3 = this.get().role_id == 1;\r\n        return cond1 && cond2 && cond3;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const CART_TOKEN = {\r\n    set: ({product}) => {\r\n        let prev = sessionStorage.getItem('cart');\r\n        if(prev !== null && prev !== \"\"){\r\n            let obj = JSON.parse(prev);\r\n            let filtered = obj.filter(ele => ele.id !== product.id)            \r\n            filtered.push(product);\r\n            sessionStorage.setItem('cart', JSON.stringify(filtered));\r\n        }else{\r\n            sessionStorage.setItem('cart', JSON.stringify([product]));            \r\n        }            \r\n    },\r\n    get: () => ({\r\n        cartTotal: sessionStorage.getItem('cart') !== null && sessionStorage.getItem('cart') !== \"\" ? JSON.parse(sessionStorage.getItem('cart')).length : 0,\r\n        cart: sessionStorage.getItem('cart') !== null && sessionStorage.getItem('cart') !== \"\" ? JSON.parse(sessionStorage.getItem('cart')) : [],\r\n    }),\r\n    removeProduct:({productId}) => {\r\n        let prev = sessionStorage.getItem('cart');\r\n        if(prev !== null && prev !== \"\"){\r\n            let obj = JSON.parse(prev);\r\n            let filtered = obj.filter(ele => ele.id !== productId)            \r\n            sessionStorage.setItem('cart', JSON.stringify(filtered));\r\n        }\r\n    },\r\n    removeCart: () =>{\r\n        sessionStorage.removeItem('cart');\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default function Loader(){\r\n    return(\r\n        <div id=\"ftco-loader\" class=\"show fullscreen\"><svg class=\"circular\" width=\"48px\" height=\"48px\"><circle class=\"path-bg\" cx=\"24\" cy=\"24\" r=\"22\" fill=\"none\" stroke-width=\"4\" stroke=\"#eeeeee\"/><circle class=\"path\" cx=\"24\" cy=\"24\" r=\"22\" fill=\"none\" stroke-width=\"4\" stroke-miterlimit=\"10\" stroke=\"#F96D00\"/></svg></div>\r\n    )\r\n}","import React, {Suspense, lazy, useEffect} from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\n\r\n// Components\r\nimport {APP_TOKEN} from  './api/config/Constants.js'\r\nimport PageLoader from './Views/Partials/Loader';\r\n\r\n\r\n\r\nconst Login = lazy(()=> import('./Views/Auth/login'));\r\nconst AdminHome = lazy(()=> import('./Views/Admin/AdminHome'));\r\nconst Home = lazy(()=> import('./Views/Home'));\r\nconst AddProduct = lazy(()=> import('./Views/Admin/AddProduct.js'));\r\nconst ViewProduct = lazy(()=> import('./Views/Admin/ViewProduct.js'));\r\nconst ViewOrder = lazy(()=> import('./Views/Admin/ViewOrder.js'));\r\nconst ViewOrderedProduct = lazy(()=> import('./Views/Admin/ViewOrderedProduct.js'));\r\nconst CartList = lazy(()=> import('./Views/Components/CartList.js'));\r\nconst ProceedToCheckout = lazy(()=> import('./Views/Components/ProceedToCheckout.js'));\r\nconst ViewOrderReport = lazy(()=> import('./Views/Admin/Report/ViewOrderReport.js'));\r\nconst ViewOrderedProductReport = lazy(()=> import('./Views/Admin/Report/ViewOrderedProductReport.js'));\r\nconst DeliveryForm = lazy(()=> import('./Views/Admin/DeliveryForm.js'));\r\nconst ProductVerification = lazy(()=> import('./Views/Components/ProductVerification.js'));\r\nconst ViewCustomerOrder = lazy(()=> import('./Views/Components/ViewCustomerOrder'));\r\nconst AlterCategories = lazy(()=> import('./Views/Admin/AlterCategories'));\r\nconst AlterSubCategories = lazy(()=> import('./Views/Admin/AlterSubCategories'));\r\nconst ViewProductDetails = lazy(()=> import('./Views/Admin/ViewProductDetails'));\r\nconst ProductDetails = lazy(()=> import('./Views/Components/CustomerViewProductDetails.js'));\r\n\r\n\r\nfunction App() {\r\n  return (\r\n          <Router>\r\n            <Suspense fallback={<PageLoader />}>\r\n              <Switch>\r\n                <Route \r\n                  exact \r\n                  path=\"/\"\r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <Redirect to=\"/view-added-product\" />\r\n                    : <Home {...props} /> \r\n                  }}\r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/cart-list\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <Redirect to=\"/view-added-product\" />\r\n                    : <CartList {...props} /> \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/proceed-to-checkout\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <Redirect to=\"/view-added-product\" />\r\n                    : <ProceedToCheckout {...props} />\r\n                  }}\r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/add-new-product\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <AddProduct {...props} />\r\n                    : <Redirect to=\"/\" /> \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/view-user-order-list\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <Redirect to=\"/view-added-product\" />\r\n                    : <ViewCustomerOrder {...props} />}}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/view-added-product\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <ViewProduct {...props} />\r\n                    : <Redirect to=\"/\" /> \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/view-order-list\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <ViewOrder {...props} />\r\n                    : <Redirect to=\"/\" />\r\n                  }}                    \r\n                />\r\n                 <Route \r\n                  exact \r\n                  path=\"/view-ordered-product\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <ViewOrderedProduct {...props} />\r\n                    : <Redirect to=\"/\" />\r\n                  }}                    \r\n                />\r\n               <Route \r\n                  exact \r\n                  path=\"/view-order-report\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <ViewOrderReport {...props} />\r\n                    : <Redirect to=\"/\" />\r\n                  }}                    \r\n                />\r\n                 <Route \r\n                  exact \r\n                  path=\"/view-ordered-product-report\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <ViewOrderedProductReport {...props} />\r\n                    : <Redirect to=\"/\" /> \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/delivery-form\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <DeliveryForm {...props} />\r\n                    : <Redirect to=\"/\" /> \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/verify-delivered-product\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <Redirect to=\"/view-added-product\" />\r\n                    : <ProductVerification  {...props} /> \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/alter-categories\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <AlterCategories  {...props} />\r\n                    : <Redirect to=\"/\" /> \r\n \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/alter-categories/subcategory\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <AlterSubCategories  {...props} />\r\n                    : <Redirect to=\"/\" /> \r\n \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/view-product-details\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : <ViewProductDetails {...props} /> \r\n                  }}                    \r\n                />\r\n                 <Route \r\n                  exact \r\n                  path=\"/product-details\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : <ProductDetails {...props} /> \r\n                  }}                    \r\n                />\r\n               \r\n               \r\n                <Route exact path=\"/login\"  render={props =>  <Login {...props} /> } />\r\n                <Route exact path=\"/logout\" render={props =>  <Redirect to=\"/login\" /> }/>\r\n                \r\n              </Switch>\r\n            </Suspense>\r\n          </Router>      \r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}