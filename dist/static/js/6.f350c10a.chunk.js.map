{"version":3,"sources":["api/categories.js","api/static.js","Views/Admin/Components/AddUpdateCategoriesDialog.js","Views/Admin/DeliveryForm.js"],"names":["PARAMS","methodType","method","headers","authHeader","getProductPacketInfo","a","payload","URL","c","axios","Object","assign","data","checkError","getCategoryList","getProductList","addNewCategory","addNewSubCategory","getProductUnderMainCategory","getMainCategoryList","getMiddleCategoryList","getSubCategoryList","insertNewProduct","getProductUnitList","getMainUnitRelateRecords","getOrderStatusList","AddUpdateCategoriesDialog","open","setCategoryDialogOpen","setCategoryList","setSubCategory","setDefaultCategoryId","setDefaultSubCategoryId","props","console","log","handleSubmit","e","preventDefault","category_name","document","getElementById","value","type","operation","CategoriesAPI","result","categoryList","newCategoryId","categoryId","id","subCategoriesList","newSubCategoryId","show","onHide","size","centered","Header","closeButton","Title","onSubmit","Body","class","for","placeholder","required","Footer","className","onClick","DeliveryForm","userId","APP_TOKEN","get","useState","location","state","order","productList","setProductList","useEffect","fetchDeliveryFormData","OrderAPI","orderId","order_date","getDate","deliveryFormData","length","alert","window","pathname","handleQuantityChange","target","name","split","quantity","found","find","ele","paid_quantity","undefined","purchased_quantity","price","cost","textContent","Number","toFixed","productData","map","index","push","ordered_id","product_id","delivery_date","Date","unit_id","purchased_unit_id","created_by","submitDeliveryDetails","order_id","getDateInDDMMYYYY","mobile","full_name","flat_add","street_add","city","pincode","product_name","ordered_unit_name","purchased_unit_name","min","step","onChange"],"mappings":"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","file":"static/js/6.f350c10a.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport * as c from './config/Constants';\r\nimport checkError from './config/HttpClient';\r\nimport {authHeader} from './config/AuthHeader.js';\r\n\r\nconst PARAMS = ({ methodType = 'GET' }) => ({\r\n  method: methodType,\r\n  headers: authHeader(),\r\n});\r\n\r\nexport default {\r\n\r\n  getProductPacketInfo:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getProductPacketInfo`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n \r\n\r\n  getCategoryList:async () => {\r\n    const URL = `${c.API_CONSUMER}/categories/getCategoryList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  \r\n  getProductList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getProductList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  addNewCategory:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/addNewCategory`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n \r\n  addNewSubCategory:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/addNewSubCategory`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  getProductUnderMainCategory:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getProductUnderMainCategory`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n\r\n  getMainCategoryList:async () => {\r\n    const URL = `${c.API_CONSUMER}/categories/getMainCategoryList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getMiddleCategoryList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getMiddleCategoryList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getSubCategoryList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getSubCategoryList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  insertNewProduct:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/insertNewProduct`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n};","import axios from 'axios';\r\nimport * as c from './config/Constants';\r\nimport checkError from './config/HttpClient';\r\nimport {authHeader} from './config/AuthHeader.js';\r\n\r\nconst PARAMS = ({ methodType = 'GET' }) => ({\r\n  method: methodType,\r\n  headers: authHeader(),\r\n});\r\n\r\nexport default {\r\n\r\n  getProductUnitList:async () => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getProductUnitList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getMainUnitRelateRecords:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getMainUnitRelateRecords`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getOrderStatusList:async () => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getOrderStatusList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n};","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nimport CategoriesAPI from '../../../api/categories.js';\r\n\r\n\r\n\r\nexport default function AddUpdateCategoriesDialog({open, setCategoryDialogOpen, setCategoryList, setSubCategory, setDefaultCategoryId, setDefaultSubCategoryId,  props}) {\r\n  console.log(props)\r\n    \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let category_name = document.getElementById('category_name').value;\r\n    \r\n    try{\r\n      if(props.type === 1 && props.operation  === 'add'){\r\n        const result = await  CategoriesAPI.addNewCategory({\r\n          category_name : category_name,\r\n        });\r\n        setCategoryList(result.categoryList);\r\n        setDefaultCategoryId(result.newCategoryId);\r\n      }else if(props.type === 2 && props.operation  === 'add'){\r\n        const result = await  CategoriesAPI.addNewSubCategory({\r\n          category_name : category_name,\r\n          categoryId : props.id,\r\n        });\r\n        setSubCategory(result.subCategoriesList);\r\n        setDefaultSubCategoryId(result.newSubCategoryId);\r\n      }\r\n      setCategoryDialogOpen(false);\r\n\r\n    }catch(e){\r\n      console.log(\"error...\", e);\r\n    }    \r\n  }\r\n\r\n\r\n    return (\r\n      <Modal show = {open} onHide={()=>{setCategoryDialogOpen(false)}} size=\"lg\" centered >\r\n        <Modal.Header closeButton >\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            { (props.type === 1  && props.operation === 'add') ? 'Create Category'\r\n             :(props.type === 2  && props.operation === 'add') ? 'Create Sub Category'\r\n             : ''\r\n            } \r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={handleSubmit} >\r\n          <Modal.Body>\r\n              <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                      <label for=\"category_name\">\r\n                      { (props.type === 1 ) ? 'Category *'\r\n                        :(props.type === 2 ) ? 'Sub Category *'\r\n                        : ''\r\n                      } \r\n                      </label>\r\n                      <input id=\"category_name\" type=\"text\" class=\"form-control\" placeholder=\"\" required />\r\n                  </div>\r\n              </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button className=\"br-none\" onClick={()=>{setCategoryDialogOpen(false)}}>Close</Button>\r\n            <Button type=\"submit\" className=\"br-none\">Submit</Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    );\r\n  }\r\n  ","import React, {useState, useEffect, Fragment} from 'react';\r\n\r\n//Components \r\nimport CategoriesAPI from '../../api/categories.js';\r\nimport {APP_TOKEN} from '../../api/config/Constants.js';\r\nimport StaticAPI from '../../api/static.js';\r\nimport OrderAPI from '../../api/order.js';\r\nimport Header from '../Partials/Header.js';\r\nimport Footer from '../Partials/Footer.js';\r\nimport AddUpdateCategoriesDialog from './Components/AddUpdateCategoriesDialog.js';\r\n\r\nimport {getDate, getDateInDDMMYYYY} from '../../common/moment.js';\r\n\r\nexport default function DeliveryForm(props) {\r\n    \r\n    const userId = APP_TOKEN.get().userId;\r\n    const [order, setOrder]  = useState(props.location.state);\r\n    const [productList, setProductList] = useState([]);\r\n   \r\n    \r\n    const [productUnitBio, setProductUnitBio] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchDeliveryFormData();\r\n    },[]);\r\n\r\n    const fetchDeliveryFormData = async () => {\r\n        try{\r\n            const result = await OrderAPI.fetchDeliveryFormData({\r\n                orderId : order.id,\r\n                order_date : getDate(order.order_date),\r\n            });\r\n            if(result.deliveryFormData.length >0){\r\n                setProductList(result.deliveryFormData);\r\n            }else if(result.deliveryFormData.length === 0){\r\n                alert('Product not available in stock !')\r\n                window.location.pathname = '/view-ordered-product';\r\n            }\r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    // console.log(productList)\r\n    const handleQuantityChange = (e) => {\r\n        let id =  (e.target.name).split('-')[1];\r\n        let quantity = e.target.value;\r\n        const found = productList.find(ele  => {return ele.id == id});\r\n\r\n        let available = (found.paid_quantity !== null && found.paid_quantity !== undefined && found.paid_quantity !== \"\") ? (found.purchased_quantity - found.paid_quantity) : found.purchased_quantity ;\r\n        if(available < quantity){\r\n            document.getElementById('provideQuantity-'+id).value = '';            \r\n            alert('input quantity is out of stock');\r\n        }else{\r\n            let price = (found.cost / found.purchased_quantity) * quantity ;\r\n            document.getElementById('productPrice-'+id).textContent = Number(price).toFixed(2);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try{     \r\n            let productData = [];\r\n            productList.map((data, index)=> {\r\n                productData.push({\r\n                    ordered_id : data.id,\r\n                    product_id : data.product_id,\r\n                    delivery_date : getDate(new Date()),\r\n                    order_date : getDate(order.order_date),\r\n                    paid_quantity : document.getElementById('provideQuantity-'+data.id).value,\r\n                    unit_id : data.purchased_unit_id,\r\n                    price : document.getElementById('productPrice-'+data.id).textContent,\r\n                    created_by : userId,\r\n                })\r\n            })\r\n\r\n            const result = await OrderAPI.submitDeliveryDetails({productData: productData, orderId : order.id});\r\n            if(result === true){    // true = inserted\r\n                window.location.pathname = '/view-order-list';\r\n            }else{\r\n                alert('Failed Insertion');\r\n            }\r\n        }catch(e){\r\n            console.log('Error...', e);\r\n        }\r\n    }\r\n\r\n    return(\r\n    <Fragment>\r\n        <Header />\r\n            <section class=\"ftco-section\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <h3 class=\"mb-4 billing-heading\">Delivery Form</h3>\r\n                            <form onSubmit={handleSubmit} class=\"p-5 bg-light b-top-dark\">\r\n                                    <div class=\"row align-items-end\">\r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>Order Id: </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <h6>{order.order_id}</h6>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>   \r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>Order Date: </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <h6>{getDateInDDMMYYYY(order.order_date)}</h6>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>  \r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>Mobile No.: </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <h6>{order.mobile}</h6>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>  \r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>Customer Name: </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <h6>{order.full_name}</h6>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"col-md-8\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>Address: </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <h6>{order.flat_add + ', ' + order.street_add + ', ' + order.city + ', ' + order.state + ' - ' + order.pincode}</h6>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\"> <hr /> </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <h5>Product List</h5>\r\n                                        </div>\r\n                                        <table className=\"unit-array-table table-min-width\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Product</th>\r\n                                                    <th>Demand</th>\r\n                                                    <th>Available in Stock</th>\r\n                                                    <th>Given Quantity</th>\r\n                                                    <th>Price</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                                <tbody>\r\n                                                    {(productList.length >0 ? productList :[]).map((data, index) => {                                                    \r\n                                                    return(\r\n                                                        <tr>\r\n                                                            <td>{data.product_name}</td>\r\n                                                            <td>{data.quantity+ ' ' + data.ordered_unit_name}</td>\r\n                                                            <td>{\r\n                                                                (data.paid_quantity !== null && data.paid_quantity !== undefined && data.paid_quantity !== \"\") ?\r\n                                                                (data.purchased_quantity - data.paid_quantity) + ' ' + data.purchased_unit_name : data.purchased_quantity  + ' ' + data.purchased_unit_name\r\n                                                            }</td>\r\n                                                            <td>\r\n                                                                <div class=\"d-flex justify-content-center\">\r\n                                                                    <input type=\"number\" name={\"provideQuantity-\"+data.id} class=\"cost-input\" id={\"provideQuantity-\"+data.id} min=\"0\" step=\"0.01\" onChange={handleQuantityChange} required/>\r\n                                                                    <p class=\"cost-input-adoptment\"> {data.purchased_unit_name} </p>\r\n                                                                    {/* <p class=\"cost-input-adoptment\"> {data.ordered_unit_name} </p> */}\r\n                                                                    {/* <select id=\"provideUnit\"  class=\"delivery-unit-select\" defaultValue={data.unit_id}  required>\r\n                                                                        <option  value = {data.purchased_unit_id}>{data.purchased_unit_name}</option>\r\n                                                                    </select> */}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td><p  id={\"productPrice-\"+data.id} ></p></td>\r\n                                                        </tr>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        <div class=\"form-group p-4\">\r\n                                            <input type=\"submit\" value=\"Submit\" class=\"btn  px-4 btn-primary\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        <Footer />\r\n    </Fragment>\r\n    )\r\n}"],"sourceRoot":""}