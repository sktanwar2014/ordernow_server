{"version":3,"sources":["Views/Invoices/Admin/HandleInvoiceRequest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","api/invoices.js"],"names":["UpdateRequest","props","propData","location","state","invoice","useState","isNullOrUndefined","isLoading","setIsLoading","isSubmitting","setIsSubmitting","itemList","setItemList","commonComment","setCommonComment","useEffect","getItemsToHandleRequest","e","a","InvoiceAPI","invoice_id","invoice_version_id","result","comment","console","log","onChangeHandler","name","target","split","itemId","Number","UnitId","value","tempList","map","data","item_id","unit_id","new_quantity","new_total_amt","handleCancel","window","history","back","handleReqestRejection","comment_id","id","handleSubmit","preventDefault","handleInvoiceToAcceptRequest","invoice_billing_id","class","onSubmit","order_id","invoice_no","invoice_total","toFixed","getDateInDDMMYYYY","invoice_date","status_name","cols","rows","required","disabled","className","style","minWidth","rowSpan","colSpan","length","index","is_requested","backgroundColor","item_name","quantity","unit_name","total_amt","type","min","step","onChange","onClick","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","PARAMS","methodType","method","headers","authHeader","getInvoiceList","payload","URL","c","axios","assign","checkError","getItemsForUpdateRequest","postItemUpdateRequest","postInvoiceUpdateRequest","payInvoiceBill","getTransactionDetails","downloadOrderInvoiceVersion"],"mappings":"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","file":"static/js/35.43b746da.chunk.js","sourcesContent":["import React, {useState, useEffect, Fragment} from 'react';\r\nimport {isNullOrUndefined} from 'util';\r\n\r\n//Components \r\nimport {getDateInDDMMYYYY, getDate} from '../../../common/moment.js';\r\nimport CallLoader from '../../../common/Loader.js';\r\nimport Header from '../../Partials/Header.js';\r\nimport Footer from '../../Partials/Footer.js';\r\n\r\n// APIs\r\nimport InvoiceAPI from '../../../api/invoices.js';\r\n\r\n\r\nexport default function UpdateRequest(props) {    \r\n    let propData = props.location.state.invoice;\r\n    const [invoice, setInvoice] =  useState(isNullOrUndefined(propData) ? {} : propData);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [itemList, setItemList] = useState([]);    \r\n    const [commonComment, setCommonComment] = useState({});\r\n    \r\n    useEffect(() => {\r\n        if(invoice){\r\n            getItemsToHandleRequest();\r\n        }        \r\n    }, []);\r\n    \r\n    const getItemsToHandleRequest = async (e) => {\r\n        setIsLoading(true);\r\n        try{\r\n            const result = await InvoiceAPI.getItemsToHandleRequest({\r\n                invoice_id : invoice.invoice_id,\r\n                invoice_version_id : invoice.invoice_version_id,\r\n            });\r\n            \r\n            setItemList(result.itemList);\r\n            setCommonComment(result.comment[0]);\r\n            setIsLoading(false);\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    \r\n    const onChangeHandler = (e) => {\r\n        let name = (e.target.name).split('-')[0];\r\n        let itemId = Number((e.target.name).split('-')[1]);\r\n        let UnitId = Number((e.target.name).split('-')[2]);\r\n        let value = e.target.value;\r\n\r\n        let tempList = [...itemList];\r\n        tempList.map((data) => {\r\n            if(data.item_id === itemId && data.unit_id === UnitId){\r\n                if(name === \"newQuantity\"){\r\n                    data.new_quantity = value;\r\n                }else if(name === \"newCost\"){\r\n                    data.new_total_amt = value;\r\n                }\r\n              }\r\n        });\r\n        setItemList(tempList);\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        window.history.back();\r\n    }\r\n\r\n    const handleReqestRejection = async () => {\r\n        setIsLoading(true);\r\n        setIsSubmitting(true);\r\n        try{   \r\n            const result = await InvoiceAPI.handleReqestRejection({\r\n                invoice_id : invoice.invoice_id,\r\n                invoice_version_id : invoice.invoice_version_id,\r\n                comment_id : commonComment.id,\r\n            });\r\n            setIsLoading(false); \r\n            setIsSubmitting(false);\r\n            handleCancel();\r\n        }catch(e){\r\n            console.log('Error...', e);\r\n        }\r\n    }\r\n                                            \r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        setIsSubmitting(true);\r\n        try{\r\n            const result = await InvoiceAPI.handleInvoiceToAcceptRequest({\r\n                itemList: itemList, \r\n                invoice_version_id: invoice.invoice_version_id,\r\n                invoice_id: invoice.invoice_id,\r\n                invoice_billing_id: invoice.invoice_billing_id,\r\n            });\r\n            setIsLoading(false); \r\n            setIsSubmitting(false);\r\n            handleCancel();\r\n        }catch(e){\r\n            console.log('Error...', e);\r\n        }\r\n    }\r\n    \r\n\r\n    return(\r\n    <Fragment>\r\n        <Header />\r\n            <section class=\"ftco-section\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <h3 class=\"mb-4 billing-heading\">Invoice Update Request Form</h3>\r\n                            <form onSubmit={handleSubmit} class=\"p-5 bg-light b-top-dark\">\r\n                                <div class=\"row align-items-end\">\r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Order Id: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{invoice.order_id}</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>   \r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Invoice No.:</label>\r\n                                            <div class=\"d-flex\">\r\n                                            <h6>{invoice.invoice_no}</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>                                      \r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Invoice Total: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{Number(invoice.invoice_total).toFixed(2)}</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> \r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Invoice Date: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{getDateInDDMMYYYY(invoice.invoice_date)}</h6>                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>  \r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Status: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{invoice.status_name}</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-12\"> <hr /> </div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <h5>Comment: </h5>\r\n                                            <textarea value={commonComment.comment} cols=\"30\" rows=\"5\" class=\"form-control\" required disabled ></textarea>\r\n                                        </div>\r\n                                    </div> \r\n                                    <div class=\"col-md-12\"> <hr /> </div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <h5>Invoice Items</h5>\r\n                                    </div>\r\n                                    <div class=\"w-100 table-div\">\r\n                                        <table className=\"table table-td\">\r\n                                            <thead className=\"thead-primary-border\">\r\n                                                <tr className=\"text-center\">\r\n                                                    <th style={{minWidth : '60px'}} rowSpan={2}>#</th>\r\n                                                    {/* <th style={{minWidth : '50px'}} rowSpan={2}>\r\n                                                        <input type=\"checkbox\" onChange= {handleEnableAll} checked={commonCheckBox} />\r\n                                                    </th> */}\r\n                                                    <th style={{minWidth : '200px'}} rowSpan={2}>Item</th>\r\n                                                    <th colSpan={2}>Current Value</th>\r\n                                                    <th colSpan={2}>Request to Update</th>\r\n                                                    <th style={{minWidth : '200px'}} rowSpan={2}> Comment</th>\r\n                                                </tr>\r\n                                                <tr className=\"text-center\">                                                    \r\n                                                    <th style={{minWidth : '120px'}}>Quantity</th>\r\n                                                    {/* <th style={{minWidth : '100px'}}>Unit Price</th> */}\r\n                                                    <th style={{minWidth : '130px'}}>Total Amount</th>\r\n                                                    <th style={{minWidth : '200px'}}>Quantity</th>\r\n                                                    <th style={{minWidth : '200px'}}>Cost</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                                <tbody >\r\n                                                   {(itemList.length >0 ? itemList :[]).map((data, index) => {                                                        \r\n                                                        return(\r\n                                                            <tr style={data.is_requested === 1 ? { backgroundColor: 'palegoldenrod'} : {}}>\r\n                                                                <td>{index + 1}</td>\r\n                                                                <td>{data.item_name}</td>\r\n                                                                <td>{data.quantity+ ' ' + data.unit_name}</td>\r\n                                                                {/* <td>${Number(data.unit_price).toFixed(2)}</td> */}\r\n                                                                <td>${Number(data.total_amt).toFixed(2)}</td>\r\n                                                                <td>\r\n                                                                    <div class=\"d-flex justify-content-center\">\r\n                                                                        <input type=\"number\" name={\"newQuantity-\"+data.item_id+\"-\"+data.unit_id} class=\"cost-input\" id={\"newQuantity-\"+data.item_id+\"-\"+data.unit_id}  value={data.new_quantity} min=\"0\" step=\"0.1\" onChange={onChangeHandler} required />\r\n                                                                        <p class=\"cost-input-adoptment\"> {data.unit_name} </p>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <div class=\"d-flex justify-content-center\">\r\n                                                                        <p class=\"cost-input-adoptment\"> $ </p>\r\n                                                                        <input type=\"number\" name={\"newCost-\"+data.item_id+\"-\"+data.unit_id} class=\"cost-input\" id={\"newCost-\"+data.item_id+\"-\"+data.unit_id} value={data.new_total_amt} min=\"0\" step=\"0.1\" onChange={onChangeHandler} required />\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <textarea type=\"text\" rows={2} name= {\"comment-\"+data.item_id+\"-\"+data.unit_id} id={\"comment-\"+data.item_id+\"-\"+data.unit_id} value={data.comment} disabled required></textarea>\r\n                                                                </td>                                                                \r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n                                                </tbody> \r\n                                            </table>\r\n                                        </div>                                          \r\n                                        <div class=\"form-group p-4\">\r\n                                            <button class=\"btn  px-4 btn-primary\"  type=\"submit\" disabled={isSubmitting === true} > {\"Accept & Update Invoice\"} </button>\r\n                                            &nbsp;&nbsp;&nbsp;\r\n                                            <button class=\"btn  px-4 btn-primary\"  type=\"button\" disabled={isSubmitting === true} onClick={handleReqestRejection} > Reject Request </button>\r\n                                            &nbsp;&nbsp;&nbsp;\r\n                                            <button class=\"btn  px-4 btn-primary\"   type=\"button\" onClick={handleCancel}> Cancel </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>                                                        \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        <Footer />\r\n        {isLoading ?   <CallLoader />   : null  }\r\n    </Fragment>\r\n    )\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport * as c from './config/Constants';\r\nimport checkError from './config/HttpClient';\r\nimport {authHeader} from './config/AuthHeader.js';\r\n\r\nconst PARAMS = ({ methodType = 'GET' }) => ({\r\n  method: methodType,\r\n  headers: authHeader(),\r\n});\r\n\r\nexport default {\r\n\r\n  getInvoiceList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/getInvoiceList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getItemsForUpdateRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/getItemsForUpdateRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getItemsToHandleRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/getItemsToHandleRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  postItemUpdateRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/postItemUpdateRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  postInvoiceUpdateRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/postInvoiceUpdateRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  payInvoiceBill:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/payInvoiceBill`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getTransactionDetails:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/getTransactionDetails`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  handleReqestRejection:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/handleReqestRejection`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  handleInvoiceToAcceptRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/handleInvoiceToAcceptRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  downloadOrderInvoiceVersion:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/downloadOrderInvoiceVersion`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // getMeasuredUnitofProduct:async ({...payload }) => {\r\n  //   const URL = `${c.API_CONSUMER}/staticrecords/getMeasuredUnitofProduct`;\r\n  //   try {\r\n  //     const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n  //       data: payload,\r\n  //     }),\r\n  //   );\r\n  //     return data;\r\n  //   } catch (error) {\r\n  //     checkError(error);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  // getOrderStatusList:async () => {\r\n  //   const URL = `${c.API_CONSUMER}/staticrecords/getOrderStatusList`;\r\n  //   try {\r\n  //     const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n  //     return data;\r\n  //   } catch (error) {\r\n  //     checkError(error);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  // getInvoiceStateList:async () => {\r\n  //   const URL = `${c.API_CONSUMER}/staticrecords/getInvoiceStateList`;\r\n  //   try {\r\n  //     const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n  //     return data;\r\n  //   } catch (error) {\r\n  //     checkError(error);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n};"],"sourceRoot":""}