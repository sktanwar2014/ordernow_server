{"version":3,"sources":["api/categories.js","api/static.js","Views/Admin/AddProduct.js"],"names":["PARAMS","methodType","method","headers","authHeader","getCategoryList","a","URL","c","axios","Object","assign","data","checkError","getTotalProductList","getProductUnderMainCategory","payload","getProductUnderMiddleCategory","getProductUnderSubCategory","getMainCategoryList","getMiddleCategoryList","getSubCategoryList","insertNewProduct","getRequiredStaticRecordList","AddProduct","props","useState","categoryList","setCategoryList","staticRecordList","setStaticRecordList","useEffect","StaticAPI","result","console","log","CategoriesAPI","handleSubmit","e","preventDefault","formData","mainCategoryId","document","getElementById","value","productName","sellerId","APP_TOKEN","get","userId","price","unitId","description","createdBy","history","push","alert","class","onSubmit","for","id","required","undefined","length","map","index","category_name","type","placeholder","productUnitList","name","cols","rows"],"mappings":"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","file":"static/js/6.568949c7.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport * as c from './config/Constants';\r\nimport checkError from './config/HttpClient';\r\nimport {authHeader} from './config/AuthHeader.js';\r\n\r\nconst PARAMS = ({ methodType = 'GET' }) => ({\r\n  method: methodType,\r\n  headers: authHeader(),\r\n});\r\n\r\nexport default {\r\n\r\n  getCategoryList:async () => {\r\n    const URL = `${c.API_CONSUMER}/categories/getCategoryList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  \r\n  // getAllCategoryTableRecords:async () => {\r\n  //   const URL = `${c.API_CONSUMER}/categories/getAllCategoryTableRecords`;\r\n  //   try {\r\n  //     const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n  //     return data;\r\n  //   } catch (error) {\r\n  //     checkError(error);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  getTotalProductList:async () => {\r\n    const URL = `${c.API_CONSUMER}/categories/getTotalProductList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n \r\n  getProductUnderMainCategory:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getProductUnderMainCategory`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getProductUnderMiddleCategory:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getProductUnderMiddleCategory`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getProductUnderSubCategory:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getProductUnderSubCategory`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getMainCategoryList:async () => {\r\n    const URL = `${c.API_CONSUMER}/categories/getMainCategoryList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getMiddleCategoryList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getMiddleCategoryList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getSubCategoryList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getSubCategoryList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  insertNewProduct:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/insertNewProduct`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n};","import axios from 'axios';\r\nimport * as c from './config/Constants';\r\nimport checkError from './config/HttpClient';\r\nimport {authHeader} from './config/AuthHeader.js';\r\n\r\nconst PARAMS = ({ methodType = 'GET' }) => ({\r\n  method: methodType,\r\n  headers: authHeader(),\r\n});\r\n\r\nexport default {\r\n\r\n  getRequiredStaticRecordList:async () => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getRequiredStaticRecordList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n};","import React, {useState, useEffect, Fragment} from 'react';\r\n\r\n//Components \r\nimport CategoriesAPI from '../../api/categories.js';\r\nimport {APP_TOKEN} from '../../api/config/Constants.js';\r\nimport StaticAPI from '../../api/static.js';\r\nimport Header from '../Partials/Header.js';\r\nimport Footer from '../Partials/Footer.js';\r\n\r\n\r\nexport default function AddProduct(props) {\r\n\r\n    // const [mainCategory, setMainCategory] = useState([]);\r\n    // const [middleCategory, setMiddleCategory] = useState([]);\r\n    // const [subCategory, setSubCategory] = useState([]);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [staticRecordList, setStaticRecordList] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        getCategoryList();\r\n        getRequiredStaticRecordList();\r\n    },[]);\r\n\r\n    const getRequiredStaticRecordList = async () => {\r\n        try{\r\n            const result = await StaticAPI.getRequiredStaticRecordList();\r\n            setStaticRecordList(result);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n    const getCategoryList = async () => {\r\n        try{\r\n            const result = await CategoriesAPI.getCategoryList();\r\n            setCategoryList(result.categoryList);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    // const getMainCategoryList = async () => {\r\n    //     // document.getElementById('middleCategoryDropDown').value = \"\";\r\n    //     // setMiddleCategory([]);\r\n    //     try{\r\n    //         const result = await CategoriesAPI.getMainCategoryList();\r\n    //         setMainCategory(result.mainCategoriesList);\r\n    //     }catch(e){\r\n    //         console.log('Error...',e);\r\n    //     }\r\n    // }\r\n\r\n    // const getMiddleCategoryList = async () => {\r\n    //     // document.getElementById('subCategoryDropDown').value = \"\";\r\n    //     // setSubCategory([]);\r\n        \r\n    //     let id = document.getElementById('mainCategoryDropDown').value;        \r\n\r\n    //     if(id !== '' && id !== undefined && id !== null){\r\n    //         try{\r\n    //             const result = await CategoriesAPI.getMiddleCategoryList({mainCategoryId: id});\r\n    //             setMiddleCategory(result.middleCategoriesList);\r\n    //         }catch(e){\r\n    //             console.log('Error...',e);\r\n    //         }\r\n    //     }        \r\n    // }\r\n\r\n    // const getSubCategoryList = async () => {\r\n    //     let id = document.getElementById('middleCategoryDropDown').value;\r\n    //     if(id !== '' && id !== undefined && id !== null){\r\n    //         try{\r\n    //             const result = await CategoriesAPI.getSubCategoryList({middleCategoryId: id});\r\n    //             setSubCategory(result.subCategoriesList);\r\n    //         }catch(e){\r\n    //             console.log('Error...',e);\r\n    //         }\r\n    //     }\r\n    // }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try{\r\n            const formData = {\r\n                // mainCategoryId : document.getElementById('mainCategoryDropDown').value,\r\n                // middleCategoryId : document.getElementById('middleCategoryDropDown').value,\r\n                // subCategoryId : document.getElementById('subCategoryDropDown').value,\r\n                mainCategoryId : document.getElementById('categoryDropDown').value,\r\n                productName : document.getElementById('productName').value,\r\n                // brandId : document.getElementById('productBrand').value,\r\n                // colorId : document.getElementById('productColor').value,\r\n                // modelNo : document.getElementById('modelNo').value,\r\n                sellerId : APP_TOKEN.get().userId,\r\n                price : document.getElementById('productPrice').value,\r\n                unitId : document.getElementById('unit_measurement').value,\r\n                description : document.getElementById('productDescription').value,\r\n                createdBy :  APP_TOKEN.get().userId,\r\n            };\r\n            const result = await CategoriesAPI.insertNewProduct(formData);\r\n            if(result === true){    // true = inserted\r\n                props.history.push('/');\r\n            }else{\r\n                alert('Failed Insertion');\r\n            }            \r\n        }catch(e){\r\n            console.log('Error...', e);\r\n        }\r\n    }\r\n\r\n    return(\r\n    <Fragment>\r\n        <Header />\r\n            <section class=\"ftco-section\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <h3 class=\"mb-4 billing-heading\">Add New Product</h3>\r\n                            <form onSubmit={handleSubmit} class=\"p-5 bg-light\">\r\n                                    <div class=\"row align-items-end\">\r\n                                        {/* <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"country\">Main Category *</label>\r\n                                                <div class=\"select-wrap\">\r\n                                                    <select id=\"mainCategoryDropDown\" class=\"form-control\" onChange={getMiddleCategoryList} required >                                                        \r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(mainCategory !== undefined && mainCategory !== null && mainCategory !== \"\") && \r\n                                                         (mainCategory.length > 0 ?mainCategory : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                                <option id={data.id} value={data.id} >{data.category_name}</option>\r\n                                                            )\r\n                                                         })\r\n                                                        }\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                            <label for=\"country\">Middle Category *</label>\r\n                                                <div class=\"select-wrap\">\r\n                                                    <select id=\"middleCategoryDropDown\" class=\"form-control\" onChange={getSubCategoryList} required>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(middleCategory !== undefined && middleCategory !== null && middleCategory !== \"\") && \r\n                                                         (middleCategory.length > 0 ? middleCategory : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                                <option id={data.id} value={data.id}>{data.category_name}</option>\r\n                                                            )\r\n                                                         })\r\n                                                        }\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"country\">Sub Category * </label>\r\n                                                <div class=\"select-wrap\">\r\n                                                    <select id=\"subCategoryDropDown\" class=\"form-control\" required>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(subCategory !== undefined && subCategory !== null && subCategory !== \"\") && \r\n                                                         (subCategory.length > 0 ? subCategory : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                                <option id={data.id} value={data.id} >{data.category_name}</option>\r\n                                                            )\r\n                                                         })\r\n                                                        }\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> */}\r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"country\">Category * </label>\r\n                                                <div class=\"select-wrap\">\r\n                                                    <select id=\"categoryDropDown\" class=\"form-control\" required>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(categoryList !== undefined && categoryList !== null && categoryList !== \"\") && \r\n                                                         (categoryList.length > 0 ? categoryList : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                                <option id={data.id} value={data.id} >{data.category_name}</option>\r\n                                                            )\r\n                                                         })\r\n                                                        }\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>                                         \r\n                                        <div class=\"col-md-8\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"productName\">product Name *</label>\r\n                                                <input id=\"productName\" type=\"text\" class=\"form-control\" placeholder=\"\" required/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"w-100\"></div>\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"unit_measurement\">Unit/Measurement *</label>\r\n                                                <div class=\"select-wrap\">                                                \r\n                                                    <select id=\"unit_measurement\" class=\"form-control\" required>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(staticRecordList.productUnitList !== undefined && staticRecordList.productUnitList !== null && staticRecordList.productUnitList !== \"\") && \r\n                                                        (staticRecordList.productUnitList.length > 0 ? staticRecordList.productUnitList : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                                <option id={data.id} value={data.id} >{data.value}</option>\r\n                                                            )\r\n                                                        })\r\n                                                        }\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {/* <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"modelNo\">Model No *</label>\r\n                                                <input id=\"modelNo\" type=\"text\" class=\"form-control\" placeholder=\"\" required/>\r\n                                            </div>\r\n                                        </div> */}\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"productPrice\">Price (In $)*</label>\r\n                                                <input id=\"productPrice\" type=\"text\" class=\"form-control\" placeholder=\"\" required/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"w-100\"></div>\r\n                                        {/* <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"brand\">Brand *</label>\r\n                                                <div class=\"select-wrap\">\r\n                                                    <select id=\"productBrand\" class=\"form-control\" required>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(staticRecordList.brandList !== undefined && staticRecordList.brandList !== null && staticRecordList.brandList !== \"\") && \r\n                                                        (staticRecordList.brandList.length > 0 ? staticRecordList.brandList : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                                <option id={data.id} value={data.id} >{data.value}</option>\r\n                                                            )\r\n                                                        })\r\n                                                        }\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>                                \r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"color\">Color *</label>\r\n                                                <div class=\"select-wrap\">\r\n                                                    <select id=\"productColor\" class=\"form-control\" required>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(staticRecordList.colorList !== undefined && staticRecordList.colorList !== null && staticRecordList.colorList !== \"\") && \r\n                                                        (staticRecordList.colorList.length > 0 ? staticRecordList.colorList : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                                <option id={data.id} value={data.id} >{data.value}</option>\r\n                                                            )\r\n                                                        })\r\n                                                        }\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>   \r\n                                        <div class=\"w-100\"></div> */}\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"description\">Description *</label>\r\n                                                <textarea name=\"\" id=\"productDescription\" cols=\"30\" rows=\"10\" class=\"form-control\" required></textarea>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"w-100\"></div>\r\n                                        <div class=\"form-group p-4\">\r\n                                            <input type=\"submit\" value=\"Submit\" class=\"btn  px-4 btn-primary\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        <Footer />\r\n    </Fragment>\r\n    )\r\n}"],"sourceRoot":""}