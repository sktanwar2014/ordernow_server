{"version":3,"sources":["Views/Admin/ViewOrder.js"],"names":["ViewOrder","useState","orderList","setOrderList","orderedProductList","setOrderedProductList","tabValue","setTabValue","useEffect","getOrderList","a","OrderAPI","order_status","result","orderedProducts","console","log","proceedToDelivered","orderId","handleTabChange","index","className","class","id","onClick","href","data-toggle","length","map","order","totalProduct","filter","pro","order_id","product","rowspan","getDateInDDMMYYYY","order_date","full_name","product_name","price","unit_name","quantity","ordered_unit_name","total","flat_add","street_add","city","style","display"],"mappings":"6NAQe,SAASA,IAAa,IAAD,EAEDC,mBAAS,IAFR,mBAE5BC,EAF4B,KAEjBC,EAFiB,OAGoBF,mBAAS,IAH7B,mBAGzBG,EAHyB,KAGLC,EAHK,OAIAJ,mBAAS,GAJT,mBAIzBK,EAJyB,KAIfC,EAJe,KAMhCC,qBAAU,WACZC,MACI,CAACH,IAEH,IAAMG,EAAY,uCAAG,4BAAAC,EAAA,+EAEQC,IAASF,aAAa,CACvCG,aAAeN,IAHN,OAEPO,EAFO,OAKbV,EAAaU,EAAOX,WACpBG,EAAsBQ,EAAOC,iBANhB,gDAQbC,QAAQC,IAAI,WAAZ,MARa,yDAAH,qDAYlBD,QAAQC,IAAId,EAAWE,GAEvB,IAAMa,EAAkB,uCAAG,WAAOC,GAAP,eAAAR,EAAA,+EAEEC,IAASM,mBAAmB,CAC7CC,QAAUA,EACVN,aAAeN,IAJA,OAEbO,EAFa,OAMnBV,EAAaU,EAAOX,WACpBG,EAAsBQ,EAAOC,iBAPV,gDASnBC,QAAQC,IAAI,WAAZ,MATmB,yDAAH,sDAclBG,EAAkB,SAACC,GACrBb,EAAYa,IAIhB,OACF,kBAAC,WAAD,KACC,kBAAC,IAAD,MACA,6BAASC,UAAU,gBACN,yBAAKC,MAAM,aACP,yBAAKA,MAAM,8BACP,yBAAKA,MAAM,iDACP,wBAAIA,MAAM,wBAAV,cACI,yBAAKC,GAAG,SAASD,MAAM,aACnB,wBAAIA,MAAM,4BACN,wBAAIA,MAAM,UACN,uBAAGE,QAAS,WAAOL,EAAgB,IAAKM,KAAK,GAAGC,cAAY,OAA5D,gBAEJ,4BACI,uBAAGF,QAAS,WAAOL,EAAgB,IAAKM,KAAK,GAAGC,cAAY,OAA5D,eAGR,yBAAKJ,MAAM,4BACP,yBAAKA,MAAM,mBACX,2BAAOD,UAAU,SAC/B,+BACI,wBAAIC,MAAM,eACY,iCACA,0CACA,wCACA,wCACA,uCACA,qCACA,wCACA,qCACA,uCACA,qCACc,IAAbhB,GAAkB,wCAG7C,gCACwBJ,EAAUyB,OAAO,EAAIzB,EAAW,IAAI0B,KAAI,SAACC,EAAOT,GAC9C,IAAIU,EAAe1B,EAAmB2B,QAAO,SAAAC,GAAG,OAAIA,EAAIC,WAAaJ,EAAMN,MAAII,OAC/E,OACKvB,EAAmBuB,OAAQ,EAAIvB,EAAoB,IAAIwB,KAAI,SAACM,GACzD,GAAGA,EAAQD,WAAaJ,EAAMN,GAC9B,OACI,wBAAID,MAAM,eACY,IAAjBQ,GACG,kBAAC,WAAD,KACI,wBAAIK,QAASL,GAAeV,EAAQ,GACpC,wBAAIe,QAASL,GAAeM,YAAkBP,EAAMQ,aACpD,wBAAIF,QAASL,GAAeD,EAAMI,UAClC,wBAAIE,QAASL,GAAeD,EAAMS,YAG1C,4BAAKJ,EAAQK,cACb,uCAASL,EAAQM,MAAjB,YAA0BN,EAAQO,YAClC,sCAAQP,EAAQQ,SAAhB,YAA4BR,EAAQS,oBACpC,4BAAKT,EAAQU,OACK,IAAjBd,GACG,kBAAC,WAAD,KACI,wBAAIK,QAASL,GAAb,UAA+BD,EAAMgB,SAArC,aAAkDhB,EAAMiB,WAAxD,aAAuEjB,EAAMkB,OAC7E,wBAAIZ,QAASL,GAAeD,EAAMe,OACpB,IAAbtC,GAAkB,wBAAI6B,QAASL,GAAc,uBAAGL,KAAK,GAAGD,QAAS,WAAKP,EAAmBY,EAAMN,MAAlD,wBAGtD,yBAAKyB,MAAO,CAACC,QAAQ,SAAUnB,EAAe,mBAgChH,kBAAC,IAAD","file":"static/js/9.71837f4e.chunk.js","sourcesContent":["import React, {useState, useEffect, Fragment} from 'react';\r\n\r\n//Components \r\nimport Header from '../Partials/Header.js';\r\nimport Footer from '../Partials/Footer.js';\r\nimport OrderAPI from '../../api/order.js';\r\nimport {getDateInDDMMYYYY} from '../../common/moment.js';\r\n\r\nexport default function ViewOrder() {\r\n\r\n\tconst [orderList, setOrderList] = useState([]);\r\n    const [orderedProductList, setOrderedProductList] = useState([]);\r\n    const [tabValue, setTabValue] = useState(1);\r\n\r\n    useEffect(()=>{\r\n\t\tgetOrderList();\t\t\r\n    },[tabValue]);\r\n\r\n    const getOrderList = async () => {\r\n        try{\r\n            const result = await OrderAPI.getOrderList({\r\n                order_status : tabValue,\r\n            });\r\n            setOrderList(result.orderList);            \r\n            setOrderedProductList(result.orderedProducts);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    console.log(orderList, orderedProductList)\r\n\r\n    const proceedToDelivered = async (orderId) => {\r\n        try{\r\n            const result = await OrderAPI.proceedToDelivered({\r\n                orderId : orderId,\r\n                order_status : tabValue,\r\n            });\r\n            setOrderList(result.orderList);\r\n            setOrderedProductList(result.orderedProducts);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    \r\n    const handleTabChange = (index) =>{\r\n        setTabValue(index)        \r\n    }\r\n\r\n\r\n    return(\r\n\t\t<Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<section className=\"ftco-section\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <h3 class=\"mb-4 billing-heading\">Order List</h3>\r\n                                <div id=\"exTab2\" class=\"container\">\t\r\n                                    <ul class=\"tab-panel tab-panel-tabs\">\r\n                                        <li class=\"active\">\r\n                                            <a onClick={() => {handleTabChange(1)}} href=\"\" data-toggle=\"tab\">Undelivered</a>\r\n                                        </li>\r\n                                        <li>\r\n                                            <a onClick={() => {handleTabChange(2)}} href=\"\" data-toggle=\"tab\">Delivered</a>\r\n                                        </li>                                        \r\n                                    </ul>\r\n                                    <div class=\"tab-content p-5 bg-light\">\r\n                                        <div class=\"tab-pane active\">\r\n                                        <table className=\"table\">\r\n\t\t\t\t\t\t                    <thead>\r\n\t\t\t\t\t\t                        <tr class=\"text-center\">\r\n                                                    <th>#</th>\r\n                                                    <th>Order Date</th>\r\n                                                    <th>Order Id</th>\r\n                                                    <th>Customer</th>\r\n                                                    <th>Product</th>\r\n                                                    <th>Price</th>\r\n                                                    <th>Quantity</th>\r\n                                                    <th>Total</th>\r\n                                                    <th>Address</th>\r\n                                                    <th>Total</th>\r\n                                                    {tabValue === 1 && <th>Action</th>}\r\n                    \t\t\t\t\t        </tr>\r\n\t\t\t\t\t\t                    </thead>\r\n\t\t\t\t\t\t                    <tbody>\r\n                                                {(orderList.length>0 ? orderList :[]).map((order, index) => {                                                    \r\n                                                    let totalProduct = orderedProductList.filter(pro => pro.order_id === order.id).length;                                                    \r\n                                                    return(\r\n                                                        (orderedProductList.length >0 ? orderedProductList :[]).map((product) =>  {\r\n                                                            if(product.order_id === order.id){\r\n                                                            return(\r\n                                                                <tr class=\"text-center\">\r\n                                                                    {totalProduct !== 0 &&                                                                    \r\n                                                                        <Fragment>                                                                            \r\n                                                                            <td rowspan={totalProduct}>{index + 1}</td>\r\n                                                                            <td rowspan={totalProduct}>{getDateInDDMMYYYY(order.order_date)}</td>\r\n                                                                            <td rowspan={totalProduct}>{order.order_id}</td>\r\n                                                                            <td rowspan={totalProduct}>{order.full_name}</td>\r\n                                                                        </Fragment>\r\n                                                                    }\r\n                                                                    <td>{product.product_name}</td>\r\n                                                                    <td>{`$${product.price}/${product.unit_name}`}</td>\r\n                                                                    <td>{`${product.quantity}/${product.ordered_unit_name}`}</td>\r\n                                                                    <td>{product.total}</td>\r\n                                                                    {totalProduct !== 0 &&\r\n                                                                        <Fragment>\r\n                                                                            <td rowspan={totalProduct}>{`${order.flat_add}, ${order.street_add}, ${order.city}`}</td>\r\n                                                                            <td rowspan={totalProduct}>{order.total}</td>\r\n                                                                            {tabValue === 1 && <td rowspan={totalProduct}><a href=\"\" onClick={()=>{proceedToDelivered(order.id)}}>Click to delivered</a></td>}\r\n                                                                        </Fragment>\r\n                                                                    }   \r\n                                                                    <div style={{display:'none'}}>{totalProduct = 0}</div>\r\n                                                                </tr>\r\n                                                                )\r\n                                                            }\r\n                                                            })\r\n                                                        )\r\n                                                    })\r\n                                                }\t\t\t\t\t\t                       \r\n                \t\t\t\t\t\t    </tbody>\r\n\t\t\t\t\t\t                </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\t\t\t\t\t{/* <div className=\"row mt-5\">\r\n\t\t\t\t\t\t<div className=\"col text-center\">\r\n\t\t\t\t\t\t\t<div className=\"block-27\">\r\n\t\t\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t\t\t<li><a href=\"#\">&lt;</a></li>\r\n\t\t\t\t\t\t\t\t<li className=\"active\"><span>1</span></li>\r\n\t\t\t\t\t\t\t\t<li><a href=\"#\">2</a></li>\r\n\t\t\t\t\t\t\t\t<li><a href=\"#\">3</a></li>\r\n\t\t\t\t\t\t\t\t<li><a href=\"#\">4</a></li>\r\n\t\t\t\t\t\t\t\t<li><a href=\"#\">5</a></li>\r\n\t\t\t\t\t\t\t\t<li><a href=\"#\">&gt;</a></li>\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div> */}\r\n    </section>\r\n\t\t<Footer />\r\n\t</Fragment>\r\n    )\r\n}"],"sourceRoot":""}