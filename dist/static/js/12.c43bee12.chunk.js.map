{"version":3,"sources":["Views/Admin/Report/ViewOrderedProductReport.js"],"names":["RESET_VALUES","toDate","Date","fromDate","ViewOrderedProduct","useState","inputs","setInputs","orderedProductList","setOrderedProductList","isLoading","setIsLoading","useEffect","getOrderedProductList","handleInputChange","e","target","name","value","a","OrderAPI","from_date","getDate","to_date","result","console","log","className","class","for","id","type","onChange","onClick","length","map","data","index","product_name","weight","unit_name"],"mappings":"sPAWMA,EAAe,CACjBC,OAAS,IAAIC,KACbC,SAAW,IAAID,MAIJ,SAASE,IAAsB,IAAD,EAEZC,mBAASL,GAFG,mBAElCM,EAFkC,KAE1BC,EAF0B,OAGWF,mBAAS,IAHpB,mBAGlCG,EAHkC,KAGdC,EAHc,OAIPJ,oBAAS,GAJF,mBAIlCK,EAJkC,KAIvBC,EAJuB,KAOzCC,qBAAU,WACZC,MACI,IAIL,IAAOC,EAAoB,SAACC,GAC3BR,EAAU,eAAID,EAAL,eAAcS,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAGxCL,EAAqB,uCAAG,4BAAAM,EAAA,6DAC1BR,GAAa,GADa,kBAGDS,IAASP,sBAAsB,CAChDQ,UAAYC,YAAQhB,EAAOH,UAC3BoB,QAAUD,YAAQhB,EAAOL,UALP,OAGhBuB,EAHgB,OAOtBf,EAAsBe,EAAOhB,oBAPP,gDAStBiB,QAAQC,IAAI,WAAZ,MATsB,QAW1Bf,GAAa,GAXa,yDAAH,qDAe3B,OACF,kBAAC,WAAD,KACC,kBAAC,IAAD,MACA,6BAASgB,UAAU,gBACN,yBAAKC,MAAM,aACX,kEACA,yBAAKA,MAAM,0CACH,yBAAKA,MAAM,iDACP,yBAAKA,MAAM,2BACH,yBAAKA,MAAM,uBACP,yBAAKA,MAAM,YACP,yBAAKA,MAAM,cACP,2BAAOC,IAAI,YAAX,WACA,2BAAOC,GAAG,WAAWb,KAAK,WAAWc,KAAK,OAAOb,MAAOI,YAAQhB,EAAOH,UAAWyB,MAAM,eAAgBI,SAAUlB,MAG1H,yBAAKc,MAAM,YACP,yBAAKA,MAAM,cACP,2BAAOC,IAAI,UAAX,SACA,2BAAOC,GAAG,SAASb,KAAK,SAASc,KAAK,OAAOb,MAAOI,YAAQhB,EAAOL,QAAS2B,MAAM,eAAeI,SAAUlB,MAGnH,yBAAKc,MAAM,yBACP,yBAAKA,MAAM,cACP,yBAAKA,MAAM,kBACX,4BAAQA,MAAM,uBAAuBK,QAASpB,GAA9C,qBAIR,yBAAKe,MAAM,SACP,2BAAOD,UAAU,oBACb,+BACI,4BACI,iCACA,wCACA,gDAGR,gCACMnB,EAAmB0B,OAAO,EAAI1B,EAAoB,IAAI2B,KAAI,SAACC,EAAMC,GACnE,OACI,4BACI,4BAAKA,EAAQ,GACb,4BAAKD,EAAKE,cACV,4BAAKF,EAAKG,OAAQ,IAAMH,EAAKI,wBAevF,kBAAC,IAAD,MACO9B,EAAc,kBAAC,IAAD,MAAmB","file":"static/js/12.c43bee12.chunk.js","sourcesContent":["import React, {useState, useEffect, Fragment} from 'react';\r\n\r\n//Components \r\nimport Header from '../../Partials/Header.js';\r\nimport Footer from '../../Partials/Footer.js';\r\nimport OrderAPI from '../../../api/order.js';\r\nimport {getDate} from '../../../common/moment.js';\r\nimport CallLoader from '../../../common/Loader.js';\r\n\r\n\r\n\r\nconst RESET_VALUES = {\r\n    toDate : new Date(),\r\n    fromDate : new Date(),\r\n}\r\n\r\n\r\nexport default function ViewOrderedProduct() {\r\n\r\n    const [inputs, setInputs] =  useState(RESET_VALUES);\r\n    const [orderedProductList, setOrderedProductList] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    \r\n\r\n    useEffect(()=>{\r\n\t\tgetOrderedProductList();\t\t\r\n    },[]);\r\n\r\n\r\n    \r\n\tconst  handleInputChange = (e) => {\r\n\t\tsetInputs({...inputs, [e.target.name]: e.target.value});\r\n\t}\r\n\r\n    const getOrderedProductList = async () => {\r\n        setIsLoading(true);\r\n        try{\r\n            const result = await OrderAPI.getOrderedProductList({\r\n                from_date : getDate(inputs.fromDate),\r\n                to_date : getDate(inputs.toDate),\r\n            });\r\n            setOrderedProductList(result.orderedProductList);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n        setIsLoading(false);\r\n    }\r\n\r\n\r\n    return(\r\n\t\t<Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<section className=\"ftco-section\">\r\n                <div class=\"container\">\r\n                <h3>View Total Required Products List </h3>\r\n                <div class=\"row justify-content-center p-bottom-30\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <div class=\"p-5 bg-light b-top-dark\">\r\n                                    <div class=\"row align-items-end\">\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"fromDate\">From * </label>\r\n                                                <input id=\"fromDate\" name=\"fromDate\" type=\"date\" value={getDate(inputs.fromDate)} class=\"form-control\"  onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>   \r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"toDate\">To * </label>\r\n                                                <input id=\"toDate\" name=\"toDate\" type=\"date\" value={getDate(inputs.toDate)} class=\"form-control\" onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>  \r\n                                        <div class=\"col-md-12 m-bottom-20\">\r\n                                            <div class=\"form-group\">\r\n                                                <div class=\"d-flex f-right\">\r\n                                                <button class=\"btn btn-primary px-4\" onClick={getOrderedProductList}> Click to view</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"w-100\">\r\n                                            <table className=\"unit-array-table\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Products</th>\r\n                                                        <th>Total Quantity</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {(orderedProductList.length>0 ? orderedProductList :[]).map((data, index) => {                                                    \r\n                                                    return(\r\n                                                        <tr>\r\n                                                            <td>{index + 1}</td>\r\n                                                            <td>{data.product_name}</td>\r\n                                                            <td>{data.weight+ ' ' + data.unit_name}</td>\r\n                                                        </tr>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n                    \r\n                </div>\r\n    </section>\r\n\t\t<Footer />\r\n        {isLoading ?   <CallLoader />   : null  }\r\n\t</Fragment>\r\n    )\r\n}"],"sourceRoot":""}