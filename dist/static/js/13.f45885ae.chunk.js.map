{"version":3,"sources":["Views/Admin/ViewOrderedProduct.js"],"names":["RESET_VALUES","date","Date","ViewOrderedProduct","useState","inputs","setInputs","orderedProductList","setOrderedProductList","userId","APP_TOKEN","get","isLoading","setIsLoading","useEffect","getOrderedProductListSingleDay","a","OrderAPI","getDate","result","orderedProductListSingleDay","console","log","handlePurchasedRecord","data","purchasedQuantity","document","getElementById","id","value","productCost","product_id","purchase_date","required_quantity","weight","required_unit_id","main_unit_id","purchased_quantity","purchased_unit_id","cost","created_by","undefined","alert","className","class","for","name","type","onChange","e","target","onClick","length","map","index","product_name","unit_name","defaultValue","min","disabled","purchased_status"],"mappings":"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","file":"static/js/13.f45885ae.chunk.js","sourcesContent":["import React, {useState, useEffect, Fragment} from 'react';\r\n\r\n//Components \r\nimport Header from '../Partials/Header.js';\r\nimport Footer from '../Partials/Footer.js';\r\nimport OrderAPI from '../../api/order.js';\r\nimport {APP_TOKEN} from '../../api/config/Constants.js';\r\nimport CallLoader from '../../common/Loader.js';\r\n\r\nimport {getDateInDDMMYYYY, getDate} from '../../common/moment.js';\r\n\r\n\r\nconst RESET_VALUES = {\r\n    date : new Date(),\r\n}\r\n\r\n\r\nexport default function ViewOrderedProduct() {\r\n\r\n    const [inputs, setInputs] =  useState(RESET_VALUES);\r\n    const [orderedProductList, setOrderedProductList] = useState([]);\r\n    const userId = APP_TOKEN.get().userId;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(()=>{\r\n\t\tgetOrderedProductListSingleDay();\t\t\r\n    },[]);\r\n\r\n\r\n    \r\n\tconst  handleInputChange = (e) => {\r\n\t\tsetInputs({...inputs, [e.target.name]: e.target.value});\r\n\t}\r\n\r\n    const getOrderedProductListSingleDay = async () => {\r\n        setIsLoading(true);\r\n\r\n        try{\r\n            const result = await OrderAPI.getOrderedProductListSingleDay({\r\n                date : getDate(inputs.date),\r\n            });\r\n            setOrderedProductList(result.orderedProductListSingleDay);   \r\n            setIsLoading(false);\r\n\r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    const handlePurchasedRecord = async (data) => {\r\n        setIsLoading(true);\r\n\r\n        let purchasedQuantity  = document.getElementById('purchasedQuantity-'+data.id).value;\r\n        let productCost  = document.getElementById('productCost-'+data.id).value;\r\n\r\n        if(purchasedQuantity !== \"\" && productCost!== \"\"){\r\n            try{\r\n                const result = await OrderAPI.handlePurchasedRecord({\r\n                    product_id : data.id,\r\n                    purchase_date : getDate(inputs.date),\r\n                    required_quantity : data.weight,\r\n                    required_unit_id : data.main_unit_id,\r\n                    purchased_quantity : purchasedQuantity,\r\n                    purchased_unit_id : data.main_unit_id,\r\n                    cost : productCost,\r\n                    created_by : userId,\r\n                });\r\n               setIsLoading(false);\r\n\r\n                if(result !== \"\" && result !== null && result !== undefined){\r\n                    alert('Data update successfully.');\r\n                }\r\n            }catch(e){\r\n                console.log(e);\r\n            }\r\n        }else{\r\n            alert('fill the fields');\r\n        }\r\n    }\r\n\r\n    return(\r\n\t\t<Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<section className=\"ftco-section\">\r\n                <div class=\"container\">\r\n                <h3>Ordered Products </h3>\r\n                <div class=\"row justify-content-center p-bottom-30\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <div class=\"p-5 bg-light b-top-dark\">\r\n                                    <div class=\"row align-items-end\">\r\n                                        {/* <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"fromDate\">From * </label>\r\n                                                <input id=\"fromDate\" name=\"fromDate\" type=\"date\" value={getDate(inputs.fromDate)} class=\"form-control\"  onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>    */}\r\n                                        {/* <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"toDate\">To * </label>\r\n                                                <input id=\"toDate\" name=\"toDate\" type=\"date\" value={getDate(inputs.toDate)} class=\"form-control\" onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>   */}\r\n                                        <div class=\"col-md-9\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"date\">Date * </label>\r\n                                                <input id=\"date\" name=\"date\" type=\"date\" value={getDate(inputs.date)} class=\"form-control\" onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>  \r\n                                        <div class=\"col-md-3 m-bottom-20\">\r\n                                            <div class=\"form-group\">\r\n                                                <div class=\"d-flex f-right\">\r\n                                                <button class=\"btn btn-primary px-4\" onClick={getOrderedProductListSingleDay}> Click to view</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"w-100\">\r\n                                            <table className=\"unit-array-table table-min-width\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Products</th>\r\n                                                        <th>Ordered Quantity</th>\r\n                                                        <th>Purchased Quantity</th>\r\n                                                        <th>Cost</th>\r\n                                                        <th>Actions</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {(orderedProductList.length>0 ? orderedProductList :[]).map((data, index) => {                                                    \r\n                                                    return(\r\n                                                        <tr>\r\n                                                            <td>{index + 1}</td>\r\n                                                            <td>{data.product_name}</td>\r\n                                                            <td>{data.weight+ ' ' + data.unit_name}</td>\r\n                                                            <td>\r\n                                                                <div class=\"d-flex justify-content-center\">\r\n                                                                    <input type=\"number\" name={\"purchasedQuantity-\"+data.id} class=\"cost-input\" id={\"purchasedQuantity-\"+data.id} defaultValue={data.purchased_quantity}  min=\"1\" disabled={data.purchased_status === 3} />\r\n                                                                    <p class=\"cost-input-adoptment\"> {data.unit_name} </p>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <div class=\"d-flex justify-content-center\">\r\n                                                                    <p class=\"cost-input-adoptment\"> $ </p>\r\n                                                                    <input type=\"number\" name={\"productCost-\"+data.id} class=\"cost-input\" id={\"productCost-\"+data.id} defaultValue={data.cost} min=\"1\"  disabled={data.purchased_status === 3} />\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <div>\r\n                                                                    <button class={data.purchased_status === 3 ?  \"alter-purchase-record btn-disabled\" : \"alter-purchase-record\" }type=\"submit\" onClick={()=>{handlePurchasedRecord(data)}} disabled={data.purchased_status === 3}> Update</button>\r\n                                                                </div>\r\n                                                                </td>\r\n                                                        </tr>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n                    \r\n                </div>\r\n    </section>\r\n\t\t<Footer />\r\n        {isLoading ?   <CallLoader />   : null  }\r\n\t</Fragment>\r\n    )\r\n}"],"sourceRoot":""}