{"version":3,"sources":["Views/Invoices/Admin/ViewTransactionReceipt.js","api/invoices.js"],"names":["PaymentPanel","props","propData","location","state","invoice","useState","isNullOrUndefined","isLoading","setIsLoading","transaction","setTransaction","useEffect","getTransactionDetails","a","InvoiceAPI","invoice_version_id","invoice_id","result","console","log","class","order_id","invoice_no","Number","invoice_total","toFixed","getDateInDDMMYYYY","invoice_date","status_name","transaction_no","fullDateTime","transaction_at","document","align","for","href","API_URL","download","style","height","className","src","alt","type","onClick","window","history","back","PARAMS","methodType","method","headers","authHeader","getInvoiceList","payload","URL","c","axios","Object","assign","data","checkError","getItemsForUpdateRequest","getItemsToHandleRequest","postItemUpdateRequest","postInvoiceUpdateRequest","payInvoiceBill","handleReqestRejection","handleInvoiceToAcceptRequest","downloadOrderInvoiceVersion"],"mappings":"0QAce,SAASA,EAAaC,GACjC,IAAIC,EAAWD,EAAME,SAASC,MAAMC,QADI,EAETC,mBAASC,4BAAkBL,GAAY,GAAKA,GAFnC,mBAEjCG,EAFiC,aAGNC,oBAAS,IAHH,mBAGjCE,EAHiC,KAGtBC,EAHsB,OAIFH,mBAAS,IAJP,mBAIjCI,EAJiC,KAIpBC,EAJoB,KAMxCC,qBAAU,WACNC,MACF,IAEF,IAAMA,EAAqB,uCAAG,4BAAAC,EAAA,6DAC1BL,GAAa,GADa,kBAGDM,IAAWF,sBAAsB,CAClDG,mBAAoBX,EAAQW,mBAC5BC,WAAYZ,EAAQY,aALF,OAGhBC,EAHgB,OAOtBP,EAAeO,EAAOR,YAAY,IAClCD,GAAa,GARS,gDAUtBU,QAAQC,IAAI,WAAZ,MAVsB,yDAAH,qDAc3B,OACA,kBAAC,WAAD,KACI,kBAAC,IAAD,MACI,6BAASC,MAAM,gBACX,yBAAKA,MAAM,aACP,yBAAKA,MAAM,8BACP,yBAAKA,MAAM,iDACP,wBAAIA,MAAM,wBAAV,gBACA,0BAAMA,MAAM,2BACR,yBAAKA,MAAM,uBACX,yBAAKA,MAAM,YACH,yBAAKA,MAAM,cACP,6CACA,yBAAKA,MAAM,UACP,4BAAKhB,EAAQiB,aAIzB,yBAAKD,MAAM,YACP,yBAAKA,MAAM,cACP,+CACA,yBAAKA,MAAM,UACX,4BAAKhB,EAAQkB,eAIrB,yBAAKF,MAAM,YACP,yBAAKA,MAAM,cACP,kDACA,yBAAKA,MAAM,UACP,4BAAKG,OAAOnB,EAAQoB,eAAeC,QAAQ,OAIvD,yBAAKL,MAAM,YACP,yBAAKA,MAAM,cACP,iDACA,yBAAKA,MAAM,UACP,4BAAKM,YAAkBtB,EAAQuB,kBAI3C,yBAAKP,MAAM,YACP,yBAAKA,MAAM,cACP,2CACA,yBAAKA,MAAM,UACP,4BAAKhB,EAAQwB,gBAIzB,yBAAKR,MAAM,YACP,yBAAKA,MAAM,cACP,mDACA,yBAAKA,MAAM,UACP,4BACKd,4BAAkBG,EAAYoB,iBAAkD,KAA/BpB,EAAYoB,eAC5D,oCACEpB,EAAYoB,mBAKhC,yBAAKT,MAAM,aACP,yBAAKA,MAAM,cACP,mDACA,yBAAKA,MAAM,UACP,4BAAKU,YAAarB,EAAYsB,oBAI1C,yBAAKX,MAAM,aACP,8BAEJ,yBAAKA,MAAM,aACLd,4BAAkBG,EAAYuB,WAAsC,KAAzBvB,EAAYuB,SAEjD,kBAAC,WAAD,KACI,yBAAKZ,MAAM,cACP,yBAAKA,MAAM,QAAQa,MAAM,QACrB,2BAAOC,IAAI,sBAAX,yBACA,oEAKZ,kBAAC,WAAD,KACI,yBAAKd,MAAM,cACP,yBAAKA,MAAM,QAAQa,MAAM,QACrB,2BAAOC,IAAI,sBAAX,uBACI,uBAAGC,KAAMC,IAAU,uCAAyC3B,EAAYuB,SAAUK,UAAQ,GAA1F,yBAIZ,8BACI,yBAAKC,MAAO,CAAEC,OAAQ,SAAUC,UAAU,aAAaC,IAAKL,IAAU,uCAAyC3B,EAAYuB,SAAWU,IAAKjC,EAAYuB,WACvJ,gCAKpB,yBAAKZ,MAAM,kBACP,4BAAQA,MAAM,wBAAyBuB,KAAK,SAASC,QAAS,WAAOC,OAAOC,QAAQC,SAApF,oBAQhC,kBAAC,IAAD,MACCxC,EAAc,kBAAC,IAAD,MAAmB,Q,qGC/IpCyC,EAAS,SAAC,GAAD,QAAGC,WAAH,MAA6B,CAC1CC,YADa,MAAgB,MAAhB,EAEbC,QAASC,gBAGI,KAEbC,eAAe,WAAD,4BAAC,mCAAAxC,EAAA,6DAAWyC,EAAX,oBACPC,EADO,UACEC,IADF,8CAGYC,IAAMF,EAAKG,OAAOC,OAAO,GAAIX,EAAO,CAAEC,WAAY,SAAW,CAClFW,KAAMN,KAJG,uBAGHM,EAHG,EAGHA,KAHG,kBAOJA,GAPI,wCASXC,YAAW,EAAD,IATC,+DAAD,mDAAC,GAcfC,yBAAyB,WAAD,4BAAC,mCAAAjD,EAAA,6DAAWyC,EAAX,oBACjBC,EADiB,UACRC,IADQ,wDAGEC,IAAMF,EAAKG,OAAOC,OAAO,GAAIX,EAAO,CAAEC,WAAY,SAAW,CAClFW,KAAMN,KAJa,uBAGbM,EAHa,EAGbA,KAHa,kBAOdA,GAPc,wCASrBC,YAAW,EAAD,IATW,+DAAD,mDAAC,GAczBE,wBAAwB,WAAD,4BAAC,mCAAAlD,EAAA,6DAAWyC,EAAX,oBAChBC,EADgB,UACPC,IADO,uDAGGC,IAAMF,EAAKG,OAAOC,OAAO,GAAIX,EAAO,CAAEC,WAAY,SAAW,CAClFW,KAAMN,KAJY,uBAGZM,EAHY,EAGZA,KAHY,kBAObA,GAPa,wCASpBC,YAAW,EAAD,IATU,+DAAD,mDAAC,GAcxBG,sBAAsB,WAAD,4BAAC,mCAAAnD,EAAA,6DAAWyC,EAAX,oBACdC,EADc,UACLC,IADK,qDAGKC,IAAMF,EAAKG,OAAOC,OAAO,GAAIX,EAAO,CAAEC,WAAY,SAAW,CAClFW,KAAMN,KAJU,uBAGVM,EAHU,EAGVA,KAHU,kBAOXA,GAPW,wCASlBC,YAAW,EAAD,IATQ,+DAAD,mDAAC,GActBI,yBAAyB,WAAD,4BAAC,mCAAApD,EAAA,6DAAWyC,EAAX,oBACjBC,EADiB,UACRC,IADQ,wDAGEC,IAAMF,EAAKG,OAAOC,OAAO,GAAIX,EAAO,CAAEC,WAAY,SAAW,CAClFW,KAAMN,KAJa,uBAGbM,EAHa,EAGbA,KAHa,kBAOdA,GAPc,wCASrBC,YAAW,EAAD,IATW,+DAAD,mDAAC,GAczBK,eAAe,WAAD,4BAAC,mCAAArD,EAAA,6DAAWyC,EAAX,oBACPC,EADO,UACEC,IADF,8CAGYC,IAAMF,EAAKG,OAAOC,OAAO,GAAIX,EAAO,CAAEC,WAAY,SAAW,CAClFW,KAAMN,KAJG,uBAGHM,EAHG,EAGHA,KAHG,kBAOJA,GAPI,wCASXC,YAAW,EAAD,IATC,+DAAD,mDAAC,GAcfjD,sBAAsB,WAAD,4BAAC,mCAAAC,EAAA,6DAAWyC,EAAX,oBACdC,EADc,UACLC,IADK,qDAGKC,IAAMF,EAAKG,OAAOC,OAAO,GAAIX,EAAO,CAAEC,WAAY,SAAW,CAClFW,KAAMN,KAJU,uBAGVM,EAHU,EAGVA,KAHU,kBAOXA,GAPW,wCASlBC,YAAW,EAAD,IATQ,+DAAD,mDAAC,GActBM,sBAAsB,WAAD,4BAAC,mCAAAtD,EAAA,6DAAWyC,EAAX,oBACdC,EADc,UACLC,IADK,qDAGKC,IAAMF,EAAKG,OAAOC,OAAO,GAAIX,EAAO,CAAEC,WAAY,SAAW,CAClFW,KAAMN,KAJU,uBAGVM,EAHU,EAGVA,KAHU,kBAOXA,GAPW,wCASlBC,YAAW,EAAD,IATQ,+DAAD,mDAAC,GActBO,6BAA6B,WAAD,4BAAC,mCAAAvD,EAAA,6DAAWyC,EAAX,oBACrBC,EADqB,UACZC,IADY,4DAGFC,IAAMF,EAAKG,OAAOC,OAAO,GAAIX,EAAO,CAAEC,WAAY,SAAW,CAClFW,KAAMN,KAJiB,uBAGjBM,EAHiB,EAGjBA,KAHiB,kBAOlBA,GAPkB,wCASzBC,YAAW,EAAD,IATe,+DAAD,mDAAC,GAc7BQ,4BAA4B,WAAD,4BAAC,mCAAAxD,EAAA,6DAAWyC,EAAX,oBACpBC,EADoB,UACXC,IADW,2DAGDC,IAAMF,EAAKG,OAAOC,OAAO,GAAIX,EAAO,CAAEC,WAAY,SAAW,CAClFW,KAAMN,KAJgB,uBAGhBM,EAHgB,EAGhBA,KAHgB,kBAOjBA,GAPiB,wCASxBC,YAAW,EAAD,IATc,+DAAD,mDAAC","file":"static/js/37.2cab4a70.chunk.js","sourcesContent":["import React, {useState, useEffect, Fragment} from 'react';\r\nimport {isNullOrUndefined} from 'util';\r\n\r\n//Components \r\nimport {getDateInDDMMYYYY, fullDateTime } from '../../../common/moment.js';\r\nimport CallLoader from '../../../common/Loader.js';\r\nimport Header from '../../Partials/Header.js';\r\nimport Footer from '../../Partials/Footer.js';\r\nimport {API_URL} from '../../../api/config/Constants.js';\r\n\r\n// APIs\r\nimport InvoiceAPI from '../../../api/invoices.js';\r\n\r\n\r\nexport default function PaymentPanel(props) {\r\n    let propData = props.location.state.invoice;\r\n    const [invoice, setInvoice] =  useState(isNullOrUndefined(propData) ? {} : propData);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [transaction, setTransaction] = useState({});\r\n    \r\n    useEffect(() => {\r\n        getTransactionDetails();\r\n    },[]);\r\n\r\n    const getTransactionDetails = async () =>{\r\n        setIsLoading(true);        \r\n        try{\r\n            const result = await InvoiceAPI.getTransactionDetails({\r\n                invoice_version_id: invoice.invoice_version_id,\r\n                invoice_id: invoice.invoice_id,\r\n            });\r\n            setTransaction(result.transaction[0]);\r\n            setIsLoading(false);\r\n        }catch(e){\r\n            console.log('Error...', e);\r\n        }\r\n    }\r\n\r\n    return(\r\n    <Fragment>\r\n        <Header />\r\n            <section class=\"ftco-section\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <h3 class=\"mb-4 billing-heading\">Payment Form</h3>\r\n                            <form class=\"p-5 bg-light b-top-dark\">\r\n                                <div class=\"row align-items-end\">\r\n                                <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Order Id: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{invoice.order_id}</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>   \r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Invoice No.:</label>\r\n                                            <div class=\"d-flex\">\r\n                                            <h6>{invoice.invoice_no}</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>                                      \r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Invoice Total: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{Number(invoice.invoice_total).toFixed(2)}</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> \r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Invoice Date: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{getDateInDDMMYYYY(invoice.invoice_date)}</h6>                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>  \r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Status: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{invoice.status_name}</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Transaction Id: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{\r\n                                                    (isNullOrUndefined(transaction.transaction_no) || transaction.transaction_no === \"\")\r\n                                                    ? \"Transaction ID not given by user.\"\r\n                                                    :   transaction.transaction_no\r\n                                                }</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Transaction At: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{fullDateTime(transaction.transaction_at)}</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <hr />\r\n                                    </div>                                    \r\n                                    <div class=\"col-md-12\">\r\n                                        {(isNullOrUndefined(transaction.document) || transaction.document === \"\")\r\n                                            ?\r\n                                                <Fragment> \r\n                                                    <div class=\"form-group\">\r\n                                                        <div class=\"field\" align=\"left\">\r\n                                                            <label for=\"transactionReceipt\"> Transaction Receipt:</label>\r\n                                                            <h2>Transaction receipt not uploaded.</h2>\r\n                                                        </div>\r\n                                                    </div>                                                    \r\n                                                </Fragment>\r\n                                            :  \r\n                                                <Fragment>\r\n                                                    <div class=\"form-group\">\r\n                                                        <div class=\"field\" align=\"left\">\r\n                                                            <label for=\"transactionReceipt\">Transaction Receipt: \r\n                                                                <a href={API_URL + \"/api/images?path=transactionReceipt/\" + transaction.document} download > Download Receipt </a>\r\n                                                            </label>                                                \r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <span>                                            \r\n                                                        <img style={{ height: '500px'}} className=\"imageThumb\" src={API_URL + \"/api/images?path=transactionReceipt/\" + transaction.document}  alt={transaction.document} />                                            \r\n                                                        <br/>\r\n                                                    </span>\r\n                                                </Fragment>\r\n                                        }\r\n                                    </div>           \r\n                                    <div class=\"form-group p-4\">\r\n                                        <button class=\"btn  px-4 btn-primary\"  type=\"button\" onClick={() => {window.history.back()}}> Go Back </button>\r\n                                    </div>                                                                                             \r\n                                </div>\r\n                            </form>                                                        \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        <Footer />        \r\n        {isLoading ?   <CallLoader />   : null  }\r\n    </Fragment>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport * as c from './config/Constants';\r\nimport checkError from './config/HttpClient';\r\nimport {authHeader} from './config/AuthHeader.js';\r\n\r\nconst PARAMS = ({ methodType = 'GET' }) => ({\r\n  method: methodType,\r\n  headers: authHeader(),\r\n});\r\n\r\nexport default {\r\n\r\n  getInvoiceList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/getInvoiceList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getItemsForUpdateRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/getItemsForUpdateRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getItemsToHandleRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/getItemsToHandleRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  postItemUpdateRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/postItemUpdateRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  postInvoiceUpdateRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/postInvoiceUpdateRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  payInvoiceBill:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/payInvoiceBill`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getTransactionDetails:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/getTransactionDetails`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  handleReqestRejection:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/handleReqestRejection`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  handleInvoiceToAcceptRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/handleInvoiceToAcceptRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  downloadOrderInvoiceVersion:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/downloadOrderInvoiceVersion`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // getMeasuredUnitofProduct:async ({...payload }) => {\r\n  //   const URL = `${c.API_CONSUMER}/staticrecords/getMeasuredUnitofProduct`;\r\n  //   try {\r\n  //     const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n  //       data: payload,\r\n  //     }),\r\n  //   );\r\n  //     return data;\r\n  //   } catch (error) {\r\n  //     checkError(error);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  // getOrderStatusList:async () => {\r\n  //   const URL = `${c.API_CONSUMER}/staticrecords/getOrderStatusList`;\r\n  //   try {\r\n  //     const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n  //     return data;\r\n  //   } catch (error) {\r\n  //     checkError(error);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  // getInvoiceStateList:async () => {\r\n  //   const URL = `${c.API_CONSUMER}/staticrecords/getInvoiceStateList`;\r\n  //   try {\r\n  //     const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n  //     return data;\r\n  //   } catch (error) {\r\n  //     checkError(error);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n};"],"sourceRoot":""}