{"version":3,"sources":["Views/Admin/DeliveryForm.js"],"names":["DeliveryForm","props","userId","APP_TOKEN","get","useState","location","state","order","productList","setProductList","useEffect","fetchDeliveryFormData","a","OrderAPI","orderId","id","order_date","getDate","result","deliveryFormData","length","alert","window","pathname","console","log","handleQuantityChange","e","target","name","split","quantity","value","found","find","ele","available","paid_quantity","undefined","Number","purchased_quantity","toFixed","document","getElementById","price","cost","textContent","handleSubmit","preventDefault","productData","map","data","index","push","ordered_id","product_id","delivery_date","Date","unit_id","purchased_unit_id","created_by","submitDeliveryDetails","class","onSubmit","order_id","getDateInDDMMYYYY","mobile","full_name","flat_add","street_add","city","pincode","className","product_name","ordered_unit_name","purchased_unit_name","type","min","step","onChange","required","disabled","onClick"],"mappings":"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","file":"static/js/11.30c8ed47.chunk.js","sourcesContent":["import React, {useState, useEffect, Fragment} from 'react';\r\n\r\n//Components \r\nimport {APP_TOKEN} from '../../api/config/Constants.js';\r\nimport OrderAPI from '../../api/order.js';\r\nimport Header from '../Partials/Header.js';\r\nimport Footer from '../Partials/Footer.js';\r\n\r\nimport {getDate, getDateInDDMMYYYY} from '../../common/moment.js';\r\n\r\nexport default function DeliveryForm(props) {\r\n    \r\n    const userId = APP_TOKEN.get().userId;\r\n    const [order, setOrder]  = useState(props.location.state.order);\r\n    const [productList, setProductList] = useState([]);\r\n    const [noOneAvailable, setNoOneAvailable] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        fetchDeliveryFormData();\r\n    },[]);\r\n\r\n    const fetchDeliveryFormData = async () => {\r\n        try{\r\n            const result = await OrderAPI.fetchDeliveryFormData({\r\n                orderId : order.id,\r\n                order_date : getDate(order.order_date),\r\n            });\r\n            if(result.deliveryFormData.length >0){\r\n                setProductList(result.deliveryFormData);\r\n            }else if(result.deliveryFormData.length === 0){\r\n                alert('Product not available in stock !')\r\n                window.location.pathname = '/view-ordered-product';\r\n            }\r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    const handleQuantityChange = (e) => {\r\n        let id =  (e.target.name).split('-')[1];\r\n        let quantity = e.target.value;\r\n        const found = productList.find(ele  => {return ele.id == id});\r\n\r\n        let available = (found.paid_quantity !== null && found.paid_quantity !== undefined && found.paid_quantity !== \"\") ? Number(found.purchased_quantity - found.paid_quantity).toFixed(3) : Number(found.purchased_quantity).toFixed(3) ;\r\n        if(Number(available) < Number(quantity)){\r\n            document.getElementById('provideQuantity-'+id).value = '';            \r\n            alert('input quantity is out of stock');\r\n        }else{\r\n            let price = (found.cost / found.purchased_quantity) * quantity ;\r\n            document.getElementById('productPrice-'+id).textContent = Number(price).toFixed(2);\r\n        }\r\n    }\r\n\r\n    const handleGoBack = (e) => {\r\n        window.location.pathname = '/view-order-list';\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try{     \r\n            let productData = [];\r\n            productList.map((data, index)=> {\r\n                if(data.purchased_quantity  !== null){\r\n                    productData.push({\r\n                        ordered_id : data.id,\r\n                        product_id : data.product_id,\r\n                        delivery_date : getDate(new Date()),\r\n                        order_date : getDate(order.order_date),\r\n                        paid_quantity : document.getElementById('provideQuantity-'+data.id).value,\r\n                        unit_id : data.purchased_unit_id,\r\n                        price : document.getElementById('productPrice-'+data.id).textContent,\r\n                        created_by : userId,\r\n                    })\r\n                }\r\n            })\r\n            const result = await OrderAPI.submitDeliveryDetails({productData: productData, orderId : order.id});\r\n            if(result === true){    // true = inserted\r\n                window.location.pathname = '/view-order-list';\r\n            }else{\r\n                alert('Failed Insertion');\r\n            }\r\n        }catch(e){\r\n            console.log('Error...', e);\r\n        }\r\n    }\r\n\r\n    return(\r\n    <Fragment>\r\n        <Header />\r\n            <section class=\"ftco-section\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <h3 class=\"mb-4 billing-heading\">Delivery Form</h3>\r\n                            <form onSubmit={handleSubmit} class=\"p-5 bg-light b-top-dark\">\r\n                                    <div class=\"row align-items-end\">\r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>Order Id: </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <h6>{order.order_id}</h6>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>   \r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>Order Date: </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <h6>{getDateInDDMMYYYY(order.order_date)}</h6>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>  \r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>Mobile No.: </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <h6>{order.mobile}</h6>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>  \r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>Customer Name: </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <h6>{order.full_name}</h6>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"col-md-8\">\r\n                                            <div class=\"form-group\">\r\n                                                <label>Address: </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <h6>{order.flat_add + ', ' + order.street_add + ', ' + order.city + ', ' + order.state + ' - ' + order.pincode}</h6>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\"> <hr /> </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <h5>Product List</h5>\r\n                                        </div>\r\n                                        <table className=\"unit-array-table table-min-width\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Product</th>\r\n                                                    <th>Demand</th>\r\n                                                    <th>Available in Stock</th>\r\n                                                    <th>Given Quantity</th>\r\n                                                    <th>Price</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                                <tbody>\r\n                                                    {(productList.length >0 ? productList :[]).map((data, index) => {    \r\n                                                        let available =  \r\n                                                            (data.purchased_quantity  === null) ? 0.00 : \r\n                                                            (data.paid_quantity !== null && data.paid_quantity !== undefined && data.paid_quantity !== \"\") ?\r\n                                                            Number(data.purchased_quantity - data.paid_quantity).toFixed(3) : Number(data.purchased_quantity).toFixed(3)\r\n                                                    return(\r\n                                                        <tr>\r\n                                                            <td>{data.product_name}</td>\r\n                                                            <td>{data.quantity+ ' ' + data.ordered_unit_name}</td>\r\n                                                            <td>{\r\n                                                                (available > 0 )  ? available + \" \" + data.purchased_unit_name\r\n                                                                : \"Not available\"\r\n                                                                // (data.purchased_quantity  === null) ? \"Not available\" :\r\n                                                                // (data.paid_quantity !== null && data.paid_quantity !== undefined && data.paid_quantity !== \"\") ?\r\n                                                                // Number(data.purchased_quantity - data.paid_quantity).toFixed(3) + ' ' + data.purchased_unit_name : Number(data.purchased_quantity).toFixed(3)  + ' ' + data.purchased_unit_name\r\n                                                            }</td>\r\n                                                            <td>\r\n                                                                <div class=\"d-flex justify-content-center\">\r\n                                                                    <input type=\"number\" name={\"provideQuantity-\"+data.id} class=\"cost-input\" id={\"provideQuantity-\"+data.id} min=\"0\" step=\"0.01\" onChange={handleQuantityChange} required disabled={(available <= 0) }/>\r\n                                                                    {(available > 0) ? <p class=\"cost-input-adoptment\"> {data.purchased_unit_name} </p> :''}\r\n                                                                    {/* <p class=\"cost-input-adoptment\"> {data.ordered_unit_name} </p> */}\r\n                                                                    {/* <select id=\"provideUnit\"  class=\"delivery-unit-select\" defaultValue={data.unit_id}  required>\r\n                                                                        <option  value = {data.purchased_unit_id}>{data.purchased_unit_name}</option>\r\n                                                                    </select> */}\r\n                                                                </div>\r\n                                                            </td>\r\n                                                            <td><p  id={\"productPrice-\"+data.id} ></p></td>\r\n                                                        </tr>\r\n                                                        )\r\n                                                    })\r\n                                                }\r\n                                                </tbody>\r\n                                            </table>\r\n                                            <div class=\"form-group p-4\">\r\n                                                {((productList.find(ele => {return ele.purchased_quantity !== null && (ele.purchased_quantity - ele.paid_quantity > 0)})) ===  undefined) \r\n                                                    ?   <input type=\"button\" value=\"Go Back\" class=\"btn  px-4 btn-primary\" onClick={handleGoBack}/>\r\n                                                    :   <input type=\"submit\" value=\"Submit\" class=\"btn  px-4 btn-primary\" />\r\n                                                }\r\n                                            </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        <Footer />\r\n    </Fragment>\r\n    )\r\n}"],"sourceRoot":""}