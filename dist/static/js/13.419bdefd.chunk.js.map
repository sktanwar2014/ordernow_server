{"version":3,"sources":["Views/Admin/ViewOrder.js"],"names":["RESET_VALUES","date","Date","orderStatus","ViewOrder","props","useState","inputs","setInputs","orderList","setOrderList","orderedProductList","setOrderedProductList","orderStatusList","setOrderStatusList","setOrderStatus","useEffect","getOrderListOfSingleDay","getOrderStatusList","handleInputChange","e","target","name","value","a","OrderAPI","order_status","getDate","result","orderedProducts","console","log","StaticAPI","handleGenerateInvoice","data","alert","className","class","for","id","type","onChange","length","map","index","onClick","order","totalProduct","filter","pro","order_id","product","rowspan","getDateInDDMMYYYY","order_date","full_name","product_name","quantity","ordered_unit_name","price","flat_add","street_add","city","delivery_date","to","pathname","state","status","disabled","style","display"],"mappings":"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","file":"static/js/13.419bdefd.chunk.js","sourcesContent":["import React, {useState, useEffect, Fragment} from 'react';\r\nimport {Link} from  'react-router-dom';\r\n\r\n//Components \r\nimport Header from '../Partials/Header.js';\r\nimport Footer from '../Partials/Footer.js';\r\nimport OrderAPI from '../../api/order.js';\r\nimport StaticAPI from '../../api/static.js';\r\n\r\n\r\nimport {getDateInDDMMYYYY, getDate} from '../../common/moment.js';\r\n\r\nconst RESET_VALUES = {\r\n    date : new Date(),\r\n    orderStatus : '1',\r\n}\r\n\r\n\r\nexport default function ViewOrder(props) {\r\n\r\n    const [inputs, setInputs] =  useState(RESET_VALUES);\r\n\tconst [orderList, setOrderList] = useState([]);\r\n    const [orderedProductList, setOrderedProductList] = useState([]);\r\n    const [orderStatusList, setOrderStatusList]  = useState([]);\r\n    const [orderStatus, setOrderStatus] = useState(1);\r\n\r\n    useEffect(()=>{\r\n        getOrderListOfSingleDay();\r\n        getOrderStatusList();\r\n    },[]);\r\n\r\n\r\n    \r\n\tconst  handleInputChange = (e) => {\r\n\t\tsetInputs({...inputs, [e.target.name]: e.target.value});\r\n\t}\r\n\r\n    const getOrderListOfSingleDay = async () => {\r\n        setOrderStatus(inputs.orderStatus);\r\n\r\n        try{\r\n            const result = await OrderAPI.getOrderListOfSingleDay({\r\n                order_status : inputs.orderStatus,\r\n                date : getDate(inputs.date),\r\n            });\r\n            setOrderList(result.orderList);            \r\n            setOrderedProductList(result.orderedProducts);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    const getOrderStatusList = async () => {\r\n        try{\r\n            const result = await StaticAPI.getOrderStatusList({});\r\n            setOrderStatusList(result.orderStatusList);\r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    const handleGenerateInvoice = async (data) =>{\r\n        // console.log(data);\r\n        alert('Work in Progress')\r\n    }\r\n\r\n    return(\r\n\t\t<Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<section className=\"ftco-section\">\r\n                <div class=\"container\">\r\n                <h3>Modify Orders</h3>\r\n                <div class=\"row justify-content-center p-bottom-30\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <div class=\"p-5 bg-light b-top-dark\">\r\n                                    <div class=\"row align-items-end\">\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"date\">Date * </label>\r\n                                                <input id=\"date\" name=\"date\" type=\"date\" value={getDate(inputs.date)} class=\"form-control\"  onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>   \r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"orderStatus\">Status * </label>\r\n                                                <select id=\"orderStatus\" name=\"orderStatus\" value={inputs.orderStatus} class=\"form-control\" onChange={handleInputChange}>\r\n                                                    {(orderStatusList.length > 0 ? orderStatusList : [] ).map((data, index)=>{\r\n                                                        return(\r\n                                                            <option id={data.id} value={data.id} >{data.order_status}</option>\r\n                                                        )\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"col-md-12 m-bottom-20\">\r\n                                            <div class=\"form-group\">\r\n                                                <div class=\"d-flex f-right\">\r\n                                                <button class=\"btn btn-primary px-4\" onClick={getOrderListOfSingleDay}> Click to view</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"w-100\">\r\n                                            <table className=\"unit-array-table\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Order Date</th>\r\n                                                        <th>Order Id</th>\r\n                                                        <th>Customer</th>\r\n                                                        <th>Product</th>\r\n                                                        <th>Quantity</th>\r\n                                                        {orderStatus != 1 && <th>Price</th> }\r\n                                                        <th>Address</th>\r\n                                                        {orderStatus != 1 && <th>Delivery Date</th> }\r\n                                                        <th>Action</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {(orderList.length>0 ? orderList :[]).map((order, index) => {                                                    \r\n                                                    let totalProduct = orderedProductList.filter(pro => pro.order_id === order.id).length;                                                    \r\n                                                    return(\r\n                                                        (orderedProductList.length >0 ? orderedProductList :[]).map((product) =>  {\r\n                                                            if(product.order_id === order.id){\r\n                                                            return(\r\n                                                                <tr class=\"text-center\">\r\n                                                                    {totalProduct !== 0 &&\r\n                                                                        <Fragment>                                                                            \r\n                                                                            <td rowspan={totalProduct}>{index + 1}</td>\r\n                                                                            <td rowspan={totalProduct}>{getDateInDDMMYYYY(order.order_date)}</td>\r\n                                                                            <td rowspan={totalProduct}>{order.order_id}</td>\r\n                                                                            <td rowspan={totalProduct}>{order.full_name}</td>\r\n                                                                        </Fragment>\r\n                                                                    }\r\n                                                                    <td>{product.product_name}</td>\r\n                                                                    <td>{`${product.quantity}  ${product.ordered_unit_name}`}</td>\r\n                                                                    {orderStatus != 1 &&  <td>{`${product.price}`}</td>}\r\n                                                                    {totalProduct !== 0 &&\r\n                                                                        <Fragment>\r\n                                                                            <td rowspan={totalProduct}>{`${order.flat_add}, ${order.street_add}, ${order.city}`}</td>\r\n                                                                            {orderStatus != 1 && <td rowspan={totalProduct}>{getDateInDDMMYYYY(order.delivery_date)}</td> }\r\n                                                                            <td rowspan={totalProduct}>\r\n                                                                                {orderStatus  == 1 ? <Link to={{pathname :'/delivery-form', state : order}}>Click to delivered</Link>\r\n                                                                                    : \r\n                                                                                    <button class={order.status === 3 ?  \"alter-purchase-record\" : \"alter-purchase-record btn-disabled\" }type=\"submit\" onClick={()=>{handleGenerateInvoice(order)}} disabled={order.status != 3}> Generate Invoice</button>\r\n                                                                                }\r\n                                                                            </td>\r\n                                                                        </Fragment>\r\n                                                                    }   \r\n                                                                    <div style={{display:'none'}}>{totalProduct = 0}</div>\r\n                                                                </tr>\r\n                                                                )\r\n                                                            }\r\n                                                            })\r\n                                                        )\r\n                                                    })\r\n                                                }\t\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n                    \r\n                </div>\r\n    </section>\r\n\t\t<Footer />\r\n\t</Fragment>\r\n    )\r\n}"],"sourceRoot":""}