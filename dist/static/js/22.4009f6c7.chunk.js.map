{"version":3,"sources":["Views/Components/ViewOrderTable/NewOrderTable.js","Views/Components/ViewOrderTable/DeliveredOrderTable.js","Views/Components/ViewOrderTable/VerifiedOrderTable.js","Views/Components/ViewCustomerOrder.js","api/config/HttpClient.js","api/config/AuthHeader.js","common/Loader.js","Views/Partials/Header.js","Views/Partials/Footer.js","common/moment.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","api/static.js","api/order.js"],"names":["NewOrderTable","orderIdsArray","orderList","className","class","style","minWidth","length","map","orderId","index","products","filter","pro","id","totalProduct","product","rowspan","getDateInDDMMYYYY","order_date","order_id","full_name","product_name","quantity","unit_name","flat_add","street_add","city","display","DeliveredOrderTable","delivery_date","to","pathname","state","data","VerifiedOrderTable","handleGenerateInvoice","status","type","onClick","RESET_VALUES","toDate","Date","fromDate","orderStatus","ViewCustomerOrder","useState","inputs","setInputs","setOrderList","orderStatusList","setOrderStatusList","setOrderStatus","isLoading","setIsLoading","setOrderIdsArray","useEffect","getCustomerOrderList","getOrderStatusList","handleInputChange","e","target","name","value","a","OrderAPI","order_status","Number","from_date","getDate","to_date","createdBy","APP_TOKEN","get","userId","result","orderIds","Set","dist","console","log","StaticAPI","pdfmake","vfs","pdfFonts","pdfMake","getOrderInvoiceLatestVersion","createPdf","open","Header","for","onChange","Footer","checkError","error","response","c","remove","document","location","reload","authHeader","Authorization","sessionStorage","token","Loader","visibility","opacity","width","height","cx","cy","r","fill","stroke-width","stroke","stroke-miterlimit","roleId","role_id","CART_TOKEN","cartTotal","setCartTotal","padding","href","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","backgroundColor","moment","require","date","format","fullDateTime","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","PARAMS","methodType","method","headers","getProductUnitList","URL","axios","assign","getMainUnitRelateRecords","payload","getMeasuredUnitofProduct","getInvoiceStateList","handleOrderConfirmation","submitDeliveryDetails","orderVerificationByCustomer","fetchDeliveryFormData","handlePurchasedRecord","getOrderedProductList","generatePDFOfOrderedProducts","getOrderedProductListSingleDay","fetchPreviousBillingAddresss","removeSelectedAddress","getOrderList","getOrderListOfSingleDay","addNewOrder"],"mappings":"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","file":"static/js/22.4009f6c7.chunk.js","sourcesContent":["import React, {Fragment} from 'react';\r\nimport {Link} from  'react-router-dom';\r\n\r\n//Components \r\nimport {getDateInDDMMYYYY, getDate} from '../../../common/moment.js';\r\n\r\nexport default function NewOrderTable({orderIdsArray, orderList}) {    \r\n    return(\r\n        <table className=\"table table-td\">\r\n            <thead class=\"thead-primary\">\r\n                <tr class=\"text-center\">\r\n                    <th style={{minWidth : '50px'}}>#</th>\r\n                    <th style={{minWidth : '100px'}}>Order Date</th>\r\n                    <th style={{minWidth : '80px'}}>Order Id</th>\r\n                    <th style={{minWidth : '180px'}}>Customer</th>\r\n                    <th style={{minWidth : '200px'}}>Product</th>\r\n                    <th style={{minWidth : '120px'}}>Quantity</th>\r\n                    <th style={{minWidth : '250px'}}>Address</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {(orderIdsArray.length > 0 ? orderIdsArray : []).map((orderId, index) => {\r\n                    let products = orderList.filter(pro => pro.id === orderId);\r\n                    let totalProduct = products.length;\r\n                    return(\r\n                        (products.length >0 ? products :[]).map((product) =>  {\r\n                            return(\r\n                                <tr class=\"text-center\">\r\n                                    {totalProduct !== 0 &&\r\n                                        <Fragment>\r\n                                            <td rowspan={totalProduct}>{index + 1}</td>\r\n                                            <td rowspan={totalProduct}>{getDateInDDMMYYYY(product.order_date)}</td>\r\n                                            <td rowspan={totalProduct}>{product.order_id}</td>\r\n                                            <td rowspan={totalProduct}>{product.full_name}</td>\r\n                                        </Fragment>\r\n                                    }\r\n                                    <td>{product.product_name}</td>\r\n                                    <td>{`${product.quantity}  ${product.unit_name}`}</td>\r\n                                    {totalProduct !== 0 &&\r\n                                        <Fragment>\r\n                                            <td rowspan={totalProduct}>{`${product.flat_add}, ${product.street_add}, ${product.city}`}</td>\r\n                                        </Fragment>\r\n                                    }   \r\n                                    <div style={{display:'none'}}>{totalProduct = 0}</div>\r\n                                </tr>\r\n                                )\r\n                            })\r\n                        )\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>    \r\n    )\r\n}","import React, {Fragment} from 'react';\r\nimport {Link} from  'react-router-dom';\r\n\r\n//Components \r\nimport {getDateInDDMMYYYY, getDate} from '../../../common/moment.js';\r\n\r\nexport default function DeliveredOrderTable({orderIdsArray, orderList}) {    \r\n    return(\r\n        <table className=\"table table-td\">\r\n            <thead class=\"thead-primary\">\r\n                <tr class=\"text-center\">\r\n                    <th style={{minWidth : '50px'}}>#</th>\r\n                    <th style={{minWidth : '100px'}}>Order Date</th>\r\n                    <th style={{minWidth : '80px'}}>Order Id</th>\r\n                    <th style={{minWidth : '180px'}}>Customer</th>\r\n                    <th style={{minWidth : '200px'}}>Product</th>\r\n                    <th style={{minWidth : '250px'}}>Address</th>   \r\n                    <th style={{minWidth : '120px'}}>Delivery Date</th>\r\n                    <th style={{minWidth : '150px'}}>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {(orderIdsArray.length > 0 ? orderIdsArray : []).map((orderId, index) => {\r\n                    let products = orderList.filter(pro => pro.id === orderId);\r\n                    let totalProduct = products.length;\r\n                    return(\r\n                        (products.length >0 ? products :[]).map((product) =>  {\r\n                            return(\r\n                                <tr class=\"text-center\">\r\n                                    {totalProduct !== 0 &&\r\n                                        <Fragment>\r\n                                            <td rowspan={totalProduct}>{index + 1}</td>\r\n                                            <td rowspan={totalProduct}>{getDateInDDMMYYYY(product.order_date)}</td>\r\n                                            <td rowspan={totalProduct}>{product.order_id}</td>\r\n                                            <td rowspan={totalProduct}>{product.full_name}</td>\r\n                                        </Fragment>\r\n                                    }\r\n                                    <td>{product.product_name}</td>                                    \r\n                                    {totalProduct !== 0 &&\r\n                                        <Fragment>\r\n                                            <td rowspan={totalProduct}>{`${product.flat_add}, ${product.street_add}, ${product.city}`}</td>\r\n                                            <td rowspan={totalProduct}>{getDateInDDMMYYYY(product.delivery_date)}</td> \r\n                                            <td rowspan={totalProduct}>\r\n                                                <Link to={{pathname :'/verify-delivered-product', state : {data: products}}}>Click to verify</Link>\r\n                                            </td>\r\n                                        </Fragment>\r\n                                    }   \r\n                                    <div style={{display:'none'}}>{totalProduct = 0}</div>\r\n                                </tr>\r\n                                )\r\n                            })\r\n                        )\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>    \r\n    )\r\n}","import React, {Fragment} from 'react';\r\nimport {Link} from  'react-router-dom';\r\n\r\n//Components \r\nimport {getDateInDDMMYYYY, getDate} from '../../../common/moment.js';\r\n\r\nexport default function VerifiedOrderTable({orderIdsArray, orderList, handleGenerateInvoice}) {\r\n    return(\r\n        <table className=\"table table-td\">\r\n            <thead class=\"thead-primary\">\r\n                <tr class=\"text-center\">\r\n                    <th style={{minWidth : '50px'}}>#</th>\r\n                    <th style={{minWidth : '100px'}}>Order Date</th>\r\n                    <th style={{minWidth : '80px'}}>Order Id</th>\r\n                    <th style={{minWidth : '180px'}}>Customer</th>\r\n                    <th style={{minWidth : '200px'}}>Product</th>\r\n                    <th style={{minWidth : '250px'}}>Address</th>\r\n                    <th style={{minWidth : '120px'}}>Delivery Date</th>\r\n                    <th style={{minWidth : '150px'}}>Action</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {(orderIdsArray.length > 0 ? orderIdsArray : []).map((orderId, index) => {\r\n                    let products = orderList.filter(pro => pro.id === orderId);\r\n                    let totalProduct = products.length;\r\n                    return(\r\n                        (products.length >0 ? products :[]).map((product) =>  {\r\n                            return(\r\n                                <tr class=\"text-center\">\r\n                                    {totalProduct !== 0 &&\r\n                                        <Fragment>\r\n                                            <td rowspan={totalProduct}>{index + 1}</td>\r\n                                            <td rowspan={totalProduct}>{getDateInDDMMYYYY(product.order_date)}</td>\r\n                                            <td rowspan={totalProduct}>{product.order_id}</td>\r\n                                            <td rowspan={totalProduct}>{product.full_name}</td>\r\n                                        </Fragment>\r\n                                    }                  \r\n                                    <td>{product.product_name}</td>                  \r\n                                    {totalProduct !== 0 &&\r\n                                        <Fragment>\r\n                                            <td rowspan={totalProduct}>{`${product.flat_add}, ${product.street_add}, ${product.city}`}</td>\r\n                                            <td rowspan={totalProduct}>{getDateInDDMMYYYY(product.delivery_date)}</td> \r\n                                            <td rowspan={totalProduct}>\r\n                                                {products[0].status === 4 ?\r\n                                                        <button class=\"alter-purchase-record\" type=\"submit\" onClick={()=>{handleGenerateInvoice(orderId)}}> See Invoice </button>\r\n                                                    :   \"Not Verified\"\r\n                                                }\r\n                                            </td>\r\n                                        </Fragment>\r\n                                    }   \r\n                                    <div style={{display:'none'}}>{totalProduct = 0}</div>\r\n                                </tr>\r\n                                )\r\n                            })\r\n                        )\r\n                    })\r\n                }\r\n            </tbody>\r\n        </table>    \r\n    )\r\n}","import React, {useState, useEffect, Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport pdfmake from 'pdfmake/build/pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\n\r\n//Components \r\nimport Header from '../Partials/Header.js';\r\nimport Footer from '../Partials/Footer.js';\r\nimport StaticAPI from '../../api/static.js';\r\nimport OrderAPI from '../../api/order.js';\r\nimport {APP_TOKEN} from  '../../api/config/Constants.js'\r\nimport {getDateInDDMMYYYY, getDate} from '../../common/moment.js';\r\nimport CallLoader from '../../common/Loader.js';\r\nimport NewOrderTable from './ViewOrderTable/NewOrderTable.js';\r\nimport DeliveredOrderTable from './ViewOrderTable/DeliveredOrderTable.js';\r\nimport VerifiedOrderTable from './ViewOrderTable/VerifiedOrderTable.js';\r\n\r\nconst RESET_VALUES = {\r\n    toDate : new Date(),\r\n    fromDate : new Date(),\r\n    orderStatus : '1',\r\n}\r\n\r\n\r\nexport default function ViewCustomerOrder() {\r\n\r\n    const [inputs, setInputs] =  useState(RESET_VALUES);\r\n\tconst [orderList, setOrderList] = useState([]);\r\n    const [orderStatusList, setOrderStatusList]  = useState([]);\r\n    const [orderStatus, setOrderStatus] = useState(1);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [orderIdsArray, setOrderIdsArray] = useState([]);\r\n\r\n    useEffect(()=>{\r\n\t\tgetCustomerOrderList();\t\t\r\n\t\tgetOrderStatusList();\t\t\r\n    },[]);\r\n\r\n\r\n    \r\n\tconst  handleInputChange = (e) => {\r\n\t\tsetInputs({...inputs, [e.target.name]: e.target.value});\r\n\t}\r\n\r\n    const getCustomerOrderList = async () => {\r\n        setIsLoading(true);\r\n        setOrderStatus(inputs.orderStatus);\r\n        try{\r\n            const result = await OrderAPI.getCustomerOrderList({\r\n                order_status : Number(inputs.orderStatus),\r\n                from_date : getDate(inputs.fromDate),\r\n                to_date : getDate(inputs.toDate),\r\n                createdBy : APP_TOKEN.get().userId,\r\n            });\r\n            const orderIds = [...new Set(result.orderList.map(dist => dist.id))];\r\n            setOrderList(result.orderList);\r\n            setOrderIdsArray(orderIds);\r\n            setIsLoading(false);\r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n\r\n    const getOrderStatusList = async () => {\r\n        try{\r\n            const result = await StaticAPI.getOrderStatusList({});\r\n            setOrderStatusList(result.orderStatusList);\r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    \r\n    const handleGenerateInvoice = async (id) =>{\r\n        setIsLoading(true);\r\n        pdfmake.vfs = pdfFonts.pdfMake.vfs;\r\n        try{\r\n            const result = await OrderAPI.getOrderInvoiceLatestVersion({orderId : id});\r\n            pdfmake.createPdf(result).open();\r\n            setIsLoading(false);\r\n\r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    return(\r\n\t\t<Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<section className=\"ftco-section\">\r\n                <div class=\"container\">\r\n                <h3>My Orders</h3>\r\n                <div class=\"row justify-content-center p-bottom-30\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <div class=\"p-5 bg-light b-top-dark\">\r\n                                    <div class=\"row align-items-end\">\r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"fromDate\">From * </label>\r\n                                                <input id=\"fromDate\" name=\"fromDate\" type=\"date\" value={getDate(inputs.fromDate)} class=\"form-control\"  onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>   \r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"toDate\">To * </label>\r\n                                                <input id=\"toDate\" name=\"toDate\" type=\"date\" value={getDate(inputs.toDate)} class=\"form-control\" onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>  \r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"orderStatus\">Status * </label>\r\n                                                <select id=\"orderStatus\" name=\"orderStatus\" value={inputs.orderStatus} class=\"form-control\" onChange={handleInputChange}>\r\n                                                    {(orderStatusList.length > 0 ? orderStatusList : [] ).map((data, index)=>{\r\n                                                        return(\r\n                                                            (data.id !== 4 ) ?   <option id={data.id} value={data.id} >{data.order_status}</option> : null\r\n                                                        )\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"col-md-12 m-bottom-20\">\r\n                                            <div class=\"form-group\">\r\n                                                <div class=\"d-flex f-right\">\r\n                                                <button class=\"btn btn-primary px-4\" onClick={getCustomerOrderList}> Click to view</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"w-100 table-div\">\r\n                                            {(orderStatus == 1) && <NewOrderTable orderIdsArray={orderIdsArray} orderList = {orderList} />}\r\n                                            {(orderStatus == 2) && <DeliveredOrderTable orderIdsArray={orderIdsArray} orderList = {orderList} />}\r\n                                            {(orderStatus == 3) && <VerifiedOrderTable orderIdsArray={orderIdsArray} orderList = {orderList}  handleGenerateInvoice={handleGenerateInvoice} />}                                  \r\n                                        </div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n                </div>\r\n    </section>\r\n\t\t<Footer />\r\n\t\t{isLoading ?   <CallLoader />   : null  }\r\n\t</Fragment>\r\n    )\r\n}","import * as c from './Constants';\r\n\r\nexport default function checkError(error) {\r\n  if(error || error.response.status === 401) {\r\n    c.APP_TOKEN.remove();\r\n    document.location.reload();\r\n  }\r\n}","export function authHeader() {\r\n  // return authorization header with basic auth credentials\r\n  // let user = JSON.parse(sessionStorage.token);\r\n\r\n  // if (user && user.token) {\r\n  return { Authorization: `Basic ${sessionStorage.token}`,  'content-type': 'application/json' };\r\n  \r\n  // } else {\r\n  //     return {};\r\n  // }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Loader(){\r\n    return(\r\n        <div id=\"ftco-loader\" class=\"show fullscreen\" style={{visibility: 'visible', opacity: '.5'}}><svg class=\"circular\" width=\"48px\" height=\"48px\"><circle class=\"path-bg\" cx=\"24\" cy=\"24\" r=\"22\" fill=\"none\" stroke-width=\"4\" stroke=\"#eeeeee\"/><circle class=\"path\" cx=\"24\" cy=\"24\" r=\"22\" fill=\"none\" stroke-width=\"4\" stroke-miterlimit=\"10\" stroke=\"#F96D00\"/></svg></div>\r\n    )\r\n}","import React,{Fragment, useState, useEffect} from 'react';\r\nimport {APP_TOKEN, CART_TOKEN} from '../../api/config/Constants.js';\r\n\r\nexport default function Header() {\r\n    const userId = APP_TOKEN.get().userId;\r\n    const roleId = APP_TOKEN.get().role_id;\r\n    const [cartTotal, setCartTotal] = useState(CART_TOKEN.get().cartTotal);\r\n    \r\n    useEffect(() => {\r\n        setCartTotal(CART_TOKEN.get().cartTotal)\r\n    })\r\n    \r\n return(\r\n     <Fragment>\r\n        <div className=\"py-1 bg-primary\">\r\n            <div className=\"container\">\r\n                <div className=\"row no-gutters d-flex align-items-start align-items-center px-md-0\">\r\n                    <div className=\"col-lg-12 d-block\">\r\n                        <div className=\"row d-flex\" style={{padding:'10px'}}>\r\n                            {/* <div className=\"col-md pr-4 d-flex topper align-items-center\">\r\n                                <div className=\"icon mr-2 d-flex justify-content-center align-items-center\"><span className=\"icon-phone2\"></span></div>\r\n                                <span className=\"text\">+ 1235 2355 98</span>\r\n                            </div>\r\n                            <div className=\"col-md pr-4 d-flex topper align-items-center\">\r\n                                <div className=\"icon mr-2 d-flex justify-content-center align-items-center\"><span className=\"icon-paper-plane\"></span></div>\r\n                                <span className=\"text\">youremail@email.com</span>\r\n                            </div>\r\n                            <div className=\"col-md-5 pr-4 d-flex topper align-items-center text-lg-right\">\r\n                                <span className=\"text\">3-5 Business days delivery &amp; Free Returns</span>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark ftco_navbar bg-dark ftco-navbar-light\" id=\"ftco-navbar\">\r\n            <div className=\"container\">\r\n            <a className=\"navbar-brand\" href=\"/\">SA SUPERMART</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ftco-nav\" aria-controls=\"ftco-nav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"oi oi-menu\"></span> Menu\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"ftco-nav\">\r\n                {/* <li className=\"nav-item active\"><a href=\"/\" className=\"nav-link\">Home</a></li> */}\r\n                {(userId == 1 && roleId == 1) ?\r\n                    <ul className=\"navbar-nav ml-auto\">    \r\n                        <li className=\"nav-item\"><a href=\"/\" className=\"nav-link\">Home</a></li> \r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown04\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Products</a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdown04\">                            \r\n                                <a className=\"dropdown-item\" href=\"/add-new-product\">Add New</a>                                \r\n                                <a className=\"dropdown-item\" href=\"/view-added-product\">View List</a>                                \r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown04\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Orders</a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdown04\">\r\n                                <a className=\"dropdown-item\" href=\"/view-order-list\">Daily Orders</a>\r\n                                <a className=\"dropdown-item\" href=\"/view-ordered-product\">Purchase Register</a>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown04\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Reports</a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdown04\">\r\n                                <a className=\"dropdown-item\" href=\"/view-order-report\">Order Report</a>\r\n                                <a className=\"dropdown-item\" href=\"/view-ordered-product-report\">Ordered Product Report</a>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item\"><a href=\"/invoices\" className=\"nav-link\">Invoices</a></li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown04\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Settings</a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdown04\">\r\n                                <a className=\"dropdown-item\" href=\"/change-password\">Change Password</a>\r\n                                <hr />\r\n                                <a className=\"dropdown-item\" href=\"/alter-categories\">Categories</a>                                \r\n                                <a className=\"dropdown-item\" href=\"/alter-units\">Units</a>\r\n                                <a className=\"dropdown-item\" href=\"/handle-clients\">Clients</a>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item\"><a href=\"/logout\" className=\"nav-link\">Logout</a></li> \r\n                    </ul>\r\n                    :\r\n                    <ul className=\"navbar-nav ml-auto\">   \r\n                        <li className=\"nav-item\"><a href=\"/\" className=\"nav-link\">Home</a></li> \r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown04\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Orders</a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdown04\">\r\n                                <a className=\"dropdown-item\" href=\"/view-user-order-list\">View </a>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item\"><a href=\"/invoices\" className=\"nav-link\">Invoices</a></li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown04\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Settings</a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdown04\">\r\n                            <a className=\"dropdown-item\" href=\"/change-password\">Change Password</a>\r\n                            <a className=\"dropdown-item\" href=\"/auto-settings\">Automation Settings</a>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item cta cta-colored\"><a href=\"/cart-list\" className=\"nav-link\"><span className=\"icon-shopping_cart\"></span>[{cartTotal}]</a></li>\r\n                        <li className=\"nav-item\"><a href=\"/logout\" className=\"nav-link\">Logout</a></li> \r\n                    </ul>\r\n                }\r\n                \r\n                {/* <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\">About</a></li>\r\n                <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\">Blog</a></li>\r\n                <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\">Contact</a></li> */}\r\n            </div>\r\n            </div>\r\n        </nav>\r\n  </Fragment>\r\n )\r\n}","import React from 'react';\r\n\r\nexport default function Footer(){\r\n    return(\r\n        // <footer className=\"ftco-footer ftco-section\">\r\n        <footer style={{backgroundColor: '#82ae46'}}>\r\n        {/* <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"mouse\">\r\n                    <a href=\"#\" className=\"mouse-icon\">\r\n                        <div className=\"mouse-wheel\"><span className=\"ion-ios-arrow-up\"></span></div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mb-5\">\r\n            <div className=\"col-md\">\r\n                <div className=\"ftco-footer-widget mb-4\">\r\n                <h2 className=\"ftco-heading-2\">Vegefoods</h2>\r\n                <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia.</p>\r\n                <ul className=\"ftco-footer-social list-unstyled float-md-left float-lft mt-5\">\r\n                    <li className=\"ftco-animate\"><a href=\"#\"><span className=\"icon-twitter\"></span></a></li>\r\n                    <li className=\"ftco-animate\"><a href=\"#\"><span className=\"icon-facebook\"></span></a></li>\r\n                    <li className=\"ftco-animate\"><a href=\"#\"><span className=\"icon-instagram\"></span></a></li>\r\n                </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md\">\r\n                <div className=\"ftco-footer-widget mb-4 ml-md-5\">\r\n                <h2 className=\"ftco-heading-2\">Menu</h2>\r\n                <ul className=\"list-unstyled\">\r\n                    <li><a href=\"#\" className=\"py-2 d-block\">Shop</a></li>\r\n                    <li><a href=\"#\" className=\"py-2 d-block\">About</a></li>\r\n                    <li><a href=\"#\" className=\"py-2 d-block\">Journal</a></li>\r\n                    <li><a href=\"#\" className=\"py-2 d-block\">Contact Us</a></li>\r\n                </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <div className=\"ftco-footer-widget mb-4\">\r\n                <h2 className=\"ftco-heading-2\">Help</h2>\r\n                <div className=\"d-flex\">\r\n                    <ul className=\"list-unstyled mr-l-5 pr-l-3 mr-4\">\r\n                        <li><a href=\"#\" className=\"py-2 d-block\">Shipping Information</a></li>\r\n                        <li><a href=\"#\" className=\"py-2 d-block\">Returns &amp; Exchange</a></li>\r\n                        <li><a href=\"#\" className=\"py-2 d-block\">Terms &amp; Conditions</a></li>\r\n                        <li><a href=\"#\" className=\"py-2 d-block\">Privacy Policy</a></li>\r\n                    </ul>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><a href=\"#\" className=\"py-2 d-block\">FAQs</a></li>\r\n                        <li><a href=\"#\" className=\"py-2 d-block\">Contact</a></li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md\">\r\n                <div className=\"ftco-footer-widget mb-4\">\r\n                    <h2 className=\"ftco-heading-2\">Have a Questions?</h2>\r\n                    <div className=\"block-23 mb-3\">\r\n                    <ul>\r\n                        <li><span className=\"icon icon-map-marker\"></span><span className=\"text\">203 Fake St. Mountain View, San Francisco, California, USA</span></li>\r\n                        <li><a href=\"#\"><span className=\"icon icon-phone\"></span><span className=\"text\">+2 392 3929 210</span></a></li>\r\n                        <li><a href=\"#\"><span className=\"icon icon-envelope\"></span><span className=\"text\">info@yourdomain.com</span></a></li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"row\">\r\n            <div className=\"col-md-12 text-center\">\r\n                { <p>\r\n                    Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i className=\"icon-heart color-danger\" aria-hidden=\"true\"></i> by <a href=\"https://colorlib.com\" target=\"_blank\">Colorlib</a>\r\n                </p> \r\n            </div>\r\n            </div>\r\n        </div> */}\r\n\r\n        <div className=\"container\">\r\n                <div className=\"row no-gutters d-flex align-items-start align-items-center px-md-0\">\r\n                    <div className=\"col-lg-12 d-block\">\r\n                        <div className=\"row \" >\r\n                            <div className=\"col-md pr-4 d-flex topper align-items-center\">\r\n                              <p  className=\"text\">Copyright 2019 &copy;All rights reserved | A1abilities PTY TLD  ABN# 82631548224</p>\r\n                            </div>\r\n                            {/* <div className=\"col-md pr-4 d-flex topper align-items-center\">\r\n                                <div className=\"icon mr-2 d-flex justify-content-center align-items-center\"><span className=\"icon-phone2\"></span></div>\r\n                                <span className=\"text\">+ 1235 2355 98</span>\r\n                            </div>\r\n                            <div className=\"col-md pr-4 d-flex topper align-items-center\">\r\n                                <div className=\"icon mr-2 d-flex justify-content-center align-items-center\"><span className=\"icon-paper-plane\"></span></div>\r\n                                <span className=\"text\">youremail@email.com</span>\r\n                            </div>\r\n                            <div className=\"col-md-5 pr-4 d-flex topper align-items-center text-lg-right\">\r\n                                <span className=\"text\">3-5 Business days delivery &amp; Free Returns</span>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}","const moment = require('moment');\r\n\r\nexport function getDate(date) {\r\n  return moment(date).format(\"YYYY-MM-DD\");\r\n}\r\n\r\nexport function getCurrentDateDBFormat() {\r\n  return moment().format(\"YYYY-MM-DD\")\r\n}\r\n\r\n\r\nexport function getCurrentDate() {\r\n  return moment().format(\"MM/DD/YYYY\")\r\n  \r\n}\r\n\r\n\r\nexport function getCurrentDateInYYYYMMDD() {\r\n  return moment().format(\"YYYY/MM/DD\")\r\n}\r\n\r\nexport function getDateInDDMMYYYY(date) {\r\n  return moment(date).format(\"DD-MM-YYYY\")\r\n}\r\n\r\nexport function getCurrentDateDDMMYYYY() {\r\n  return moment().format(\"DD-MM-YYYY\")\r\n}\r\n\r\nexport function getTimeinDBFormat(date) {\r\n  return moment(date).format(\"HH:mm:ss\")\r\n}\r\n\r\nexport function getTime(date) {\r\n  return moment(date).format(\"HH:mm\")\r\n}\r\n\r\nexport function convertDateInUTC(date) {  \r\n  return moment.utc(date);  \r\n}\r\n\r\nexport function setDBDateFormat(date){\r\n  let day = date.split('-')[0];\r\n  let month = date.split('-')[1];\r\n  let year = date.split('-')[2];\r\n  return (year + '-' + month + '-' + day) ;\r\n}\r\n\r\nexport function isBirthDate(date){\r\n  const custDate = new Date(date);\r\n  const currDate = new Date();\r\n  return (custDate.getDate() === currDate.getDate() && custDate.getMonth() === currDate.getMonth());\r\n}\r\n\r\n\r\nexport function addOneDay(date){\r\n  return moment(date).add(1, 'days').format(\"YYYY-MM-DD\");  \r\n}\r\n\r\nexport function subtractOneDay(date){\r\n  return moment(date).subtract(1, 'days').format(\"YYYY-MM-DD\");  \r\n}\r\n\r\nexport function checkPastDate(date) {  \r\n  return moment(date).format(\"YYYY-MM-DD\") > getDate();\r\n}\r\n\r\nexport function checkFutureDate(date) {\r\n  return moment(date).format(\"YYYY-MM-DD\") < getDate();\r\n}\r\n\r\nexport function isSameDate(payment_date, settlement_date) {\r\n  // console.log(payment_date === settlement_date, payment_date, settlement_date)\r\n  // console.log(moment(payment_date) > moment(settlement_date), moment(payment_date) < moment(settlement_date))\r\n  return payment_date === settlement_date;\r\n}\r\n\r\nexport function checkOverDue(payment_date, settlement_date) {  \r\n  return moment(payment_date).format(\"YYYY-MM-DD\") > moment(settlement_date).format(\"YYYY-MM-DD\");\r\n}\r\n\r\nexport function escapeSunday(date){\r\n  return moment(date).format(\"dddd\") == \"Sunday\";\r\n}\r\n\r\nexport function fullDateTime(date){\r\n  return moment(date).format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport * as c from './config/Constants';\r\nimport checkError from './config/HttpClient';\r\nimport {authHeader} from './config/AuthHeader.js';\r\n\r\nconst PARAMS = ({ methodType = 'GET' }) => ({\r\n  method: methodType,\r\n  headers: authHeader(),\r\n});\r\n\r\nexport default {\r\n\r\n  getProductUnitList:async () => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getProductUnitList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getMainUnitRelateRecords:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getMainUnitRelateRecords`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getMeasuredUnitofProduct:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getMeasuredUnitofProduct`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getOrderStatusList:async () => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getOrderStatusList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getInvoiceStateList:async () => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getInvoiceStateList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n};","import axios from 'axios';\r\nimport * as c from './config/Constants';\r\nimport checkError from './config/HttpClient';\r\nimport {authHeader} from './config/AuthHeader.js';\r\n\r\nconst PARAMS = ({ methodType = 'GET' }) => ({\r\n  method: methodType,\r\n  headers: authHeader(),\r\n});\r\n\r\nexport default {\r\n\r\n  handleOrderConfirmation:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/handleOrderConfirmation`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getOrderInvoiceLatestVersion: async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/getOrderInvoiceLatestVersion`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // generateInvoice:async ({...payload }) => {\r\n  //   const URL = `${c.API_CONSUMER}/order/generateInvoice`;\r\n  //   try {\r\n  //     const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n  //       data: payload,\r\n  //     }),\r\n  //   );\r\n  //     return data;\r\n  //   } catch (error) {\r\n  //     checkError(error);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  submitDeliveryDetails:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/submitDeliveryDetails`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  orderVerificationByCustomer:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/orderVerificationByCustomer`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  fetchDeliveryFormData:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/fetchDeliveryFormData`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  handlePurchasedRecord:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/handlePurchasedRecord`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  getOrderedProductList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/getOrderedProductList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  generatePDFOfOrderedProducts:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/generatePDFOfOrderedProducts`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getOrderedProductListSingleDay:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/getOrderedProductListSingleDay`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  fetchPreviousBillingAddresss:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/fetchPreviousBillingAddresss`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  removeSelectedAddress:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/removeSelectedAddress`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n \r\n  getOrderList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/getOrderList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getOrderListOfSingleDay:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/getOrderListOfSingleDay`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  getCustomerOrderList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/getCustomerOrderList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  addNewOrder:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/addNewOrder`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n};"],"sourceRoot":""}