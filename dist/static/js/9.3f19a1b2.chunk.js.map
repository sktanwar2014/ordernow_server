{"version":3,"sources":["Views/Admin/AddProduct.js"],"names":["AddProduct","props","useState","subCategory","setSubCategory","categoryList","setCategoryList","productUnitList","setProductUnitList","filteredUnitList","setFilteredUnitList","singleUnitList","setSingleUnitList","categoryDialogOpen","setCategoryDialogOpen","categoryDialogProps","setCategoryDialogProps","defaultCategoryId","setDefaultCategoryId","defaultSubCategoryId","setDefaultSubCategoryId","showWeightFields","setShowWeightFields","productUnitBio","setProductUnitBio","useEffect","getCategoryList","getProductUnitList","a","StaticAPI","result","console","log","CategoriesAPI","addUpdateCategoriesDialog","type","document","getElementById","value","alert","operation","id","getSubCategoryList","undefined","categoryId","subCategoriesList","getMainUnitRelateRecords","e","target","unitId","selectedUnit","find","ele","is_bundle","filter","handleSubmit","preventDefault","name","length","formData","subCategoryId","productName","description","createdBy","APP_TOKEN","get","userId","productUnits","mainUnitId","insertNewProduct","history","push","class","onSubmit","for","defaultValue","onChange","required","map","data","index","category_name","onClick","placeholder","unit_name","tempUnitArray","packetWeight","packetUnitId","unitInName","packetUnitIdName","unitData","unitValue","unitIn","price","isPacket","splice","disabled","default_weight","className","temp","unit_id","found","handleDeleteProductUnit","cols","rows","open"],"mappings":"oPAYe,SAASA,EAAWC,GAAQ,IAAD,EAEAC,mBAAS,IAFT,mBAE/BC,EAF+B,KAElBC,EAFkB,OAGEF,mBAAS,IAHX,mBAG/BG,EAH+B,KAGjBC,EAHiB,OAIQJ,mBAAS,IAJjB,mBAI/BK,EAJ+B,KAIdC,EAJc,OAKUN,mBAAS,IALnB,mBAK/BO,EAL+B,KAKbC,EALa,OAMMR,mBAAS,IANf,mBAM/BS,EAN+B,KAMfC,EANe,OAQcV,oBAAS,GARvB,mBAQ/BW,EAR+B,KAQXC,EARW,OASgBZ,mBAAS,IATzB,mBAS/Ba,EAT+B,KASVC,EATU,OAUYd,mBAAS,IAVrB,mBAU/Be,EAV+B,KAUZC,EAVY,OAWkBhB,mBAAS,IAX3B,mBAW/BiB,EAX+B,KAWTC,EAXS,OAYUlB,mBAAS,GAZnB,mBAY/BmB,EAZ+B,KAYbC,EAZa,OAaMpB,mBAAS,IAbf,oBAa/BqB,GAb+B,MAafC,GAbe,MAgBtCC,qBAAU,WACNC,KACAC,OACF,IAEF,IAAMA,GAAkB,uCAAG,4BAAAC,EAAA,+EAEEC,IAAUF,qBAFZ,OAEbG,EAFa,OAGnBtB,EAAmBsB,EAAOvB,iBAHP,gDAKnBwB,QAAQC,IAAI,WAAZ,MALmB,yDAAH,qDASlBN,GAAe,uCAAG,4BAAAE,EAAA,+EAEKK,IAAcP,kBAFnB,OAEVI,EAFU,OAGhBxB,EAAgBwB,EAAOzB,cAHP,gDAKhB0B,QAAQC,IAAI,WAAZ,MALgB,yDAAH,qDAUfE,GAA4B,SAACC,GAClB,IAATA,GAAqE,KAAtDC,SAASC,eAAe,oBAAoBC,MAC3DC,MAAM,sBAENvB,EAAuB,CAACmB,KAAMA,EAAMK,UAAW,MAAOC,GAAIL,SAASC,eAAe,oBAAoBC,QACtGxB,GAAsB,KAKxB4B,GAAkB,uCAAG,8BAAAd,EAAA,yDAEb,MADNa,EAAKL,SAASC,eAAe,oBAAoBC,aAC9BK,IAAPF,GAA2B,OAAPA,EAFb,0CAIMR,IAAcS,mBAAmB,CAACE,WAAYH,IAJpD,OAITX,EAJS,OAKf1B,EAAe0B,EAAOe,mBALP,gDAOfd,QAAQC,IAAI,WAAZ,MAPe,yDAAH,qDAYlBc,GAAwB,uCAAG,WAAOC,GAAP,uBAAAnB,EAAA,yDACP,KAAnBmB,EAAEC,OAAOV,MADiB,gBAEzB5B,EAAoB,IACpBE,EAAkB,IAHO,8BAKrBqC,EAASF,EAAEC,OAAOV,MAChBY,EAAe3C,EAAgB4C,MAAK,SAAAC,GAAQ,OAAOA,EAAIX,IAAMM,EAAEC,OAAOV,SACxEe,EAAYH,EAAaG,UAPJ,mBASAxB,IAAUiB,yBAAyB,CAACL,GAAIQ,EAAQI,UAAWA,IAT3D,QASfvB,EATe,OAUrBpB,EAAoBoB,EAAOvB,iBACrBI,EAAiBmB,EAAOvB,gBAAgB+C,QAAO,SAAAF,GAAQ,OAAwB,GAAjBA,EAAIC,aACxEzC,EAAkBD,GAZG,kDAcrBoB,QAAQC,IAAR,MAdqB,QAiB7BR,GAAkB,IAjBW,0DAAH,sDA8ExB+B,GAAY,uCAAG,WAAOR,GAAP,eAAAnB,EAAA,yDACjBmB,EAAES,iBADe,SAGQ,aAAlBT,EAAEC,OAAOS,KAHC,sBAINlC,GAAemC,OAAS,GAJlB,wBAKCC,EAAW,CACbf,WAAaR,SAASC,eAAe,oBAAoBC,MACzDsB,cAAgBxB,SAASC,eAAe,uBAAuBC,MAC/DuB,YAAczB,SAASC,eAAe,eAAeC,MACrDwB,YAAc1B,SAASC,eAAe,sBAAsBC,MAC5DyB,UAAaC,IAAUC,MAAMC,OAC7BC,aAAe5C,GACf6C,WAAahC,SAASC,eAAe,mBAAmBC,OAZvD,SAcgBL,IAAcoC,iBAAiBV,GAd/C,QAeS,IAfT,OAgBD1D,EAAMqE,QAAQC,KAAK,KAEnBhC,MAAM,oBAlBL,wBAqBLA,MAAM,sCArBD,0DAyBbR,QAAQC,IAAI,WAAZ,MAzBa,0DAAH,sDA6BlB,OACA,kBAAC,WAAD,KACI,kBAAC,IAAD,MACI,6BAASwC,MAAM,gBACX,yBAAKA,MAAM,aACP,yBAAKA,MAAM,8BACP,yBAAKA,MAAM,iDACP,wBAAIA,MAAM,wBAAV,mBACA,0BAAMC,SAAUlB,GAAcE,KAAK,WAAWe,MAAM,2BAC5C,yBAAKA,MAAM,uBACP,yBAAKA,MAAM,YACP,yBAAKA,MAAM,cACP,2BAAOE,IAAI,WAAX,eACA,yBAAKF,MAAM,UACP,4BAAQ/B,GAAG,mBAAmB+B,MAAM,eAAeG,aAAc1D,EAAmB2D,SAAUlC,GAAoBmC,UAAQ,GACtH,4BAASvC,MAAQ,IAAjB,uBACmBK,IAAjBtC,GAA+C,OAAjBA,GAA0C,KAAjBA,IACvDA,EAAaqD,OAAS,EAAIrD,EAAe,IAAKyE,KAAI,SAACC,EAAMC,GACvD,OACI,4BAAQvC,GAAIsC,EAAKtC,GAAIH,MAAOyC,EAAKtC,IAAMsC,EAAKE,mBAKxD,2BAAO9C,KAAK,SAASqC,MAAM,0BAA0BU,QAAS,WAAKhD,GAA0B,IAAKI,MAAM,eAIpH,yBAAKkC,MAAM,YACP,yBAAKA,MAAM,cACP,2BAAOE,IAAI,WAAX,mBACA,yBAAKF,MAAM,UACP,4BAAQ/B,GAAG,sBAAsB+B,MAAM,eAAgBG,aAAcxD,EAAuB0D,UAAQ,GAChG,4BAASvC,MAAQ,IAAjB,uBACkBK,IAAhBxC,GAA6C,OAAhBA,GAAwC,KAAhBA,IACrDA,EAAYuD,OAAS,EAAIvD,EAAc,IAAK2E,KAAI,SAACC,EAAMC,GACrD,OACI,4BAAQvC,GAAIsC,EAAKtC,GAAIH,MAAOyC,EAAKtC,IAAMsC,EAAKE,mBAKxD,2BAAO9C,KAAK,SAASqC,MAAM,0BAA0BU,QAAS,WAAKhD,GAA0B,IAAKI,MAAM,eAIpH,yBAAKkC,MAAM,UACX,yBAAKA,MAAM,YACP,yBAAKA,MAAM,cACP,2BAAOE,IAAI,eAAX,kBACA,2BAAOjC,GAAG,cAAcN,KAAK,OAAOqC,MAAM,eAAeW,YAAY,GAAGN,UAAQ,MAGxF,yBAAKL,MAAM,YACP,yBAAKA,MAAM,cACP,2BAAOE,IAAI,mBAAX,uBACI,4BAAQjC,GAAG,kBAAkB+B,MAAM,eAAeK,UAAQ,EAACD,SAAU9B,IACjE,4BAASR,MAAQ,IAAjB,uBACsBK,IAApBpC,GAAqD,OAApBA,GAAgD,KAApBA,IAC9DA,EAAgBmD,OAAS,EAAInD,EAAkB,IAAKuE,KAAI,SAACC,EAAMC,GAC5D,OACkB,IAAlBD,EAAK1B,UAAoB,4BAAQZ,GAAIsC,EAAKtC,GAAIH,MAAOyC,EAAKtC,IAAMsC,EAAKK,WAAqB,WAO7G3E,EAAiBiD,OAAS,GAC3B,0BAAMe,SAjJb,SAAC1B,GAE1B,GADAA,EAAES,iBACmB,cAAlBT,EAAEC,OAAOS,KAAqB,CAC7B,IAAI4B,EAAa,YAAO9D,IAEpB+D,EAAgBlD,SAASC,eAAe,gBAAkBD,SAASC,eAAe,gBAAgBC,MAAQ,GAC1GiD,EAAgBnD,SAASC,eAAe,gBAAkBD,SAASC,eAAe,gBAAgBC,MAAO,GACzGkD,EAAajF,EAAgB4C,MAAK,SAAAC,GAAS,OAAOA,EAAIX,IAAML,SAASC,eAAe,iBAAiBC,SACrGmD,EAAmBlF,EAAgB4C,MAAK,SAAAC,GAAQ,OAAOA,EAAIX,IAAO8C,KAElEG,EAAW,CACXC,UAAYvD,SAASC,eAAe,oBAAoBC,MACxDsD,OAASxD,SAASC,eAAe,iBAAiBC,MAClDuD,MAAQzD,SAASC,eAAe,gBAAgBC,MAChDwD,SAAWP,EAAe,EAAI,EAC9BD,aAAeA,EACfC,aAAeA,EACfC,WAAaA,EAAWJ,UACxBK,iBAAoBA,EAAoBA,EAAiBL,UAAY,IAEzEC,EAAcd,KAAKmB,GACnBlE,GAAkB6D,GAEV,YAAO5E,GACVqE,KAAI,SAACC,EAAMC,GACTD,EAAKtC,IAAMiD,EAASE,QACnBnF,EAAiBsF,OAAOf,EAAM,MAGtC5C,SAASC,eAAe,iBAAiBC,MAAQ,KAoHiBmB,KAAK,YAAYe,MAAM,cAC7D,yBAAKA,MAAM,YACP,yBAAKA,MAAM,cACP,2BAAOE,IAAI,iBAAX,sBACA,yBAAKF,MAAM,UACP,2BAAO/B,GAAG,mBAAmBN,KAAK,OAAOqC,MAAM,eAAeG,aAAa,IAAIqB,UAAQ,EAACnB,UAAQ,IAChG,4BAAQpC,GAAG,gBAAgB+B,MAAM,eAAeK,UAAQ,EAACF,aAAa,GAAIC,SAlKvF,SAAC7B,GAChC,IAAMG,EAAe3C,EAAgB4C,MAAK,SAAAC,GAAQ,OAAOA,EAAIX,IAAMM,EAAEC,OAAOV,SACzEY,GACC5B,EAAoB4B,EAAaG,WACjCjB,SAASC,eAAe,oBAAoBC,MAAQY,EAAa+C,iBAEjE3E,EAAoB,GACpBc,SAASC,eAAe,oBAAoBC,MAAQ,KA4JR,4BAASA,MAAQ,IAAjB,uBACuBK,IAArBlC,GAAuD,OAArBA,GAAkD,KAArBA,IAChEA,EAAiBiD,OAAS,EAAIjD,EAAmB,IAAKqE,KAAI,SAACC,EAAMC,GAC9D,OACI,4BAAQvC,GAAIsC,EAAKtC,GAAIH,MAAOyC,EAAKtC,IAAMsC,EAAKK,kBAQ7C,IAAtB/D,GACG,yBAAKmD,MAAM,YACP,yBAAKA,MAAM,cACP,2BAAOE,IAAI,iBAAX,YACA,yBAAKF,MAAM,UACP,2BAAO/B,GAAG,eAAeN,KAAK,OAAOqC,MAAM,eAAeW,YAAY,GAAGN,UAAQ,IACjF,4BAAQpC,GAAG,eAAe+B,MAAM,eAAeK,UAAQ,GACnD,4BAASvC,MAAQ,IAAjB,uBACqBK,IAAnBhC,GAAmD,OAAnBA,GAA8C,KAAnBA,IAC5DA,EAAe+C,OAAS,EAAI/C,EAAiB,IAAKmE,KAAI,SAACC,EAAMC,GAC1D,OACI,4BAAQvC,GAAIsC,EAAKtC,GAAIH,MAAOyC,EAAKtC,IAAMsC,EAAKK,kBASxE,yBAAKZ,MAA6B,IAAtBnD,EAA0B,WAAa,YAC/C,yBAAKmD,MAAM,cACP,2BAAOE,IAAI,gBAAX,gBACA,2BAAOjC,GAAG,eAAeN,KAAK,OAAOqC,MAAM,eAAeW,YAAY,OAG9E,yBAAKX,MAAM,YACP,4BAAQrC,KAAK,UAAb,UAIJ,yBAAKqC,MAAM,SACVjD,GAAemC,OAAS,GACzB,2BAAOwC,UAAU,oBACb,+BACI,4BACI,iCACA,qCACA,qCACA,wCAGR,gCACM3E,GAAemC,OAAS,EAAInC,GAAiB,IAAIuD,KAAI,SAACC,EAAMC,GAC1D,OACI,4BACI,4BAAKA,EAAQ,GACb,4BACKD,EAAKY,UAAY,IAAMZ,EAAKS,WAC3BT,EAAKO,cAAgBP,EAAKQ,aAA3B,WAA+CR,EAAKO,aAApD,YAAoEP,EAAKU,iBAAzE,iBAAkGV,EAAKS,WAAvG,SAEL,4BAAKT,EAAKc,OACV,4BACI,4BAAQ1D,KAAK,SAAS+D,UAAU,gBAAgBhB,QAAS,YAxLrF,SAACF,GAC7B,IAAIK,EAAa,YAAO9D,IACpB4E,EAAI,YAAO1F,GAGT2F,EAAUf,EAAcL,GAAOY,OAC/BS,EAAQ9F,EAAgB4C,MAAK,SAAAC,GAAQ,OAAOA,EAAIX,IAAM2D,KAC5DD,EAAK5B,KAAK8B,GACV3F,EAAoByF,GAEpBd,EAAcU,OAAOf,EAAM,GAC3BxD,GAAkB6D,GA6KoGiB,CAAwBtB,KAAtF,kBASxB,yBAAKR,MAAM,aACP,yBAAKA,MAAM,cACP,2BAAOE,IAAI,eAAX,gBACA,8BAAUjB,KAAK,GAAGhB,GAAG,qBAAqB8D,KAAK,KAAKC,KAAK,KAAKhC,MAAM,mBAG5E,yBAAKA,MAAM,UACX,yBAAKA,MAAM,kBACP,2BAAOrC,KAAK,SAASG,MAAM,SAASkC,MAAM,iCAQ9E,kBAAC,IAAD,MACM3D,EACE,kBAAC,IAAD,CACI4F,KAAM5F,EACNC,sBAAyBA,EACzBb,MAASc,EACTT,gBAAmBA,EACnBF,eAAkBA,EAClBc,qBAAwBA,EACxBE,wBAA2BA,IAE7B","file":"static/js/9.3f19a1b2.chunk.js","sourcesContent":["import React, {useState, useEffect, Fragment} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n//Components \r\nimport CategoriesAPI from '../../api/categories.js';\r\nimport {APP_TOKEN} from '../../api/config/Constants.js';\r\nimport StaticAPI from '../../api/static.js';\r\nimport Header from '../Partials/Header.js';\r\nimport Footer from '../Partials/Footer.js';\r\nimport AddUpdateCategoriesDialog from './Components/AddUpdateCategoriesDialog.js';\r\n\r\n\r\nexport default function AddProduct(props) {\r\n\r\n    const [subCategory, setSubCategory] = useState([]);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [productUnitList, setProductUnitList] = useState([]);\r\n    const [filteredUnitList, setFilteredUnitList] = useState([]);\r\n    const [singleUnitList, setSingleUnitList] = useState([]);\r\n    \r\n    const [categoryDialogOpen, setCategoryDialogOpen] = useState(false);\r\n    const [categoryDialogProps, setCategoryDialogProps] = useState({});\r\n    const [defaultCategoryId, setDefaultCategoryId] = useState(\"\");\r\n    const [defaultSubCategoryId, setDefaultSubCategoryId] = useState(\"\");\r\n    const [showWeightFields, setShowWeightFields] = useState(0);\r\n    const [productUnitBio, setProductUnitBio] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        getCategoryList();\r\n        getProductUnitList();\r\n    },[]);\r\n\r\n    const getProductUnitList = async () => {\r\n        try{\r\n            const result = await StaticAPI.getProductUnitList();\r\n            setProductUnitList(result.productUnitList);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    const getCategoryList = async () => {\r\n        try{\r\n            const result = await CategoriesAPI.getCategoryList();\r\n            setCategoryList(result.categoryList);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n\r\n    const addUpdateCategoriesDialog = (type) => {\r\n        if (type === 2 && (document.getElementById('categoryDropDown').value === \"\")) {\r\n            alert('Select Category !');\r\n        }else{\r\n            setCategoryDialogProps({type: type, operation: 'add', id: document.getElementById('categoryDropDown').value })\r\n            setCategoryDialogOpen(true);\r\n        }\r\n    }\r\n\r\n\r\n    const getSubCategoryList = async () => {\r\n        let id = document.getElementById('categoryDropDown').value;\r\n        if(id !== '' && id !== undefined && id !== null){\r\n            try{\r\n                const result = await CategoriesAPI.getSubCategoryList({categoryId: id});\r\n                setSubCategory(result.subCategoriesList);\r\n            }catch(e){\r\n                console.log('Error...',e);\r\n            }\r\n        }\r\n    }\r\n\r\n    const getMainUnitRelateRecords = async (e) => {\r\n        if(e.target.value === \"\"){\r\n            setFilteredUnitList([]);\r\n            setSingleUnitList([]);\r\n        }else {\r\n            let unitId = e.target.value;\r\n            const selectedUnit = productUnitList.find(ele => {return ele.id == e.target.value});\r\n            let is_bundle = selectedUnit.is_bundle;\r\n            try{\r\n                const result = await StaticAPI.getMainUnitRelateRecords({id: unitId, is_bundle: is_bundle});\r\n                setFilteredUnitList(result.productUnitList);\r\n                const singleUnitList = result.productUnitList.filter(ele => {return ele.is_bundle == 0});\r\n                setSingleUnitList(singleUnitList);\r\n            } catch(e){\r\n                console.log(e)\r\n            }\r\n        }\r\n        setProductUnitBio([]);\r\n    }\r\n    \r\n    const handleMeasurementSelection = (e) => {        \r\n        const selectedUnit = productUnitList.find(ele => {return ele.id == e.target.value});\r\n        if(selectedUnit){\r\n            setShowWeightFields(selectedUnit.is_bundle);\r\n            document.getElementById('productUnitValue').value = selectedUnit.default_weight;            \r\n        }else{\r\n            setShowWeightFields(0);\r\n            document.getElementById('productUnitValue').value = 1;\r\n        }\r\n    }\r\n\r\n    const handleAddProductUnit = (e) => {\r\n        e.preventDefault();\r\n        if(e.target.name === \"innerForm\"){\r\n            let tempUnitArray = [...productUnitBio];\r\n            \r\n            let packetWeight =  document.getElementById(\"packetWeight\") ? document.getElementById(\"packetWeight\").value : '';\r\n            let packetUnitId =  document.getElementById(\"packetUnitId\") ? document.getElementById(\"packetUnitId\").value :'';\r\n            let unitInName = productUnitList.find(ele => { return ele.id == document.getElementById(\"productUnitIn\").value});\r\n            let packetUnitIdName = productUnitList.find(ele => {return ele.id ==  packetUnitId});\r\n\r\n            let unitData = {\r\n                unitValue : document.getElementById(\"productUnitValue\").value,\r\n                unitIn : document.getElementById(\"productUnitIn\").value,\r\n                price : document.getElementById(\"productPrice\").value,\r\n                isPacket : packetUnitId ? 1 : 0,\r\n                packetWeight : packetWeight,\r\n                packetUnitId : packetUnitId,\r\n                unitInName : unitInName.unit_name,\r\n                packetUnitIdName :  packetUnitIdName ?  packetUnitIdName.unit_name : '',\r\n            }\r\n            tempUnitArray.push(unitData);\r\n            setProductUnitBio(tempUnitArray);\r\n\r\n            let temp = [...filteredUnitList];\r\n            temp.map((data, index) => {\r\n                if(data.id == unitData.unitIn){\r\n                    filteredUnitList.splice(index,1);\r\n                }\r\n            });\r\n            document.getElementById(\"productUnitIn\").value = \"\";\r\n        }\r\n    }\r\n\r\n    const handleDeleteProductUnit = (index) => {\r\n        let tempUnitArray = [...productUnitBio];\r\n        let temp = [...filteredUnitList];\r\n\r\n\r\n        const unit_id = tempUnitArray[index].unitIn;\r\n        const found = productUnitList.find(ele => {return ele.id == unit_id})\r\n        temp.push(found);\r\n        setFilteredUnitList(temp);\r\n\r\n        tempUnitArray.splice(index,1);\r\n        setProductUnitBio(tempUnitArray);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try{            \r\n            if(e.target.name === \"mainForm\"){\r\n                if(productUnitBio.length > 0){\r\n                    const formData = {\r\n                        categoryId : document.getElementById('categoryDropDown').value,\r\n                        subCategoryId : document.getElementById('subCategoryDropDown').value,\r\n                        productName : document.getElementById('productName').value,\r\n                        description : document.getElementById('productDescription').value,\r\n                        createdBy :  APP_TOKEN.get().userId,\r\n                        productUnits : productUnitBio,\r\n                        mainUnitId : document.getElementById('productMainUnit').value,\r\n                    };\r\n                    const result = await CategoriesAPI.insertNewProduct(formData);\r\n                    if(result === true){    // true = inserted\r\n                        props.history.push('/');\r\n                    }else{\r\n                        alert('Failed Insertion');\r\n                    }\r\n                }else{\r\n                    alert('Add atleast one unit for product..');\r\n                }\r\n            }\r\n        }catch(e){\r\n            console.log('Error...', e);\r\n        }\r\n    }\r\n\r\n    return(\r\n    <Fragment>\r\n        <Header />\r\n            <section class=\"ftco-section\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <h3 class=\"mb-4 billing-heading\">Add New Product</h3>\r\n                            <form onSubmit={handleSubmit} name=\"mainForm\" class=\"p-5 bg-light b-top-dark\">\r\n                                    <div class=\"row align-items-end\">\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"country\">Category * </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <select id=\"categoryDropDown\" class=\"form-control\" defaultValue={defaultCategoryId} onChange={getSubCategoryList} required>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(categoryList !== undefined && categoryList !== null && categoryList !== \"\") && \r\n                                                         (categoryList.length > 0 ? categoryList : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                                <option id={data.id} value={data.id} >{data.category_name}</option>\r\n                                                            )\r\n                                                         })\r\n                                                        }\r\n                                                    </select>\r\n                                                    <input type=\"button\" class=\"btn btn-primary br-none\" onClick={()=>{addUpdateCategoriesDialog(1)}} value=\"Add New\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>   \r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"country\">Sub Category * </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <select id=\"subCategoryDropDown\" class=\"form-control\"  defaultValue={defaultSubCategoryId}  required>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(subCategory !== undefined && subCategory !== null && subCategory !== \"\") && \r\n                                                         (subCategory.length > 0 ? subCategory : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                                <option id={data.id} value={data.id} >{data.category_name}</option>\r\n                                                            )\r\n                                                         })\r\n                                                        }\r\n                                                    </select>\r\n                                                    <input type=\"button\" class=\"btn btn-primary br-none\" onClick={()=>{addUpdateCategoriesDialog(2)}} value=\"Add New\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>    \r\n                                        <div class=\"w-100\"></div>\r\n                                        <div class=\"col-md-8\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"productName\">Product Name *</label>\r\n                                                <input id=\"productName\" type=\"text\" class=\"form-control\" placeholder=\"\" required/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"productMainUnit\">Measure Main Unit *</label>\r\n                                                    <select id=\"productMainUnit\" class=\"form-control\" required onChange={getMainUnitRelateRecords}>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(productUnitList !== undefined && productUnitList !== null && productUnitList !== \"\") && \r\n                                                        (productUnitList.length > 0 ? productUnitList : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                            data.is_bundle ===0 ?    <option id={data.id} value={data.id} >{data.unit_name}</option> :null\r\n                                                            )\r\n                                                        })\r\n                                                        }\r\n                                                    </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        {filteredUnitList.length > 0 && \r\n                                        <form onSubmit={handleAddProductUnit} name=\"innerForm\" class=\"inner-form\">\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"productUnitIn\">Unit/Measurement *</label>\r\n                                                <div class=\"d-flex\">  \r\n                                                    <input id=\"productUnitValue\" type=\"text\" class=\"form-control\" defaultValue=\"1\" disabled required/>                                         \r\n                                                    <select id=\"productUnitIn\" class=\"form-control\" required defaultValue=\"\"  onChange={handleMeasurementSelection}>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(filteredUnitList !== undefined && filteredUnitList !== null && filteredUnitList !== \"\") && \r\n                                                        (filteredUnitList.length > 0 ? filteredUnitList : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                                <option id={data.id} value={data.id} >{data.unit_name}</option>\r\n                                                            )\r\n                                                        })\r\n                                                        }\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {showWeightFields  === 1 &&\r\n                                            <div class=\"col-md-4\">\r\n                                                <div class=\"form-group\">                                                \r\n                                                    <label for=\"productWeight\">Weight *</label>\r\n                                                    <div class=\"d-flex\">  \r\n                                                        <input id=\"packetWeight\" type=\"text\" class=\"form-control\" placeholder=\"\" required/>\r\n                                                        <select id=\"packetUnitId\" class=\"form-control\" required>\r\n                                                            <option  value = \"\">Select any one</option>\r\n                                                            {(singleUnitList !== undefined && singleUnitList !== null && singleUnitList !== \"\") && \r\n                                                            (singleUnitList.length > 0 ? singleUnitList : [] ).map((data, index)=>{\r\n                                                                return(\r\n                                                                    <option id={data.id} value={data.id} >{data.unit_name}</option > \r\n                                                                )\r\n                                                            })\r\n                                                            }\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                        <div class={showWeightFields  === 0 ? \"col-md-6\" : \"col-md-2\"}>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"productPrice\">Price (In $)</label>\r\n                                                <input id=\"productPrice\" type=\"text\" class=\"form-control\" placeholder=\"\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"add-unit\">\r\n                                            <button type=\"submit\"> Add</button>\r\n                                        </div>\r\n                                        </form>\r\n                                        }\r\n                                        <div class=\"w-100\">\r\n                                        {productUnitBio.length > 0 &&\r\n                                        <table className=\"unit-array-table\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>#</th>\r\n                                                    <th>Units</th>\r\n                                                    <th>Price</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {(productUnitBio.length > 0 ? productUnitBio : []).map((data, index) => {\r\n                                                    return(\r\n                                                        <tr>\r\n                                                            <td>{index + 1}</td>\r\n                                                            <td>\r\n                                                                {data.unitValue + ' ' + data.unitInName}\r\n                                                                {(data.packetWeight && data.packetUnitId) ? `(${data.packetWeight} ${data.packetUnitIdName} per  ${data.unitInName})` : ``}\r\n                                                            </td>\r\n                                                            <td>{data.price}</td>\r\n                                                            <td>\r\n                                                                <button type=\"button\" className=\"delete-button\" onClick={()=>{handleDeleteProductUnit(index)}}>Delete</button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })}\r\n                                            </tbody>\r\n                                            </table>\r\n                                        }\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"description\">Description </label>\r\n                                                <textarea name=\"\" id=\"productDescription\" cols=\"30\" rows=\"10\" class=\"form-control\"></textarea>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"w-100\"></div>\r\n                                        <div class=\"form-group p-4\">\r\n                                            <input type=\"submit\" value=\"Submit\" class=\"btn  px-4 btn-primary\" />\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        <Footer />\r\n            { categoryDialogOpen ? \r\n                <AddUpdateCategoriesDialog \r\n                    open={categoryDialogOpen} \r\n                    setCategoryDialogOpen = {setCategoryDialogOpen} \r\n                    props = {categoryDialogProps} \r\n                    setCategoryList = {setCategoryList}\r\n                    setSubCategory = {setSubCategory}\r\n                    setDefaultCategoryId = {setDefaultCategoryId}\r\n                    setDefaultSubCategoryId = {setDefaultSubCategoryId}\r\n                /> \r\n                : null \r\n            }\r\n    </Fragment>\r\n    )\r\n}"],"sourceRoot":""}