{"version":3,"sources":["common/Validation/RegistrationFormRule.js","Views/Auth/signup.js"],"names":["validate","values","errors","firstname","validString","test","lastname","mobile","validNumber","length","email","validEmail","email_verification","userId","validNonSpaceString","userId_verification","password","passwordRegex","confirmpassword","RESET_VALUES","Login","props","history","useState","inputs","setInputs","setErrors","setIsInvalideCredentials","isLoading","setIsLoading","isSubmitting","setIsSubmitting","showRegisteredMsg","setShowRegisteredMsg","message","variant","alertParams","setAlertParams","handleInputChange","target","name","value","handleEmailVerification","e","a","AuthAPI","verifyEmail","isExist","console","log","handleUserIdVerification","verifyUserId","user_id","handleRegistration","preventDefault","Object","register","result","isRegistered","mailSend","className","class","style","color","href","fontWeight","onSubmit","for","type","id","onChange","disabled","onBlur","src","alt","padding","paddingLeft","marginTop"],"mappings":"gNAGe,SAASA,EAASC,GAC7B,IAAIC,EAAS,GA8Db,OA5DKD,EAAOE,UAEAC,IAAYC,KAAKJ,EAAOE,aAChCD,EAAOC,UAAY,yBAFnBD,EAAOC,UAAY,wBAMlBF,EAAOK,SAECF,IAAYC,KAAKJ,EAAOK,YACjCJ,EAAOI,SAAW,wBAFlBJ,EAAOI,SAAW,uBAMjBL,EAAOM,OAEAC,IAAYH,KAAKJ,EAAOM,SAExBN,EAAOM,OAAQE,OAAO,GAAMR,EAAOM,OAAQE,OAAS,MAC5DP,EAAOK,OAAS,4BAFhBL,EAAOK,OAAS,2BAFhBL,EAAOK,OAAS,2BAQfN,EAAOS,MAECC,IAAWN,KAAKJ,EAAOS,QAEK,IAA9BT,EAAOW,qBACdV,EAAOQ,MAAQ,4BAFfR,EAAOQ,MAAQ,2BAFfR,EAAOQ,MAAQ,2BASdT,EAAOY,OAEAC,IAAoBT,KAAKJ,EAAOY,SAEF,IAA/BZ,EAAOc,sBACdb,EAAOW,OAAS,yBAFhBX,EAAOW,OAAS,mBAFhBX,EAAOW,OAAS,qBAQfZ,EAAOe,SAEAC,IAAcZ,KAAKJ,EAAOe,YAClCd,EAAOc,SAAW,uBAFlBd,EAAOc,SAAW,sBAKjBf,EAAOiB,gBAEAD,IAAcZ,KAAKJ,EAAOe,UAE1Bf,EAAOe,WAAef,EAAOiB,kBACrChB,EAAOgB,gBAAkB,8BAFzBhB,EAAOgB,gBAAkB,8BAFzBhB,EAAOgB,gBAAkB,8BAWtBhB,E,wCCvDX,IAAMiB,EAAe,CACjBhB,UAAY,GACZG,SAAW,GACXC,OAAS,GACTG,MAAQ,GACRE,oBAAqB,EACrBC,OAAS,GACTE,qBAAsB,EACtBC,SAAW,GACXE,gBAAkB,IAGP,SAASE,EAAMC,GAEVA,EAAMC,QAAtB,IAFgC,EAGJC,mBAASJ,GAHL,mBAGzBK,EAHyB,KAGjBC,EAHiB,OAIJF,mBAASJ,GAJL,mBAIzBjB,EAJyB,KAIjBwB,EAJiB,OAK0BH,oBAAS,GALnC,mBAKFI,GALE,aAMEJ,oBAAS,GANX,mBAMzBK,EANyB,KAMdC,EANc,OAOQN,oBAAS,GAPjB,mBAOzBO,EAPyB,KAOXC,EAPW,OAQkBR,oBAAS,GAR3B,mBAQzBS,EARyB,KAQNC,EARM,OASMV,mBAAS,CAACW,QAAQ,GAAIC,QAAS,SATrC,mBASzBC,EATyB,KASZC,EATY,KAY1BC,EAAqB,SAACjB,GAC1BI,EAAU,2BAAID,GAAL,kBAAcH,EAAMkB,OAAOC,KAAOnB,EAAMkB,OAAOE,SACxDd,GAAyB,IASrBe,EAAuB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACtBlC,EAAQiC,EAAEJ,OAAOE,MADK,SAGnB/B,EAHmB,gBAIpBgB,EAAU,2BAAIxB,GAAL,kBAAc,QAAU,8BAJb,0BAKXS,IAAWN,KAAKK,GALL,iBAMpBgB,EAAU,2BAAIxB,GAAL,kBAAc,QAAU,8BANb,+BAQpBwB,EAAU,2BAAIxB,GAAL,kBAAc,QAAU,MACjCuB,EAAU,2BAAID,GAAL,kBAAc,sBAAuB,KAT1B,UAUCqB,IAAQC,YAAY,CAACpC,MAAQA,IAV9B,SAWE,IAXF,OAWVqC,UACNrB,EAAU,2BAAIxB,GAAL,kBAAc,QAAU,8BACjCuB,EAAU,2BAAID,GAAL,kBAAc,sBAAuB,MAb9B,0DAiBxBwB,QAAQC,IAAI,WAAZ,MAjBwB,0DAAH,sDAqBvBC,EAAwB,uCAAG,WAAOP,GAAP,eAAAC,EAAA,yDACvB/B,EAAS8B,EAAEJ,OAAOE,MADK,SAGpB5B,EAHoB,gBAIrBa,EAAU,2BAAIxB,GAAL,kBAAc,SAAW,wBAJb,0BAKbY,IAAoBT,KAAKQ,GALZ,iBAMrBa,EAAU,2BAAIxB,GAAL,kBAAc,SAAW,qBANb,+BAQrBwB,EAAU,2BAAIxB,GAAL,kBAAc,SAAW,MAClCuB,EAAU,2BAAID,GAAL,kBAAc,uBAAwB,KAT1B,UAUAqB,IAAQM,aAAa,CAACC,QAAUvC,IAVhC,SAWC,IAXD,OAWXkC,UACNrB,EAAU,2BAAIxB,GAAL,kBAAc,SAAW,2BAClCuB,EAAU,2BAAID,GAAL,kBAAc,uBAAwB,MAb9B,0DAiBzBwB,QAAQC,IAAI,WAAZ,MAjByB,0DAAH,sDAqBxBI,EAAkB,uCAAG,WAAOV,GAAP,iBAAAC,EAAA,6DACvBD,EAAEW,iBADqB,SAGFtD,EAASwB,GAHP,UAGjBtB,EAHiB,OAIvBwB,EAAUxB,GAE0B,IAAjCqD,OAAOtD,OAAOC,GAAQO,OANF,wBAOnBoB,GAAa,GACbE,GAAgB,GARG,mBAUMc,IAAQW,SAAS,CAClCrD,UAAYqB,EAAOrB,UACnBG,SAAWkB,EAAOlB,SAClBC,OAASiB,EAAOjB,OAChBG,MAAQc,EAAOd,MACf0C,QAAU5B,EAAOX,OACjBG,SAAWQ,EAAOR,WAhBP,SAkBY,KARrByC,EAVS,QAkBLC,eACNjC,EAAUN,IACa,IAApBsC,EAAOE,SACNtB,EAAe,2BAAID,GAAL,kBAAmB,UAAY,mFAE7CC,EAAe,2BAAID,GAAL,kBAAmB,UAAY,mGAEjDH,GAAqB,IAEzBJ,GAAa,GACbE,GAAgB,GA5BD,kDA8BfiB,QAAQC,IAAI,WAAZ,MA9Be,0DAAH,sDAsCxB,OACI,kBAAC,WAAD,KACI,6BAASW,UAAU,kBACf,yBAAKA,UAAW,oBACZ,yBAAKA,UAAU,oBACX,uBAAGC,MAAM,gBAAT,gBACA,uBAAGC,MAAO,CAACC,MAAO,iBAAlB,4BACA,2BAAG,uBAAGC,KAAK,SAASF,MAAO,CAACC,MAAO,aAAcE,WAAY,QAA1D,gBAEP,yBAAKL,UAAU,mBACX,0BAAMM,SAAUb,EAAoBQ,MAAM,gBACxD,6BACsB,wBAAID,UAAU,kBAAd,mBACA,wBAAIA,UAAU,kBAEtB,yBAAKC,MAAM,4BACV,yBAAKA,MAAM,YACH,yBAAKA,MAAM,cACV,2BAAOM,IAAI,aAAX,gBACG,2BAAOC,KAAK,OAAO3B,MAAOjB,EAAOrB,UAAWqC,KAAK,YAAY6B,GAAG,YAAYR,MAAM,sBAAuBS,SAAUhC,IACnH,2BAAO8B,KAAK,OAAO3B,MAAOvC,EAAOC,UAAWoE,UAAQ,EAAEX,UAAW1D,EAAOC,UAAY,sBAAwB,yBAGpH,yBAAK0D,MAAM,YACP,yBAAKA,MAAM,cACV,2BAAOM,IAAI,YAAX,eACG,2BAAOC,KAAK,OAAO3B,MAAOjB,EAAOlB,SAAUkC,KAAM,WAAW6B,GAAG,WAAWR,MAAM,sBAAuBS,SAAUhC,IAC9G,2BAAO8B,KAAK,OAAO3B,MAAOvC,EAAOI,SAAUiE,UAAQ,EAAEX,UAAW1D,EAAOI,SAAW,sBAAwB,yBAGxH,yBAAKuD,MAAM,YACD,yBAAKA,MAAM,cACP,2BAAOM,IAAI,UAAX,YACA,2BAAOC,KAAK,OAAO3B,MAAOjB,EAAOjB,OAAQiC,KAAK,SAAS6B,GAAG,SAASR,MAAM,sBAAuBS,SAvH1G,SAAA3B,IACC,KAAnBA,EAAEJ,OAAOE,OAAgBjC,IAAYH,KAAKsC,EAAEJ,OAAOE,SACrDhB,EAAU,2BAAID,GAAL,kBAAcmB,EAAEJ,OAAOC,KAAOG,EAAEJ,OAAOE,YAsHlB,2BAAO2B,KAAK,OAAO3B,MAAOvC,EAAOK,OAAQgE,UAAQ,EAAEX,UAAW1D,EAAOK,OAAS,sBAAwB,yBAG9G,yBAAKsD,MAAM,YACP,yBAAKA,MAAM,cACP,2BAAOM,IAAI,iBAAX,mBACA,2BAAOC,KAAK,OAAO3B,MAAOjB,EAAOd,MAAO8B,KAAK,QAAQ6B,GAAG,QAAQR,MAAM,sBAAuBS,SAAUhC,EAAmBkC,OAAQ9B,IAClI,2BAAO0B,KAAK,OAAO3B,MAAOvC,EAAOQ,MAAO6D,UAAQ,EAAEX,UAAW1D,EAAOQ,MAAQ,sBAAwB,yBAG5G,yBAAKmD,MAAM,aACP,yBAAKA,MAAM,cACP,2BAAOM,IAAI,UAAX,aACA,2BAAOC,KAAK,OAAO3B,MAAOjB,EAAOX,OAAQ2B,KAAK,SAAS6B,GAAG,SAASR,MAAM,sBAAuBS,SAAUhC,EAAmBkC,OAAQtB,IACrI,2BAAOkB,KAAK,OAAO3B,MAAOvC,EAAOW,OAAQ0D,UAAQ,EAAEX,UAAW1D,EAAOW,OAAS,sBAAwB,yBAG9G,yBAAKgD,MAAM,YACP,yBAAKA,MAAM,cACP,2BAAOM,IAAI,YAAX,cACA,yBAAKP,UAAU,eACX,yBAAKa,IAAI,2BAA2BC,IAAI,WAAWb,MAAM,uBACzD,0BAAMA,MAAM,eACR,wBAAID,UAAU,kBACV,oGACA,oGACA,qFACA,uFACA,iFAIZ,2BAAOQ,KAAK,WAAW3B,MAAOjB,EAAOR,SAAUwB,KAAK,WAAW6B,GAAG,WAAWR,MAAM,sBAAuBS,SAAUhC,IACpH,2BAAO8B,KAAK,OAAO3B,MAAOvC,EAAOc,SAAUuD,UAAQ,EAAEX,UAAW1D,EAAOc,SAAW,sBAAwB,yBAGlH,yBAAK6C,MAAM,YACP,yBAAKA,MAAM,cACP,2BAAOM,IAAI,mBAAX,sBACA,2BAAOC,KAAK,WAAW5B,KAAK,kBAAkB6B,GAAG,kBAAkBR,MAAM,sBAAsBpB,MAAOjB,EAAON,gBAAiBoD,SAAUhC,IACxI,2BAAO8B,KAAK,OAAO3B,MAAOvC,EAAOgB,gBAAiBqD,UAAQ,EAAEX,UAAW1D,EAAOgB,gBAAkB,sBAAwB,yBAGhI,yBAAK2C,MAAM,aACP,yBAAKA,MAAM,cACP,2BACI,2BAAOO,KAAK,SAAS3B,MAAM,SAASoB,MAAM,kBAAkBU,SAAUzC,OAIjFE,EAAoB,kBAAC,IAAD,CAAaE,QAASE,EAAYF,QAASC,QAASC,EAAYD,QAAS2B,MAAS,CAACa,QAAQ,MAAOC,YAAY,OAAQC,UAAU,UAAa,QAMrLjD,EAAc,kBAAC,IAAD,MAAmB","file":"static/js/33.c22898b1.chunk.js","sourcesContent":["import { validString, validNonSpaceString, passwordRegex, validNumber, validFullLengthDecimalNumber, validEmail, validAlpha } from './Regex';\r\n\r\n\r\nexport default function validate(values) {\r\n    let errors = {};  \r\n  \r\n    if (!values.firstname) {\r\n        errors.firstname = 'First name is missing';\r\n    } else if (!validString.test(values.firstname)) {\r\n        errors.firstname = 'First Name is invalid';\r\n    }\r\n    \r\n    \r\n    if (!values.lastname) {\r\n        errors.lastname = 'Last name is missing';\r\n    }  else if (!validString.test(values.lastname)) {\r\n        errors.lastname = 'Last Name is invalid';\r\n    }\r\n\r\n\r\n    if (!values.mobile) {\r\n        errors.mobile = 'Mobile number is missing';\r\n    } else if (!validNumber.test(values.mobile)) {\r\n        errors.mobile = 'Mobile number is invalid';\r\n    } else if ((values.mobile).length<9 || (values.mobile).length > 12) {\r\n        errors.mobile = 'Mobile number is invalid';\r\n    }\r\n    \r\n\r\n    if (!values.email) {\r\n        errors.email = 'Email Address is missing';\r\n    }  else if (!validEmail.test(values.email)) {\r\n        errors.email = 'Email Address is invalid';\r\n    }  else if(values.email_verification === true ){\r\n        errors.email = 'Email already registered';\r\n    }\r\n\r\n\r\n\r\n    if (!values.userId) {\r\n        errors.userId = 'User id is missing';\r\n    }  else if(!validNonSpaceString.test(values.userId)) {\r\n        errors.userId = 'Invalid user id.';\r\n    }  else if(values.userId_verification === true ){\r\n        errors.userId = 'User id already exist';\r\n    }\r\n\r\n    \r\n    if (!values.password) {\r\n        errors.password = 'Password is missing';\r\n    } else if (!passwordRegex.test(values.password)) {\r\n        errors.password = 'Password is invalid';\r\n    }\r\n\r\n    if (!values.confirmpassword) {\r\n        errors.confirmpassword = 'Confirm password is missing';\r\n    } else if (!passwordRegex.test(values.password)) {\r\n        errors.confirmpassword = 'Confirm Password is invalid';\r\n    } else if ((values.password) !== (values.confirmpassword)) {\r\n        errors.confirmpassword = 'Confirm Password not match';\r\n    }\r\n\r\n    \r\n\r\n    \r\n    \r\n    return errors;\r\n  };","import React, {useState, Fragment} from 'react';\r\n\r\n// Components\r\nimport {APP_TOKEN} from '../../api/config/Constants';\r\nimport AuthAPI from '../../api/auth.js';\r\n\r\nimport {SimpleAlert} from  '../../common/Alert.js';\r\nimport CallLoader from '../../common/Loader.js';\r\nimport validate from '../../common/Validation/RegistrationFormRule.js';\r\nimport {validNumber, validEmail, validNonSpaceString} from '../../common/Validation/Regex.js';\r\n\r\nconst RESET_VALUES = {\r\n    firstname : '',\r\n    lastname : '',\r\n    mobile : '',\r\n    email : '',\r\n    email_verification : false,\r\n    userId : '',\r\n    userId_verification : false,\r\n    password : '',    \r\n    confirmpassword : '',\r\n};\r\n\r\nexport default function Login(props){\r\n    \r\n    const history = props.history;\r\n    const [inputs, setInputs] = useState(RESET_VALUES);\r\n    const [errors, setErrors] = useState(RESET_VALUES);\r\n    const [isInvalideCredentials, setIsInvalideCredentials] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [showRegisteredMsg, setShowRegisteredMsg] = useState(false);\r\n    const [alertParams, setAlertParams] = useState({message:'', variant: 'info'});\r\n\r\n    \r\n    const handleInputChange  = (props) => {\r\n      setInputs({...inputs, [props.target.name]: props.target.value});\r\n      setIsInvalideCredentials(false);\r\n    }\r\n\r\n    const handleNumberInput = e => {\r\n        if (e.target.value === '' || validNumber.test(e.target.value)) {\r\n          setInputs({...inputs, [e.target.name]: e.target.value });\r\n        }\r\n    }\r\n    \r\n    const handleEmailVerification = async (e) => {\r\n        const email = e.target.value;        \r\n        try{\r\n            if (!email) {\r\n                setErrors({...errors, ['email']: 'Email Address is missing'}); \r\n            }  else if (!validEmail.test(email)) {\r\n                setErrors({...errors, ['email']: 'Email Address is invalid'});\r\n            }else {\r\n                setErrors({...errors, ['email']: ''});\r\n                setInputs({...inputs, ['email_verification']: false});\r\n                const result = await AuthAPI.verifyEmail({email : email});\r\n                if(result.isExist === true){\r\n                    setErrors({...errors, ['email']: 'Email already registered'});\r\n                    setInputs({...inputs, ['email_verification']: true});\r\n                }\r\n            }\r\n        }catch(e){\r\n            console.log(\"Error...\", e);\r\n        }\r\n    }\r\n\r\n    const handleUserIdVerification = async (e) => {\r\n        const userId = e.target.value;\r\n        try{\r\n            if (!userId) {\r\n                setErrors({...errors, ['userId']: 'User id is missing'});\r\n            }  else if(!validNonSpaceString.test(userId)) {\r\n                setErrors({...errors, ['userId']: 'Invalid user id'});\r\n            }  else {\r\n                setErrors({...errors, ['userId']: ''});\r\n                setInputs({...inputs, ['userId_verification']: false});\r\n                const result = await AuthAPI.verifyUserId({user_id : userId});\r\n                if(result.isExist === true){\r\n                    setErrors({...errors, ['userId']: 'User id already exist'});\r\n                    setInputs({...inputs, ['userId_verification']: true});\r\n                }\r\n            }\r\n        }catch(e){\r\n            console.log(\"Error...\", e);\r\n        }\r\n    }\r\n\r\n    const handleRegistration = async (e) => {       \r\n        e.preventDefault();\r\n\r\n        const errors = await validate(inputs);\r\n        setErrors(errors);\r\n\r\n        if(Object.values(errors).length === 0){\r\n            setIsLoading(true);\r\n            setIsSubmitting(true);\r\n            try{\r\n                const result = await AuthAPI.register({\r\n                    firstname : inputs.firstname,\r\n                    lastname : inputs.lastname,\r\n                    mobile : inputs.mobile,\r\n                    email : inputs.email,\r\n                    user_id : inputs.userId,\r\n                    password : inputs.password,\r\n                });\r\n                if(result.isRegistered === true){\r\n                    setInputs(RESET_VALUES);\r\n                    if(result.mailSend === true){\r\n                        setAlertParams({...alertParams, ['message']: \"Confirmation link sent on your registered email. Please confirm your account.\"});\r\n                    }else{\r\n                        setAlertParams({...alertParams, ['message']: \"Registration successfully but confirmation mail operation failed. contact your administrator.\"});\r\n                    }\r\n                    setShowRegisteredMsg(true);\r\n                }\r\n                setIsLoading(false);\r\n                setIsSubmitting(false);\r\n            }catch(e){\r\n                console.log('Error...',e);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <Fragment>\r\n            <section className=\"signup-section\">\r\n                <div className= \"signup-container\">\r\n                    <div className=\"signup-title-div\">\r\n                        <p class=\"signup-title\">SA SUPERMART</p>\r\n                        <p style={{color: 'antiquewhite'}}>Have already an account?</p>\r\n                        <p><a href=\"/login\" style={{color: 'aquamarine', fontWeight: '500'}}>Login here</a></p>                    \r\n                    </div>\r\n                    <div className=\"signup-form-div\">\r\n                        <form onSubmit={handleRegistration} class=\"billing-form\">\r\n\t\t\t\t\t\t    <div>\r\n                                <h5 className=\"create-account\">Create Account </h5>\r\n                                <hr className=\"margin-top-0\" />\r\n                            </div>\r\n\t          \t            <div class=\"row align-items-end m-10\">\r\n\t          \t\t            <div class=\"col-md-6\">\r\n\t                                <div class=\"form-group\">\r\n\t                \t                <label for=\"firstname\">First Name *</label>\r\n\t                                    <input type=\"text\" value={inputs.firstname} name=\"firstname\" id=\"firstname\" class=\"signup-form-control\"  onChange={handleInputChange} />\r\n\t                                    <input type=\"text\" value={errors.firstname} disabled  className={errors.firstname ? \"error-input d-block\" : \"error-input d-none\" } />\r\n\t                                </div>\r\n\t                            </div>\r\n\t                            <div class=\"col-md-6\">\r\n\t                                <div class=\"form-group\">\r\n\t                \t                <label for=\"lastname\">Last Name *</label>\r\n\t                                    <input type=\"text\" value={inputs.lastname} name= \"lastname\" id=\"lastname\" class=\"signup-form-control\"  onChange={handleInputChange} />\r\n                                        <input type=\"text\" value={errors.lastname} disabled  className={errors.lastname ? \"error-input d-block\" : \"error-input d-none\" } />                                        \r\n\t                                </div>\r\n                                </div>\r\n            \t\t            <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"mobile\">Mobile *</label>\r\n                                        <input type=\"text\" value={inputs.mobile} name=\"mobile\" id=\"mobile\" class=\"signup-form-control\"  onChange={handleNumberInput} />\r\n                                        <input type=\"text\" value={errors.mobile} disabled  className={errors.mobile ? \"error-input d-block\" : \"error-input d-none\" } />\r\n                                    </div>\r\n\t\t                        </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"streetaddress\">Email Address *</label>\r\n                                        <input type=\"text\" value={inputs.email} name=\"email\" id=\"email\" class=\"signup-form-control\"  onChange={handleInputChange} onBlur={handleEmailVerification} />\r\n                                        <input type=\"text\" value={errors.email} disabled  className={errors.email ? \"error-input d-block\" : \"error-input d-none\" }  />\r\n                                    </div>\r\n\t\t                        </div>\r\n                                <div class=\"col-md-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"userId\">User Id *</label>\r\n                                        <input type=\"text\" value={inputs.userId} name=\"userId\" id=\"userId\" class=\"signup-form-control\"  onChange={handleInputChange} onBlur={handleUserIdVerification} />\r\n                                        <input type=\"text\" value={errors.userId} disabled  className={errors.userId ? \"error-input d-block\" : \"error-input d-none\" } />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"password\">Password *</label>\r\n                                        <div className=\"tooltip-div\">\r\n                                            <img src=\"/images/warning-sign.png\" alt=\"app logo\" class=\"icon-size offset-7\"  />\r\n                                            <span class=\"tooltiptext\">\r\n                                                <ul className=\"m-bottom m-top\">\r\n                                                    <li>The string must contain at least 1 lowercase alphabetical character.</li>\r\n                                                    <li>The string must contain at least 1 uppercase alphabetical character.</li>\r\n                                                    <li>The string must contain at least 1 numeric character.</li>\r\n                                                    <li>The string must contain at least one special character.</li>\r\n                                                    <li>The string must be eight characters or longer.</li>\r\n                                                </ul>\r\n                                            </span>\r\n                                        </div>\r\n                                        <input type=\"password\" value={inputs.password} name=\"password\" id=\"password\" class=\"signup-form-control\"  onChange={handleInputChange} />\r\n                                        <input type=\"text\" value={errors.password} disabled  className={errors.password ? \"error-input d-block\" : \"error-input d-none\" } />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-6\">\r\n                                    <div class=\"form-group\">\r\n                                        <label for=\"confirmpassword\">Confirm password *</label>\r\n                                        <input type=\"password\" name=\"confirmpassword\" id=\"confirmpassword\" class=\"signup-form-control\" value={inputs.confirmpassword} onChange={handleInputChange} />\r\n                                        <input type=\"text\" value={errors.confirmpassword} disabled  className={errors.confirmpassword ? \"error-input d-block\" : \"error-input d-none\" } />\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-md-12\">\r\n                                    <div class=\"form-group\">\r\n                                        <p>\r\n                                            <input type=\"submit\" value=\"Submit\" class=\"btn btn-primary\" disabled={isSubmitting} />                                                \r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                {showRegisteredMsg ? <SimpleAlert message={alertParams.message} variant={alertParams.variant} style = {{padding:'0px', paddingLeft:'10px', marginTop:'10px'}}/> : \"\"}\r\n\t                        </div>\r\n\t                    </form>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n            {isLoading ?   <CallLoader />   : null  }\r\n        </Fragment>\r\n    )\r\n}"],"sourceRoot":""}