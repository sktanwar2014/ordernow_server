{"version":3,"sources":["api/config/Constants.js","api/categories.js","common/moment.js","api/config/AuthHeader.js","api/static.js","Views/Partials/Header.js","Views/Partials/Footer.js","api/order.js","Views/Admin/Components/AddUpdateCategoriesDialog.js","api/config/HttpClient.js","Views/Partials/Loader.js","Views/Components/ViewCustomerOrder.js","Views/Admin/AlterCategories.js","App.js","serviceWorker.js","index.js"],"names":["API_CONSUMER","APP_TOKEN","set","user_id","name","token","account_id","id","role_id","sessionStorage","setItem","get","userId","getItem","remove","removeItem","cond1","this","cond2","cond3","CART_TOKEN","product","prev","filtered","JSON","parse","filter","ele","push","stringify","cartTotal","length","cart","removeProduct","productId","removeCart","PARAMS","methodType","method","headers","authHeader","getProductPacketInfo","a","payload","URL","c","axios","Object","assign","data","checkError","getCategoryList","getAllMainCategories","getProductList","addNewCategory","addNewSubCategory","getProductUnderMainCategory","getSubCategoryList","insertNewProduct","moment","require","getDate","date","format","getDateInDDMMYYYY","Authorization","getProductUnitList","getMainUnitRelateRecords","getOrderStatusList","Header","roleId","useState","className","style","padding","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","aria-haspopup","aria-labelledby","Footer","backgroundColor","handleOrderConfirmation","generateInvoice","submitDeliveryDetails","orderVerificationByCustomer","fetchDeliveryFormData","handlePurchasedRecord","getOrderedProductList","getOrderedProductListSingleDay","fetchPreviousBillingAddresss","removeSelectedAddress","getOrderList","getOrderListOfSingleDay","getCustomerOrderList","addNewOrder","AddUpdateCategoriesDialog","open","setCategoryDialogOpen","setCategoryList","setSubCategory","setDefaultCategoryId","setDefaultSubCategoryId","props","handleSubmit","e","preventDefault","category_name","document","getElementById","value","operation","CategoriesAPI","result","categoryList","newCategoryId","categoryId","subCategoriesList","newSubCategoryId","console","log","show","onHide","size","centered","closeButton","Title","onSubmit","Body","class","for","placeholder","required","onClick","error","response","status","location","reload","Loader","width","height","cx","cy","r","fill","stroke-width","stroke","stroke-miterlimit","RESET_VALUES","toDate","Date","fromDate","orderStatus","ViewCustomerOrder","inputs","setInputs","orderList","setOrderList","orderedProductList","setOrderedProductList","orderStatusList","setOrderStatusList","setOrderStatus","useEffect","handleInputChange","target","OrderAPI","order_status","from_date","to_date","createdBy","orderedProducts","StaticAPI","onChange","map","index","order","products","pro","order_id","totalProduct","rowspan","order_date","full_name","product_name","quantity","ordered_unit_name","flat_add","street_add","city","delivery_date","to","pathname","state","display","AlterCategories","setProductUnitList","categoryDialogOpen","categoryDialogProps","productUnitBio","productUnitList","addUpdateCategoriesDialog","formData","subCategoryId","productName","description","productUnits","mainUnitId","history","alert","Login","lazy","Home","AddProduct","ViewProduct","ViewOrder","ViewOrderedProduct","CartList","ProceedToCheckout","ViewOrderReport","ViewOrderedProductReport","DeliveryForm","ProductVerification","App","fallback","exact","path","render","notEmpty","isAdmin","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fd3ce244.chunk.js","sourcesContent":["export const API_URL = 'http://ordernow.a1abilities.co.nz/'; // Config[KEY].API_URL;\r\nexport const AUTH_URL = 'http://ordernow.a1abilities.co.nz/'; // Config[KEY].AUTH_URL;\r\nexport const API_CONSUMER = 'http://ordernow.a1abilities.co.nz/'; // Config[KEY].API_URL;\r\n\r\n// export const API_URL = 'http://localhost:5000';         // Config[KEY].API_URL;\r\n// export const AUTH_URL = 'http://localhost:5000';        // Config[KEY].AUTH_URL;\r\n// export const API_CONSUMER = 'http://localhost:5000';   // Config[KEY].API_URL;\r\n\r\nexport const APP_TOKEN = {\r\n    set: ({user_id, name, token, account_id, id, role_id}) => {\r\n        sessionStorage.setItem('userId', id);\r\n        sessionStorage.setItem('token', token);\r\n        sessionStorage.setItem('user_id', user_id);\r\n        sessionStorage.setItem('role_id', role_id);\r\n        sessionStorage.setItem('name', name);\r\n        sessionStorage.setItem('account_id', account_id);\r\n    },\r\n    get: () => ({\r\n        userId: sessionStorage.getItem('userId'),\r\n        token: sessionStorage.getItem('token'),\r\n        user_id : sessionStorage.getItem('user_id'),\r\n        role_id : sessionStorage.getItem('role_id'),\r\n        name : sessionStorage.getItem('name'),\r\n        account_id: sessionStorage.getItem('account_id'),\r\n    }),\r\n    remove: () => {\r\n        // sessionStorage.clear();\r\n        sessionStorage.removeItem('userId');\r\n        sessionStorage.removeItem('token');\r\n        sessionStorage.removeItem('user_id');\r\n        sessionStorage.removeItem('role_id');\r\n        sessionStorage.removeItem('name');\r\n        sessionStorage.removeItem('account_id');\r\n    },    \r\n    get notEmpty() {\r\n        const cond1 = this.get().token !== null;\r\n        const cond2 = this.get().token !== '';\r\n        return cond1 && cond2;\r\n    },\r\n    get isAdmin() {\r\n        const cond1 = this.get().user_id == 'admin';\r\n        const cond2 = this.get().userId == 1;\r\n        const cond3 = this.get().role_id == 1;\r\n        return cond1 && cond2 && cond3;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const CART_TOKEN = {\r\n    set: ({product}) => {\r\n        let prev = sessionStorage.getItem('cart');\r\n        if(prev !== null && prev !== \"\"){\r\n            let obj = JSON.parse(prev);\r\n            let filtered = obj.filter(ele => ele.id !== product.id)            \r\n            filtered.push(product);\r\n            sessionStorage.setItem('cart', JSON.stringify(filtered));\r\n        }else{\r\n            sessionStorage.setItem('cart', JSON.stringify([product]));            \r\n        }\r\n            \r\n    },\r\n    get: () => ({\r\n        cartTotal: sessionStorage.getItem('cart') !== null && sessionStorage.getItem('cart') !== \"\" ? JSON.parse(sessionStorage.getItem('cart')).length : 0,\r\n        cart: sessionStorage.getItem('cart') !== null && sessionStorage.getItem('cart') !== \"\" ? JSON.parse(sessionStorage.getItem('cart')) : [],\r\n    }),\r\n    removeProduct:({productId}) => {\r\n        let prev = sessionStorage.getItem('cart');\r\n        if(prev !== null && prev !== \"\"){\r\n            let obj = JSON.parse(prev);\r\n            let filtered = obj.filter(ele => ele.id !== productId)            \r\n            sessionStorage.setItem('cart', JSON.stringify(filtered));\r\n        }\r\n    },\r\n    removeCart: () =>{\r\n        sessionStorage.removeItem('cart');\r\n    }\r\n}","import axios from 'axios';\r\nimport * as c from './config/Constants';\r\nimport checkError from './config/HttpClient';\r\nimport {authHeader} from './config/AuthHeader.js';\r\n\r\nconst PARAMS = ({ methodType = 'GET' }) => ({\r\n  method: methodType,\r\n  headers: authHeader(),\r\n});\r\n\r\nexport default {\r\n\r\n  getProductPacketInfo:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getProductPacketInfo`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n \r\n\r\n  getCategoryList:async () => {\r\n    const URL = `${c.API_CONSUMER}/categories/getCategoryList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  \r\n  \r\n  getAllMainCategories:async () => {\r\n    const URL = `${c.API_CONSUMER}/categories/getAllMainCategories`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  \r\n  getProductList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getProductList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  addNewCategory:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/addNewCategory`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n \r\n  addNewSubCategory:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/addNewSubCategory`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  getProductUnderMainCategory:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getProductUnderMainCategory`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  getSubCategoryList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/getSubCategoryList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  insertNewProduct:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/categories/insertNewProduct`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n};","const moment = require('moment');\r\n\r\nexport function getDate(date) {\r\n  return moment(date).format(\"YYYY-MM-DD\");\r\n}\r\n\r\nexport function getCurrentDateDBFormat() {\r\n  return moment().format(\"YYYY-MM-DD\")\r\n}\r\n\r\n\r\nexport function getCurrentDate() {\r\n  return moment().format(\"MM/DD/YYYY\")\r\n  \r\n}\r\n\r\n\r\nexport function getCurrentDateInYYYYMMDD() {\r\n  return moment().format(\"YYYY/MM/DD\")\r\n}\r\n\r\nexport function getDateInDDMMYYYY(date) {\r\n  return moment(date).format(\"DD-MM-YYYY\")\r\n}\r\n\r\nexport function getCurrentDateDDMMYYYY() {\r\n  return moment().format(\"DD-MM-YYYY\")\r\n}\r\n\r\nexport function getTimeinDBFormat(date) {\r\n  return moment(date).format(\"HH:mm:ss\")\r\n}\r\n\r\nexport function getTime(date) {\r\n  return moment(date).format(\"HH:mm\")\r\n}\r\n\r\nexport function convertDateInUTC(date) {  \r\n  return moment.utc(date);  \r\n}\r\n\r\nexport function setDBDateFormat(date){\r\n  let day = date.split('-')[0];\r\n  let month = date.split('-')[1];\r\n  let year = date.split('-')[2];\r\n  return (year + '-' + month + '-' + day) ;\r\n}\r\n\r\nexport function isBirthDate(date){\r\n  const custDate = new Date(date);\r\n  const currDate = new Date();\r\n  return (custDate.getDate() === currDate.getDate() && custDate.getMonth() === currDate.getMonth());\r\n}\r\n\r\n\r\nexport function addOneDay(date){\r\n  return moment(date).add(1, 'days').format(\"YYYY-MM-DD\");  \r\n}\r\n\r\nexport function subtractOneDay(date){\r\n  return moment(date).subtract(1, 'days').format(\"YYYY-MM-DD\");  \r\n}\r\n\r\nexport function checkPastDate(date) {  \r\n  return moment(date).format(\"YYYY-MM-DD\") > getDate();\r\n}\r\n\r\nexport function checkFutureDate(date) {\r\n  return moment(date).format(\"YYYY-MM-DD\") < getDate();\r\n}\r\n\r\nexport function isSameDate(payment_date, settlement_date) {\r\n  // console.log(payment_date === settlement_date, payment_date, settlement_date)\r\n  // console.log(moment(payment_date) > moment(settlement_date), moment(payment_date) < moment(settlement_date))\r\n  return payment_date === settlement_date;\r\n}\r\n\r\nexport function checkOverDue(payment_date, settlement_date) {  \r\n  return moment(payment_date).format(\"YYYY-MM-DD\") > moment(settlement_date).format(\"YYYY-MM-DD\");\r\n}\r\n\r\nexport function escapeSunday(date){\r\n  return moment(date).format(\"dddd\") == \"Sunday\";\r\n}\r\n","export function authHeader() {\r\n  // return authorization header with basic auth credentials\r\n  // let user = JSON.parse(sessionStorage.token);\r\n\r\n  // if (user && user.token) {\r\n  return { Authorization: `Basic ${sessionStorage.token}`,  'content-type': 'application/json' };\r\n  \r\n  // } else {\r\n  //     return {};\r\n  // }\r\n}\r\n","import axios from 'axios';\r\nimport * as c from './config/Constants';\r\nimport checkError from './config/HttpClient';\r\nimport {authHeader} from './config/AuthHeader.js';\r\n\r\nconst PARAMS = ({ methodType = 'GET' }) => ({\r\n  method: methodType,\r\n  headers: authHeader(),\r\n});\r\n\r\nexport default {\r\n\r\n  getProductUnitList:async () => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getProductUnitList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getMainUnitRelateRecords:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getMainUnitRelateRecords`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getOrderStatusList:async () => {\r\n    const URL = `${c.API_CONSUMER}/staticrecords/getOrderStatusList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n};","import React,{Fragment, useState, useEffect} from 'react';\r\nimport {APP_TOKEN, CART_TOKEN} from '../../api/config/Constants.js';\r\n\r\nexport default function Header() {\r\n    const userId = APP_TOKEN.get().userId;\r\n    const roleId = APP_TOKEN.get().role_id;\r\n    const [cartTotal, setCartTotal] = useState(CART_TOKEN.get().cartTotal);\r\n  \r\n return(\r\n     <Fragment>\r\n        <div className=\"py-1 bg-primary\">\r\n            <div className=\"container\">\r\n                <div className=\"row no-gutters d-flex align-items-start align-items-center px-md-0\">\r\n                    <div className=\"col-lg-12 d-block\">\r\n                        <div className=\"row d-flex\" style={{padding:'10px'}}>\r\n                            {/* <div className=\"col-md pr-4 d-flex topper align-items-center\">\r\n                                <div className=\"icon mr-2 d-flex justify-content-center align-items-center\"><span className=\"icon-phone2\"></span></div>\r\n                                <span className=\"text\">+ 1235 2355 98</span>\r\n                            </div>\r\n                            <div className=\"col-md pr-4 d-flex topper align-items-center\">\r\n                                <div className=\"icon mr-2 d-flex justify-content-center align-items-center\"><span className=\"icon-paper-plane\"></span></div>\r\n                                <span className=\"text\">youremail@email.com</span>\r\n                            </div>\r\n                            <div className=\"col-md-5 pr-4 d-flex topper align-items-center text-lg-right\">\r\n                                <span className=\"text\">3-5 Business days delivery &amp; Free Returns</span>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark ftco_navbar bg-dark ftco-navbar-light\" id=\"ftco-navbar\">\r\n            <div className=\"container\">\r\n            <a className=\"navbar-brand\" href=\"/\">SA SUPERMART</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ftco-nav\" aria-controls=\"ftco-nav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"oi oi-menu\"></span> Menu\r\n            </button>\r\n\r\n            <div className=\"collapse navbar-collapse\" id=\"ftco-nav\">\r\n                {/* <li className=\"nav-item active\"><a href=\"/\" className=\"nav-link\">Home</a></li> */}\r\n                {(userId == 1 && roleId == 1) ?\r\n                    <ul className=\"navbar-nav ml-auto\">    \r\n                        <li className=\"nav-item\"><a href=\"/\" className=\"nav-link\">Home</a></li> \r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown04\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Products</a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdown04\">                            \r\n                                <a className=\"dropdown-item\" href=\"/add-new-product\">Add New</a>                                \r\n                                <a className=\"dropdown-item\" href=\"/view-added-product\">View List</a>\r\n                                {/* <a className=\"dropdown-item\" href=\"/alter-categories\">Alter Categories</a> */}\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown04\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Orders</a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdown04\">\r\n                                <a className=\"dropdown-item\" href=\"/view-order-list\">View Customer Wise</a>\r\n                                <a className=\"dropdown-item\" href=\"/view-ordered-product\">View Product Wise</a>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown04\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Reports</a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdown04\">\r\n                                <a className=\"dropdown-item\" href=\"/view-order-report\">Order Report</a>\r\n                                <a className=\"dropdown-item\" href=\"/view-ordered-product-report\">Ordered Product Report</a>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item\"><a href=\"/logout\" className=\"nav-link\">Logout</a></li> \r\n                    </ul>\r\n                    :\r\n                    <ul className=\"navbar-nav ml-auto\">   \r\n                        <li className=\"nav-item\"><a href=\"/\" className=\"nav-link\">Home</a></li> \r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdown04\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Orders</a>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdown04\">\r\n                                <a className=\"dropdown-item\" href=\"/view-user-order-list\">View </a>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item cta cta-colored\"><a href=\"/cart-list\" className=\"nav-link\"><span className=\"icon-shopping_cart\"></span>[{cartTotal}]</a></li>\r\n                        <li className=\"nav-item\"><a href=\"/logout\" className=\"nav-link\">Logout</a></li> \r\n                    </ul>\r\n                }\r\n                \r\n                {/* <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\">About</a></li>\r\n                <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\">Blog</a></li>\r\n                <li className=\"nav-item\"><a href=\"#\" className=\"nav-link\">Contact</a></li> */}\r\n            </div>\r\n            </div>\r\n        </nav>\r\n  </Fragment>\r\n )\r\n}","import React from 'react';\r\n\r\nexport default function Footer(){\r\n    return(\r\n        // <footer className=\"ftco-footer ftco-section\">\r\n        <footer style={{backgroundColor: '#82ae46'}}>\r\n        {/* <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"mouse\">\r\n                    <a href=\"#\" className=\"mouse-icon\">\r\n                        <div className=\"mouse-wheel\"><span className=\"ion-ios-arrow-up\"></span></div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mb-5\">\r\n            <div className=\"col-md\">\r\n                <div className=\"ftco-footer-widget mb-4\">\r\n                <h2 className=\"ftco-heading-2\">Vegefoods</h2>\r\n                <p>Far far away, behind the word mountains, far from the countries Vokalia and Consonantia.</p>\r\n                <ul className=\"ftco-footer-social list-unstyled float-md-left float-lft mt-5\">\r\n                    <li className=\"ftco-animate\"><a href=\"#\"><span className=\"icon-twitter\"></span></a></li>\r\n                    <li className=\"ftco-animate\"><a href=\"#\"><span className=\"icon-facebook\"></span></a></li>\r\n                    <li className=\"ftco-animate\"><a href=\"#\"><span className=\"icon-instagram\"></span></a></li>\r\n                </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md\">\r\n                <div className=\"ftco-footer-widget mb-4 ml-md-5\">\r\n                <h2 className=\"ftco-heading-2\">Menu</h2>\r\n                <ul className=\"list-unstyled\">\r\n                    <li><a href=\"#\" className=\"py-2 d-block\">Shop</a></li>\r\n                    <li><a href=\"#\" className=\"py-2 d-block\">About</a></li>\r\n                    <li><a href=\"#\" className=\"py-2 d-block\">Journal</a></li>\r\n                    <li><a href=\"#\" className=\"py-2 d-block\">Contact Us</a></li>\r\n                </ul>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n                <div className=\"ftco-footer-widget mb-4\">\r\n                <h2 className=\"ftco-heading-2\">Help</h2>\r\n                <div className=\"d-flex\">\r\n                    <ul className=\"list-unstyled mr-l-5 pr-l-3 mr-4\">\r\n                        <li><a href=\"#\" className=\"py-2 d-block\">Shipping Information</a></li>\r\n                        <li><a href=\"#\" className=\"py-2 d-block\">Returns &amp; Exchange</a></li>\r\n                        <li><a href=\"#\" className=\"py-2 d-block\">Terms &amp; Conditions</a></li>\r\n                        <li><a href=\"#\" className=\"py-2 d-block\">Privacy Policy</a></li>\r\n                    </ul>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><a href=\"#\" className=\"py-2 d-block\">FAQs</a></li>\r\n                        <li><a href=\"#\" className=\"py-2 d-block\">Contact</a></li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-md\">\r\n                <div className=\"ftco-footer-widget mb-4\">\r\n                    <h2 className=\"ftco-heading-2\">Have a Questions?</h2>\r\n                    <div className=\"block-23 mb-3\">\r\n                    <ul>\r\n                        <li><span className=\"icon icon-map-marker\"></span><span className=\"text\">203 Fake St. Mountain View, San Francisco, California, USA</span></li>\r\n                        <li><a href=\"#\"><span className=\"icon icon-phone\"></span><span className=\"text\">+2 392 3929 210</span></a></li>\r\n                        <li><a href=\"#\"><span className=\"icon icon-envelope\"></span><span className=\"text\">info@yourdomain.com</span></a></li>\r\n                    </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"row\">\r\n            <div className=\"col-md-12 text-center\">\r\n                { <p>\r\n                    Copyright &copy;<script>document.write(new Date().getFullYear());</script> All rights reserved | This template is made with <i className=\"icon-heart color-danger\" aria-hidden=\"true\"></i> by <a href=\"https://colorlib.com\" target=\"_blank\">Colorlib</a>\r\n                </p> \r\n            </div>\r\n            </div>\r\n        </div> */}\r\n\r\n        <div className=\"container\">\r\n                <div className=\"row no-gutters d-flex align-items-start align-items-center px-md-0\">\r\n                    <div className=\"col-lg-12 d-block\">\r\n                        <div className=\"row \" >\r\n                            <div className=\"col-md pr-4 d-flex topper align-items-center\">\r\n                              <p  className=\"text\">Copyright 2019 &copy;All rights reserved | A1abilities PTY TLD  ABN# 82631548224</p>\r\n                            </div>\r\n                            {/* <div className=\"col-md pr-4 d-flex topper align-items-center\">\r\n                                <div className=\"icon mr-2 d-flex justify-content-center align-items-center\"><span className=\"icon-phone2\"></span></div>\r\n                                <span className=\"text\">+ 1235 2355 98</span>\r\n                            </div>\r\n                            <div className=\"col-md pr-4 d-flex topper align-items-center\">\r\n                                <div className=\"icon mr-2 d-flex justify-content-center align-items-center\"><span className=\"icon-paper-plane\"></span></div>\r\n                                <span className=\"text\">youremail@email.com</span>\r\n                            </div>\r\n                            <div className=\"col-md-5 pr-4 d-flex topper align-items-center text-lg-right\">\r\n                                <span className=\"text\">3-5 Business days delivery &amp; Free Returns</span>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </footer>\r\n    )\r\n}","import axios from 'axios';\r\nimport * as c from './config/Constants';\r\nimport checkError from './config/HttpClient';\r\nimport {authHeader} from './config/AuthHeader.js';\r\n\r\nconst PARAMS = ({ methodType = 'GET' }) => ({\r\n  method: methodType,\r\n  headers: authHeader(),\r\n});\r\n\r\nexport default {\r\n\r\n  handleOrderConfirmation:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/handleOrderConfirmation`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  generateInvoice:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/generateInvoice`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  submitDeliveryDetails:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/submitDeliveryDetails`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  orderVerificationByCustomer:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/orderVerificationByCustomer`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  fetchDeliveryFormData:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/fetchDeliveryFormData`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  handlePurchasedRecord:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/handlePurchasedRecord`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  getOrderedProductList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/getOrderedProductList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getOrderedProductListSingleDay:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/getOrderedProductListSingleDay`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  fetchPreviousBillingAddresss:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/fetchPreviousBillingAddresss`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  removeSelectedAddress:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/removeSelectedAddress`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n \r\n  getOrderList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/getOrderList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getOrderListOfSingleDay:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/getOrderListOfSingleDay`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  getCustomerOrderList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/getCustomerOrderList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n  addNewOrder:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/order/addNewOrder`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n\r\n};","import React from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nimport CategoriesAPI from '../../../api/categories.js';\r\n\r\n\r\n\r\nexport default function AddUpdateCategoriesDialog({open, setCategoryDialogOpen, setCategoryList, setSubCategory, setDefaultCategoryId, setDefaultSubCategoryId,  props}) {\r\n    \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let category_name = document.getElementById('category_name').value;\r\n    \r\n    try{\r\n      if(props.type === 1 && props.operation  === 'add'){\r\n        const result = await  CategoriesAPI.addNewCategory({\r\n          category_name : category_name,\r\n        });\r\n        setCategoryList(result.categoryList);\r\n        setDefaultCategoryId(result.newCategoryId);\r\n      }else if(props.type === 2 && props.operation  === 'add'){\r\n        const result = await  CategoriesAPI.addNewSubCategory({\r\n          category_name : category_name,\r\n          categoryId : props.id,\r\n        });\r\n        setSubCategory(result.subCategoriesList);\r\n        setDefaultSubCategoryId(result.newSubCategoryId);\r\n      }\r\n      setCategoryDialogOpen(false);\r\n\r\n    }catch(e){\r\n      console.log(\"error...\", e);\r\n    }    \r\n  }\r\n\r\n\r\n    return (\r\n      <Modal show = {open} onHide={()=>{setCategoryDialogOpen(false)}} size=\"lg\" centered >\r\n        <Modal.Header closeButton >\r\n          <Modal.Title id=\"contained-modal-title-vcenter\">\r\n            { (props.type === 1  && props.operation === 'add') ? 'Create Category'\r\n             :(props.type === 2  && props.operation === 'add') ? 'Create Sub Category'\r\n             : ''\r\n            } \r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <form onSubmit={handleSubmit} >\r\n          <Modal.Body>\r\n              <div class=\"col-md-12\">\r\n                  <div class=\"form-group\">\r\n                      <label for=\"category_name\">\r\n                      { (props.type === 1 ) ? 'Category *'\r\n                        :(props.type === 2 ) ? 'Sub Category *'\r\n                        : ''\r\n                      } \r\n                      </label>\r\n                      <input id=\"category_name\" type=\"text\" class=\"form-control\" placeholder=\"\" required />\r\n                  </div>\r\n              </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button className=\"br-none\" onClick={()=>{setCategoryDialogOpen(false)}}>Close</Button>\r\n            <Button type=\"submit\" className=\"br-none\">Submit</Button>\r\n          </Modal.Footer>\r\n        </form>\r\n      </Modal>\r\n    );\r\n  }\r\n  ","import * as c from './Constants';\r\n\r\nexport default function checkError(error) {\r\n  if(error || error.response.status === 401) {\r\n    c.APP_TOKEN.remove();\r\n    document.location.reload();\r\n  }\r\n}","import React from 'react';\r\n\r\nexport default function Loader(){\r\n    return(\r\n        <div id=\"ftco-loader\" class=\"show fullscreen\"><svg class=\"circular\" width=\"48px\" height=\"48px\"><circle class=\"path-bg\" cx=\"24\" cy=\"24\" r=\"22\" fill=\"none\" stroke-width=\"4\" stroke=\"#eeeeee\"/><circle class=\"path\" cx=\"24\" cy=\"24\" r=\"22\" fill=\"none\" stroke-width=\"4\" stroke-miterlimit=\"10\" stroke=\"#F96D00\"/></svg></div>\r\n    )\r\n}","import React, {useState, useEffect, Fragment} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//Components \r\nimport Header from '../Partials/Header.js';\r\nimport Footer from '../Partials/Footer.js';\r\nimport StaticAPI from '../../api/static.js';\r\nimport OrderAPI from '../../api/order.js';\r\nimport {APP_TOKEN} from  '../../api/config/Constants.js'\r\nimport {getDateInDDMMYYYY, getDate} from '../../common/moment.js';\r\n\r\nconst RESET_VALUES = {\r\n    toDate : new Date(),\r\n    fromDate : new Date(),\r\n    orderStatus : '1',\r\n}\r\n\r\n\r\nexport default function ViewCustomerOrder() {\r\n\r\n    const [inputs, setInputs] =  useState(RESET_VALUES);\r\n\tconst [orderList, setOrderList] = useState([]);\r\n    const [orderedProductList, setOrderedProductList] = useState([]);\r\n    const [orderStatusList, setOrderStatusList]  = useState([]);\r\n    const [orderStatus, setOrderStatus] = useState(1);\r\n\r\n    useEffect(()=>{\r\n\t\tgetCustomerOrderList();\t\t\r\n\t\tgetOrderStatusList();\t\t\r\n    },[]);\r\n\r\n\r\n    \r\n\tconst  handleInputChange = (e) => {\r\n\t\tsetInputs({...inputs, [e.target.name]: e.target.value});\r\n\t}\r\n\r\n    const getCustomerOrderList = async () => {\r\n        setOrderStatus(inputs.orderStatus);\r\n        try{\r\n            const result = await OrderAPI.getCustomerOrderList({\r\n                order_status : inputs.orderStatus,\r\n                from_date : getDate(inputs.fromDate),\r\n                to_date : getDate(inputs.toDate),\r\n                createdBy : APP_TOKEN.get().userId,\r\n            });\r\n            setOrderList(result.orderList);            \r\n            setOrderedProductList(result.orderedProducts);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n\r\n    const getOrderStatusList = async () => {\r\n        try{\r\n            const result = await StaticAPI.getOrderStatusList({});\r\n            setOrderStatusList(result.orderStatusList);\r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n\t\t<Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<section className=\"ftco-section\">\r\n                <div class=\"container\">\r\n                <h3>My Orders</h3>\r\n                <div class=\"row justify-content-center p-bottom-30\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <div class=\"p-5 bg-light b-top-dark\">\r\n                                    <div class=\"row align-items-end\">\r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"fromDate\">From * </label>\r\n                                                <input id=\"fromDate\" name=\"fromDate\" type=\"date\" value={getDate(inputs.fromDate)} class=\"form-control\"  onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>   \r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"toDate\">To * </label>\r\n                                                <input id=\"toDate\" name=\"toDate\" type=\"date\" value={getDate(inputs.toDate)} class=\"form-control\" onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>  \r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"orderStatus\">Status * </label>\r\n                                                <select id=\"orderStatus\" name=\"orderStatus\" value={inputs.orderStatus} class=\"form-control\" onChange={handleInputChange}>\r\n                                                    {(orderStatusList.length > 0 ? orderStatusList : [] ).map((data, index)=>{\r\n                                                        return(\r\n                                                            (data.id !== 4 && data.id !== 5 ) ?   <option id={data.id} value={data.id} >{data.order_status}</option> : null\r\n                                                        )\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"col-md-12 m-bottom-20\">\r\n                                            <div class=\"form-group\">\r\n                                                <div class=\"d-flex f-right\">\r\n                                                <button class=\"btn btn-primary px-4\" onClick={getCustomerOrderList}> Click to view</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"w-100\">\r\n                                            <table className=\"unit-array-table\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Order Date</th>\r\n                                                        <th>Order Id</th>\r\n                                                        <th>Customer</th>\r\n                                                        <th>Product</th>\r\n                                                        {orderStatus == 1 && <th>Quantity</th> }\r\n                                                        <th>Address</th>\r\n                                                        {orderStatus != 1 && <th>Delivery Date</th> }\r\n                                                        {orderStatus == 2 && <th>Action</th> }\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {(orderList.length>0 ? orderList :[]).map((order, index) => {                                                    \r\n                                                    let products = orderedProductList.filter(pro => pro.order_id === order.id);\r\n                                                    let totalProduct = products.length;\r\n                                                    return(\r\n                                                        (products.length >0 ? products :[]).map((product) =>  {\r\n                                                            return(\r\n                                                                <tr class=\"text-center\">\r\n                                                                    {totalProduct !== 0 &&                                                                    \r\n                                                                        <Fragment>                                                                            \r\n                                                                            <td rowspan={totalProduct}>{index + 1}</td>\r\n                                                                            <td rowspan={totalProduct}>{getDateInDDMMYYYY(order.order_date)}</td>\r\n                                                                            <td rowspan={totalProduct}>{order.order_id}</td>\r\n                                                                            <td rowspan={totalProduct}>{order.full_name}</td>\r\n                                                                        </Fragment>\r\n                                                                    }\r\n                                                                    <td>{product.product_name}</td>\r\n                                                                    {orderStatus == 1 &&  <td>{`${product.quantity}  ${product.ordered_unit_name}`}</td> }\r\n                                                                    {totalProduct !== 0 &&\r\n                                                                        <Fragment>\r\n                                                                            <td rowspan={totalProduct}>{`${order.flat_add}, ${order.street_add}, ${order.city}`}</td>\r\n                                                                            {orderStatus != 1 && <td rowspan={totalProduct}>{getDateInDDMMYYYY(order.delivery_date)}</td> }\r\n                                                                            {orderStatus == 2 && <td rowspan={totalProduct}>\r\n                                                                                <Link to={{pathname :'/verify-delivered-product', state : {order: order, product: products}}}>Click to verify</Link>\r\n                                                                                    {/* <button class=\"alter-purchase-record\" type=\"submit\" onClick={()=>{handleOrderVerification(order)}} >Click to verify</button> */}\r\n                                                                                </td>\r\n                                                                            }\r\n                                                                        </Fragment>\r\n                                                                    }\r\n                                                                    <div style={{display:'none'}}>{totalProduct = 0}</div>\r\n                                                                </tr>\r\n                                                                )\r\n                                                            })\r\n                                                        )\r\n                                                    })\r\n                                                }\t\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n                    \r\n                </div>\r\n    </section>\r\n\t\t<Footer />\r\n\t</Fragment>\r\n    )\r\n}","import React, {useState, useEffect, Fragment} from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n//Components \r\nimport CategoriesAPI from '../../api/categories.js';\r\nimport {APP_TOKEN} from '../../api/config/Constants.js';\r\nimport StaticAPI from '../../api/static.js';\r\nimport Header from '../Partials/Header.js';\r\nimport Footer from '../Partials/Footer.js';\r\nimport AddUpdateCategoriesDialog from './Components/AddUpdateCategoriesDialog.js';\r\n\r\n\r\nexport default function AlterCategories(props) {\r\n\r\n    const [subCategory, setSubCategory] = useState([]);\r\n    const [categoryList, setCategoryList] = useState([]);\r\n    const [productUnitList, setProductUnitList] = useState([]);\r\n    const [filteredUnitList, setFilteredUnitList] = useState([]);\r\n    const [singleUnitList, setSingleUnitList] = useState([]);\r\n    \r\n    const [categoryDialogOpen, setCategoryDialogOpen] = useState(false);\r\n    const [categoryDialogProps, setCategoryDialogProps] = useState({});\r\n    const [defaultCategoryId, setDefaultCategoryId] = useState(\"\");\r\n    const [defaultSubCategoryId, setDefaultSubCategoryId] = useState(\"\");\r\n    const [showWeightFields, setShowWeightFields] = useState(0);\r\n    const [productUnitBio, setProductUnitBio] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        getAllMainCategories();\r\n        getProductUnitList();\r\n    },[]);\r\n\r\n    \r\n    const getAllMainCategories = async () => {\r\n        try{\r\n            const result = await CategoriesAPI.getAllMainCategories();\r\n            setCategoryList(result.categoryList);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n\r\n    const getProductUnitList = async () => {\r\n        try{\r\n            const result = await StaticAPI.getProductUnitList();\r\n            setProductUnitList(result.productUnitList);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    const getCategoryList = async () => {\r\n        try{\r\n            const result = await CategoriesAPI.getCategoryList();\r\n            setCategoryList(result.categoryList);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n\r\n    const addUpdateCategoriesDialog = (type, value) => {\r\n        console.log(type, value)\r\n        \r\n        // if (type === 2 && (document.getElementById('categoryDropDown').value === \"\")) {\r\n        //     alert('Select Category !');\r\n        // }else{\r\n            // setCategoryDialogProps({type: type, operation: 'update', id: value })\r\n            // setCategoryDialogOpen(true);\r\n        // }\r\n    }\r\n\r\n\r\n    const getSubCategoryList = async () => {\r\n        let id = document.getElementById('categoryDropDown').value;\r\n        if(id !== '' && id !== undefined && id !== null){\r\n            try{\r\n                const result = await CategoriesAPI.getSubCategoryList({categoryId: id});\r\n                setSubCategory(result.subCategoriesList);\r\n            }catch(e){\r\n                console.log('Error...',e);\r\n            }\r\n        }\r\n    }\r\n\r\n    const getMainUnitRelateRecords = async (e) => {\r\n        if(e.target.value === \"\"){\r\n            setFilteredUnitList([]);\r\n            setSingleUnitList([]);\r\n        }else {\r\n            let unitId = e.target.value;\r\n            const selectedUnit = productUnitList.find(ele => {return ele.id == e.target.value});\r\n            let is_bundle = selectedUnit.is_bundle;\r\n            try{\r\n                const result = await StaticAPI.getMainUnitRelateRecords({id: unitId, is_bundle: is_bundle});\r\n                setFilteredUnitList(result.productUnitList);\r\n                const singleUnitList = result.productUnitList.filter(ele => {return ele.is_bundle == 0});\r\n                setSingleUnitList(singleUnitList);\r\n            } catch(e){\r\n                console.log(e)\r\n            }\r\n        }\r\n        setProductUnitBio([]);\r\n    }\r\n    \r\n    const handleMeasurementSelection = (e) => {        \r\n        const selectedUnit = productUnitList.find(ele => {return ele.id == e.target.value});\r\n        if(selectedUnit){\r\n            setShowWeightFields(selectedUnit.is_bundle);\r\n            document.getElementById('productUnitValue').value = selectedUnit.default_weight;            \r\n        }else{\r\n            setShowWeightFields(0);\r\n            document.getElementById('productUnitValue').value = 1;\r\n        }\r\n    }\r\n\r\n    const handleAddProductUnit = (e) => {\r\n        e.preventDefault();\r\n        if(e.target.name === \"innerForm\"){\r\n            let tempUnitArray = [...productUnitBio];\r\n            \r\n            let packetWeight =  document.getElementById(\"packetWeight\") ? document.getElementById(\"packetWeight\").value : '';\r\n            let packetUnitId =  document.getElementById(\"packetUnitId\") ? document.getElementById(\"packetUnitId\").value :'';\r\n            let unitInName = productUnitList.find(ele => { return ele.id == document.getElementById(\"productUnitIn\").value});\r\n            let packetUnitIdName = productUnitList.find(ele => {return ele.id ==  packetUnitId});\r\n\r\n            let unitData = {\r\n                unitValue : document.getElementById(\"productUnitValue\").value,\r\n                unitIn : document.getElementById(\"productUnitIn\").value,\r\n                price : document.getElementById(\"productPrice\").value,\r\n                isPacket : packetUnitId ? 1 : 0,\r\n                packetWeight : packetWeight,\r\n                packetUnitId : packetUnitId,\r\n                unitInName : unitInName.unit_name,\r\n                packetUnitIdName :  packetUnitIdName ?  packetUnitIdName.unit_name : '',\r\n            }\r\n            tempUnitArray.push(unitData);\r\n            setProductUnitBio(tempUnitArray);\r\n\r\n            let temp = [...filteredUnitList];\r\n            temp.map((data, index) => {\r\n                if(data.id == unitData.unitIn){\r\n                    filteredUnitList.splice(index,1);\r\n                }\r\n            });\r\n            document.getElementById(\"productUnitIn\").value = \"\";\r\n        }\r\n    }\r\n\r\n    const handleDeleteProductUnit = (index) => {\r\n        let tempUnitArray = [...productUnitBio];\r\n        let temp = [...filteredUnitList];\r\n\r\n\r\n        const unit_id = tempUnitArray[index].unitIn;\r\n        const found = productUnitList.find(ele => {return ele.id == unit_id})\r\n        temp.push(found);\r\n        setFilteredUnitList(temp);\r\n\r\n        tempUnitArray.splice(index,1);\r\n        setProductUnitBio(tempUnitArray);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try{            \r\n            if(e.target.name === \"mainForm\"){\r\n                if(productUnitBio.length > 0){\r\n                    const formData = {\r\n                        categoryId : document.getElementById('categoryDropDown').value,\r\n                        subCategoryId : document.getElementById('subCategoryDropDown').value,\r\n                        productName : document.getElementById('productName').value,\r\n                        description : document.getElementById('productDescription').value,\r\n                        createdBy :  APP_TOKEN.get().userId,\r\n                        productUnits : productUnitBio,\r\n                        mainUnitId : document.getElementById('productMainUnit').value,\r\n                    };\r\n                    const result = await CategoriesAPI.insertNewProduct(formData);\r\n                    if(result === true){    // true = inserted\r\n                        props.history.push('/');\r\n                    }else{\r\n                        alert('Failed Insertion');\r\n                    }\r\n                }else{\r\n                    alert('Add atleast one unit for product..');\r\n                }\r\n            }\r\n        }catch(e){\r\n            console.log('Error...', e);\r\n        }\r\n    }\r\n\r\n    return(\r\n    <Fragment>\r\n        <Header />\r\n            <section class=\"ftco-section\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <h3 class=\"mb-4 billing-heading\">Alter Categories</h3>\r\n                            <form onSubmit={handleSubmit} name=\"mainForm\" class=\"p-5 bg-light b-top-dark\">\r\n                                    <div class=\"row align-items-end\">\r\n                                        <div class=\"col-md-12\">\r\n                                        <table className=\"unit-array-table\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>#</th>\r\n                                                    <th style={{width:'45%'}}>Category List</th>\r\n                                                    <th style={{width:'40%'}}>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {(categoryList.length > 0 ? categoryList : []).map((data, index) => {\r\n                                                    return(\r\n                                                        <tr>\r\n                                                            <td>{index + 1}</td>\r\n                                                            <td>{data.category_name}</td>\r\n                                                            <td>\r\n                                                                <button type=\"button\" className=\"delete-button\" onClick={()=>{addUpdateCategoriesDialog(1, data.id)}}>Edit</button>\r\n                                                                <button type=\"button\" className=\"delete-button\" onClick={()=>{addUpdateCategoriesDialog(1, data.id)}}>Active</button>\r\n                                                                <button type=\"button\" className=\"delete-button\" onClick={()=>{addUpdateCategoriesDialog(1, data.id)}}>View Subcategories</button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })}\r\n                                            </tbody>\r\n                                        </table>\r\n                                            {/* <div class=\"form-group\">\r\n                                                <label for=\"country\">Category * </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <select id=\"categoryDropDown\" class=\"form-control\" defaultValue={defaultCategoryId} onChange={getSubCategoryList} required>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(categoryList !== undefined && categoryList !== null && categoryList !== \"\") && \r\n                                                         (categoryList.length > 0 ? categoryList : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                                <option id={data.id} value={data.id} >{data.category_name}</option>\r\n                                                            )\r\n                                                         })\r\n                                                        }\r\n                                                    </select>\r\n                                                    <input type=\"button\" class=\"btn btn-primary br-none\" onClick={()=>{addUpdateCategoriesDialog(1)}} value=\"Add New\" />\r\n                                                </div>\r\n                                            </div> */}\r\n                                        </div>   \r\n                                        {/* <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"country\">Sub Category * </label>\r\n                                                <div class=\"d-flex\">\r\n                                                    <select id=\"subCategoryDropDown\" class=\"form-control\"  defaultValue={defaultSubCategoryId}  required>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(subCategory !== undefined && subCategory !== null && subCategory !== \"\") && \r\n                                                         (subCategory.length > 0 ? subCategory : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                                <option id={data.id} value={data.id} >{data.category_name}</option>\r\n                                                            )\r\n                                                         })\r\n                                                        }\r\n                                                    </select>\r\n                                                    <input type=\"button\" class=\"btn btn-primary br-none\" onClick={()=>{addUpdateCategoriesDialog(2)}} value=\"Add New\" />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>    \r\n                                        <div class=\"w-100\"></div>\r\n                                        <div class=\"col-md-8\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"productName\">Product Name *</label>\r\n                                                <input id=\"productName\" type=\"text\" class=\"form-control\" placeholder=\"\" required/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"productMainUnit\">Measure Main Unit *</label>\r\n                                                    <select id=\"productMainUnit\" class=\"form-control\" required onChange={getMainUnitRelateRecords}>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(productUnitList !== undefined && productUnitList !== null && productUnitList !== \"\") && \r\n                                                        (productUnitList.length > 0 ? productUnitList : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                            data.is_bundle ===0 ?    <option id={data.id} value={data.id} >{data.unit_name}</option> :null\r\n                                                            )\r\n                                                        })\r\n                                                        }\r\n                                                    </select>\r\n                                            </div>\r\n                                        </div>\r\n                                        {filteredUnitList.length > 0 && \r\n                                        <form onSubmit={handleAddProductUnit} name=\"innerForm\" class=\"inner-form\">\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"productUnitIn\">Unit/Measurement *</label>\r\n                                                <div class=\"d-flex\">  \r\n                                                    <input id=\"productUnitValue\" type=\"text\" class=\"form-control\" defaultValue=\"1\" disabled required/>                                         \r\n                                                    <select id=\"productUnitIn\" class=\"form-control\" required defaultValue=\"\"  onChange={handleMeasurementSelection}>\r\n                                                        <option  value = \"\">Select any one</option>\r\n                                                        {(filteredUnitList !== undefined && filteredUnitList !== null && filteredUnitList !== \"\") && \r\n                                                        (filteredUnitList.length > 0 ? filteredUnitList : [] ).map((data, index)=>{\r\n                                                            return(\r\n                                                                <option id={data.id} value={data.id} >{data.unit_name}</option>\r\n                                                            )\r\n                                                        })\r\n                                                        }\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {showWeightFields  === 1 &&\r\n                                            <div class=\"col-md-4\">\r\n                                                <div class=\"form-group\">                                                \r\n                                                    <label for=\"productWeight\">Weight *</label>\r\n                                                    <div class=\"d-flex\">  \r\n                                                        <input id=\"packetWeight\" type=\"text\" class=\"form-control\" placeholder=\"\" required/>\r\n                                                        <select id=\"packetUnitId\" class=\"form-control\" required>\r\n                                                            <option  value = \"\">Select any one</option>\r\n                                                            {(singleUnitList !== undefined && singleUnitList !== null && singleUnitList !== \"\") && \r\n                                                            (singleUnitList.length > 0 ? singleUnitList : [] ).map((data, index)=>{\r\n                                                                return(\r\n                                                                    <option id={data.id} value={data.id} >{data.unit_name}</option > \r\n                                                                )\r\n                                                            })\r\n                                                            }\r\n                                                        </select>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        }\r\n                                        <div class={showWeightFields  === 0 ? \"col-md-6\" : \"col-md-2\"}>\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"productPrice\">Price (In $)</label>\r\n                                                <input id=\"productPrice\" type=\"text\" class=\"form-control\" placeholder=\"\"/>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"add-unit\">\r\n                                            <button type=\"submit\"> Add</button>\r\n                                        </div>\r\n                                        </form>\r\n                                        }\r\n                                        <div class=\"w-100\">\r\n                                        {productUnitBio.length > 0 &&\r\n                                        <table className=\"unit-array-table\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>#</th>\r\n                                                    <th>Units</th>\r\n                                                    <th>Price</th>\r\n                                                    <th>Action</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {(productUnitBio.length > 0 ? productUnitBio : []).map((data, index) => {\r\n                                                    return(\r\n                                                        <tr>\r\n                                                            <td>{index + 1}</td>\r\n                                                            <td>\r\n                                                                {data.unitValue + ' ' + data.unitInName}\r\n                                                                {(data.packetWeight && data.packetUnitId) ? `(${data.packetWeight} ${data.packetUnitIdName} per  ${data.unitInName})` : ``}\r\n                                                            </td>\r\n                                                            <td>{data.price}</td>\r\n                                                            <td>\r\n                                                                <button type=\"button\" className=\"delete-button\" onClick={()=>{handleDeleteProductUnit(index)}}>Delete</button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                })}\r\n                                            </tbody>\r\n                                            </table>\r\n                                        }\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"description\">Description </label>\r\n                                                <textarea name=\"\" id=\"productDescription\" cols=\"30\" rows=\"10\" class=\"form-control\"></textarea>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"w-100\"></div>\r\n                                        <div class=\"form-group p-4\">\r\n                                            <input type=\"submit\" value=\"Submit\" class=\"btn  px-4 btn-primary\" />\r\n                                        </div> */}\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        <Footer />\r\n            { categoryDialogOpen ? \r\n                <AddUpdateCategoriesDialog \r\n                    open={categoryDialogOpen} \r\n                    setCategoryDialogOpen = {setCategoryDialogOpen} \r\n                    props = {categoryDialogProps} \r\n                    setCategoryList = {setCategoryList}\r\n                    setSubCategory = {setSubCategory}\r\n                    setDefaultCategoryId = {setDefaultCategoryId}\r\n                    setDefaultSubCategoryId = {setDefaultSubCategoryId}\r\n                /> \r\n                : null \r\n            }\r\n    </Fragment>\r\n    )\r\n}","import React, {Suspense, lazy, useEffect} from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport {APP_TOKEN} from  './api/config/Constants.js'\r\nimport PageLoader from './Views/Partials/Loader';\r\nimport ViewCustomerOrder from './Views/Components/ViewCustomerOrder';\r\nimport AlterCategories from './Views/Admin/AlterCategories';\r\n\r\nconst Login = lazy(()=> import('./Views/Auth/login'));\r\nconst AdminHome = lazy(()=> import('./Views/Admin/AdminHome'));\r\nconst Home = lazy(()=> import('./Views/Home'));\r\nconst AddProduct = lazy(()=> import('./Views/Admin/AddProduct.js'));\r\nconst ViewProduct = lazy(()=> import('./Views/Admin/ViewProduct.js'));\r\nconst ViewOrder = lazy(()=> import('./Views/Admin/ViewOrder.js'));\r\nconst ViewOrderedProduct = lazy(()=> import('./Views/Admin/ViewOrderedProduct.js'));\r\nconst CartList = lazy(()=> import('./Views/Components/CartList.js'));\r\nconst ProceedToCheckout = lazy(()=> import('./Views/Components/ProceedToCheckout.js'));\r\nconst ViewOrderReport = lazy(()=> import('./Views/Admin/Report/ViewOrderReport.js'));\r\nconst ViewOrderedProductReport = lazy(()=> import('./Views/Admin/Report/ViewOrderedProductReport.js'));\r\nconst DeliveryForm = lazy(()=> import('./Views/Admin/DeliveryForm.js'));\r\nconst ProductVerification = lazy(()=> import('./Views/Components/ProductVerification.js'));\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n          <Router>\r\n            <Suspense fallback={<PageLoader />}>\r\n              <Switch>\r\n                <Route \r\n                  exact \r\n                  path=\"/\"\r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <Redirect to=\"/view-added-product\" />\r\n                    : <Home {...props} /> \r\n                  }}\r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/cart-list\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <Redirect to=\"/view-added-product\" />\r\n                    : <CartList {...props} /> \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/proceed-to-checkout\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <Redirect to=\"/view-added-product\" />\r\n                    : <ProceedToCheckout {...props} />\r\n                  }}\r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/add-new-product\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <AddProduct {...props} />\r\n                    : <Redirect to=\"/\" /> \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/view-user-order-list\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <Redirect to=\"/view-added-product\" />\r\n                    : <ViewCustomerOrder {...props} />}}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/view-added-product\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <ViewProduct {...props} />\r\n                    : <Redirect to=\"/\" /> \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/view-order-list\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <ViewOrder {...props} />\r\n                    : <Redirect to=\"/\" />\r\n                  }}                    \r\n                />\r\n                 <Route \r\n                  exact \r\n                  path=\"/view-ordered-product\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <ViewOrderedProduct {...props} />\r\n                    : <Redirect to=\"/\" />\r\n                  }}                    \r\n                />\r\n               <Route \r\n                  exact \r\n                  path=\"/view-order-report\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <ViewOrderReport {...props} />\r\n                    : <Redirect to=\"/\" />\r\n                  }}                    \r\n                />\r\n                 <Route \r\n                  exact \r\n                  path=\"/view-ordered-product-report\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <ViewOrderedProductReport {...props} />\r\n                    : <Redirect to=\"/\" /> \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/delivery-form\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <DeliveryForm {...props} />\r\n                    : <Redirect to=\"/\" /> \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/verify-delivered-product\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <Redirect to=\"/view-added-product\" />\r\n                    : <ProductVerification  {...props} /> \r\n                  }}                    \r\n                />\r\n                <Route \r\n                  exact \r\n                  path=\"/alter-categories\" \r\n                  render = { props => {\r\n                    return (!APP_TOKEN.notEmpty)\r\n                    ? <Redirect to=\"/login\" />\r\n                    : (APP_TOKEN.isAdmin)\r\n                    ? <AlterCategories  {...props} />\r\n                    : <Redirect to=\"/\" /> \r\n \r\n                  }}                    \r\n                />\r\n               \r\n                <Route exact path=\"/login\"  render={props =>  <Login {...props} /> } />\r\n                <Route exact path=\"/logout\" render={props =>  <Redirect to=\"/login\" /> }/>\r\n                \r\n                \r\n                \r\n                {/* <Route exact path=\"/home\" render={props => { return APP_TOKEN.notEmpty ? <Index {...props}/> :  <Redirect to=\"/login\" /> }} />\r\n                <Route exact path=\"/editor\"  render={props => { return APP_TOKEN.notEmpty ? <Editor {...props}  />  :  <Redirect to=\"/login\" />  }}  />\r\n                <Route exact path=\"/OurTechnology\" render={props => { return APP_TOKEN.notEmpty ? <OurTechnology  {...props}/>  :  <Redirect to=\"/login\" />  }} />\r\n                <Route exact path=\"/Services\" render={props => { return APP_TOKEN.notEmpty ? <Services {...props}/>  :  <Redirect to=\"/login\" />  }} />\r\n                <Route exact path=\"/Contact\" render={props => { return APP_TOKEN.notEmpty ? <Contact {...props} />  :  <Redirect to=\"/login\" />  }} />\r\n                <Route exact path=\"/About\" render={props => { return APP_TOKEN.notEmpty ? <About  {...props}/>  :  <Redirect to=\"/login\" />  }} />\r\n                <Route exact path=\"/WhyUs\" render={props => { return APP_TOKEN.notEmpty ? <WhyUs  {...props}/>  :  <Redirect to=\"/login\" />  }}  />\r\n                <Route exact path=\"/OurGoals\" render={props => { return APP_TOKEN.notEmpty ? <OurGoals  {...props}/>  :  <Redirect to=\"/login\" />  }} />\r\n                <Route exact path=\"/OurPartners\" render={props => { return APP_TOKEN.notEmpty ? <OurPartners {...props} />  :  <Redirect to=\"/login\" />  }} />\r\n                <Route exact path=\"/Portfolio\" render={props => { return APP_TOKEN.notEmpty ? <Portfolio {...props} />  :  <Redirect to=\"/login\" />  }} />                 */}\r\n                \r\n              </Switch>\r\n            </Suspense>\r\n          </Router>      \r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}