{"version":3,"sources":["Views/Invoices/Franchise/UpdateRequest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","api/invoices.js"],"names":["UpdateRequest","props","propData","location","state","invoice","useState","isNullOrUndefined","isLoading","setIsLoading","isSubmitting","setIsSubmitting","itemList","setItemList","commonCheckBox","setCommonCheckBox","commonComment","setCommonComment","useEffect","getItemsForUpdateRequest","e","a","InvoiceAPI","invoice_id","invoice_version_id","result","console","log","onChangeHandler","name","target","split","itemId","Number","UnitId","value","newQuantity","document","getElementById","newCost","comment","tempList","map","data","item_id","unit_id","new_quantity_clone","new_total_amt_clone","comment_clone","is_requested","new_quantity","new_total_amt","checked","is_disable","handleEnableAll","handleSaveRequest","checkValidity","postItemUpdateRequest","itemData","alert","handleCancel","window","history","back","handleSubmit","preventDefault","formData","length","push","postInvoiceUpdateRequest","class","onSubmit","order_id","invoice_no","invoice_total","toFixed","getDateInDDMMYYYY","invoice_date","status_name","className","style","minWidth","rowSpan","type","onChange","colSpan","index","item_name","quantity","unit_name","total_amt","id","min","step","disabled","required","rows","cursor","onClick","cols","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","PARAMS","methodType","method","headers","authHeader","getInvoiceList","payload","URL","c","axios","assign","checkError","getItemsToHandleRequest","payInvoiceBill","getTransactionDetails","handleReqestRejection","handleInvoiceToAcceptRequest","downloadOrderInvoiceVersion"],"mappings":"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","file":"static/js/36.4339064f.chunk.js","sourcesContent":["import React, {useState, useEffect, Fragment} from 'react';\r\nimport {isNullOrUndefined} from 'util';\r\n\r\n//Components \r\nimport {getDateInDDMMYYYY, getDate} from '../../../common/moment.js';\r\nimport CallLoader from '../../../common/Loader.js';\r\nimport Header from '../../Partials/Header.js';\r\nimport Footer from '../../Partials/Footer.js';\r\n\r\n// APIs\r\nimport InvoiceAPI from '../../../api/invoices.js';\r\n\r\n\r\nexport default function UpdateRequest(props) {    \r\n    let propData = props.location.state.invoice;\r\n    const [invoice, setInvoice] =  useState(isNullOrUndefined(propData) ? {} : propData);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [itemList, setItemList] = useState([]);\r\n    const [commonCheckBox, setCommonCheckBox] = useState(false);\r\n    const [commonComment, setCommonComment] = useState('');\r\n    \r\n    useEffect(() => {\r\n        if(invoice){\r\n            getItemsForUpdateRequest();\r\n        }        \r\n    }, []);\r\n    \r\n    const getItemsForUpdateRequest = async (e) => {\r\n        setIsLoading(true);\r\n        setIsSubmitting(true);\r\n        try{\r\n            const result = await InvoiceAPI.getItemsForUpdateRequest({\r\n                invoice_id : invoice.invoice_id,\r\n                invoice_version_id : invoice.invoice_version_id,\r\n            });\r\n            setItemList(result.itemList);\r\n            setIsLoading(false);\r\n            setIsSubmitting(false);\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    \r\n    const onChangeHandler = (e) => {\r\n        let name = (e.target.name).split('-')[0];\r\n        let itemId = Number((e.target.name).split('-')[1]);\r\n        let UnitId = Number((e.target.name).split('-')[2]);\r\n        let value = e.target.value;\r\n\r\n        let newQuantity = document.getElementById(`newQuantity-${itemId}-${UnitId}`).value;\r\n        let newCost = document.getElementById(`newCost-${itemId}-${UnitId}`).value;\r\n        let comment = document.getElementById(`comment-${itemId}-${UnitId}`).value;\r\n\r\n        let tempList = [...itemList];\r\n        tempList.map((data) => {\r\n            if(data.item_id === itemId && data.unit_id === UnitId){\r\n                if(Number(newQuantity) !== data.new_quantity_clone || Number(newCost) !== data.new_total_amt_clone || comment !== data.comment_clone){\r\n                    data.is_requested = 1; \r\n                }else{\r\n                    data.is_requested = 0;\r\n                }\r\n                if(name === \"newQuantity\"){\r\n                    data.new_quantity = value;\r\n                }else if(name === \"newCost\"){\r\n                    data.new_total_amt = value;\r\n                }else if(name === \"comment\"){\r\n                    data.comment = value;                    \r\n                }else if(name === \"isDisable\"){\r\n                    if(e.target.checked === true){\r\n                        data.is_disable = 0;\r\n                    }else {\r\n                        data.is_disable = 1;\r\n                    }\r\n                }                \r\n              }\r\n        });\r\n        setItemList(tempList);\r\n    }\r\n\r\n    const handleEnableAll = (e) => {\r\n        setCommonCheckBox(e.target.checked);\r\n        let tempList = [...itemList];\r\n        tempList.map((data) => {\r\n            if(e.target.checked === true){\r\n                data.is_disable = 0;\r\n            }else {\r\n                data.is_disable = 1;\r\n            }\r\n        });\r\n        setItemList(tempList);\r\n    }\r\n\r\n    const handleSaveRequest = async (data) => {\r\n        setIsLoading(true);\r\n        setIsSubmitting(true);\r\n        try{\r\n            let itemId = Number(data.item_id);\r\n            let UnitId = Number(data.unit_id);\r\n            let newQuantity = document.getElementById(`newQuantity-${itemId}-${UnitId}`);\r\n            let newCost = document.getElementById(`newCost-${itemId}-${UnitId}`); \r\n            let comment = document.getElementById(`comment-${itemId}-${UnitId}`); \r\n            \r\n            if (newQuantity.checkValidity() && newCost.checkValidity() && comment.checkValidity()) {\r\n                const result = await InvoiceAPI.postItemUpdateRequest({itemData: data});\r\n                onChangeHandler({target:{name:`isDisable-${data.item_id}-${data.unit_id}`, checked:false, value: ''}});\r\n            } else {\r\n                alert(\"Fill all the fields.\");\r\n            } \r\n             \r\n            setIsLoading(false);    \r\n            setIsSubmitting(false);            \r\n        }catch(e){\r\n            console.log('Error...', e);\r\n        }\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        window.history.back();\r\n    }\r\n                                            \r\n    const handleSubmit = async (e) =>{\r\n        e.preventDefault();\r\n        setIsLoading(true);\r\n        setIsSubmitting(true);\r\n        try{\r\n            let formData = [];\r\n            (itemList.length > 0 ? itemList : []).map(data => {\r\n                if(data.is_requested === 1){\r\n                    formData.push(data);\r\n                }\r\n            });\r\n            const result = await InvoiceAPI.postInvoiceUpdateRequest({\r\n                itemList: formData, \r\n                commonComment: commonComment,\r\n                invoice_version_id: itemList[0].invoice_version_id,\r\n            });\r\n            setIsLoading(false); \r\n            setIsSubmitting(false);\r\n            handleCancel();\r\n        }catch(e){\r\n            console.log('Error...', e);\r\n        }\r\n    }\r\n\r\n    return(\r\n    <Fragment>\r\n        <Header />\r\n            <section class=\"ftco-section\">\r\n                <div class=\"container\">\r\n                    <div class=\"row justify-content-center\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <h3 class=\"mb-4 billing-heading\">Invoice Update Request Form</h3>\r\n                            <form onSubmit={handleSubmit} class=\"p-5 bg-light b-top-dark\">\r\n                                <div class=\"row align-items-end\">\r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Order Id: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{invoice.order_id}</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>   \r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Invoice No.:</label>\r\n                                            <div class=\"d-flex\">\r\n                                            <h6>{invoice.invoice_no}</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>                                      \r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Invoice Total: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{Number(invoice.invoice_total).toFixed(2)}</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> \r\n                                    <div class=\"col-md-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Invoice Date: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{getDateInDDMMYYYY(invoice.invoice_date)}</h6>                                                \r\n                                            </div>\r\n                                        </div>\r\n                                    </div>  \r\n                                    <div class=\"col-md-8\">\r\n                                        <div class=\"form-group\">\r\n                                            <label>Status: </label>\r\n                                            <div class=\"d-flex\">\r\n                                                <h6>{invoice.status_name}</h6>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-md-12\"> <hr /> </div>\r\n                                    <div class=\"col-md-12\">\r\n                                        <h5>Invoice Items</h5>\r\n                                    </div>\r\n                                    <div class=\"w-100 table-div\">\r\n                                        <table className=\"table table-td\">\r\n                                            <thead className=\"thead-primary-border\">\r\n                                                <tr className=\"text-center\">\r\n                                                    <th style={{minWidth : '60px'}} rowSpan={2}>#</th>\r\n                                                    <th style={{minWidth : '50px'}} rowSpan={2}>\r\n                                                        <input type=\"checkbox\" onChange= {handleEnableAll} checked={commonCheckBox} />\r\n                                                    </th>\r\n                                                    <th style={{minWidth : '200px'}} rowSpan={2}>Item</th>\r\n                                                    <th colSpan={2}>Current Value</th>\r\n                                                    <th colSpan={2}>Want to change</th>\r\n                                                    <th style={{minWidth : '200px'}} rowSpan={2}> Comment</th>\r\n                                                    <th style={{minWidth : '130px'}} rowSpan={2}> Action</th>\r\n                                                </tr>\r\n                                                <tr className=\"text-center\">                                                    \r\n                                                    <th style={{minWidth : '120px'}}>Quantity</th>\r\n                                                    {/* <th style={{minWidth : '100px'}}>Unit Price</th> */}\r\n                                                    <th style={{minWidth : '130px'}}>Total Amount</th>\r\n                                                    <th style={{minWidth : '200px'}}>Quantity</th>\r\n                                                    <th style={{minWidth : '200px'}}>Cost</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                                <tbody >\r\n                                                   {(itemList.length >0 ? itemList :[]).map((data, index) => {                                                        \r\n                                                        return(\r\n                                                            <tr>\r\n                                                                <td>{index + 1}</td>\r\n                                                                <td>\r\n                                                                    <input name={\"isDisable-\"+data.item_id+\"-\"+data.unit_id} checked={!data.is_disable} type=\"checkbox\" onChange={onChangeHandler} />\r\n                                                                </td>                                                                \r\n                                                                <td>{data.item_name}</td>\r\n                                                                <td>{data.quantity+ ' ' + data.unit_name}</td>\r\n                                                                {/* <td>${Number(data.unit_price).toFixed(2)}</td> */}\r\n                                                                <td>${Number(data.total_amt).toFixed(2)}</td>\r\n                                                                <td>\r\n                                                                    <div class=\"d-flex justify-content-center\">\r\n                                                                        <input type=\"number\" name={\"newQuantity-\"+data.item_id+\"-\"+data.unit_id} class=\"cost-input\" id={\"newQuantity-\"+data.item_id+\"-\"+data.unit_id}  value={data.new_quantity} min=\"0\" step=\"0.1\" onChange={onChangeHandler} disabled={data.is_disable === 1} required />\r\n                                                                        <p class=\"cost-input-adoptment\"> {data.unit_name} </p>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <div class=\"d-flex justify-content-center\">\r\n                                                                        <p class=\"cost-input-adoptment\"> $ </p>\r\n                                                                        <input type=\"number\" name={\"newCost-\"+data.item_id+\"-\"+data.unit_id} class=\"cost-input\" id={\"newCost-\"+data.item_id+\"-\"+data.unit_id} value={data.new_total_amt} min=\"0\" step=\"0.1\" onChange={onChangeHandler} disabled={data.is_disable === 1} required />\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <textarea type=\"text\" rows={2} name= {\"comment-\"+data.item_id+\"-\"+data.unit_id} id={\"comment-\"+data.item_id+\"-\"+data.unit_id} value={data.comment} onChange={onChangeHandler} disabled={data.is_disable === 1} required></textarea>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <button class=\"alter-purchase-record\" style={data.is_disable===1 ? {cursor: 'auto'}: {}} type=\"button\" disabled={data.is_disable === 1} onClick={() => {handleSaveRequest(data)}} > Save Request </button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n                                                    <tr>\r\n                                                        <td style={{minWidth : '60px'}}></td>\r\n                                                        <td style={{minWidth : '50px'}}>\r\n                                                            <input type=\"checkbox\" onChange= {handleEnableAll} checked={commonCheckBox} />\r\n                                                        </td>\r\n                                                        <td colSpan={8}></td>\r\n                                                    </tr>\r\n                                                </tbody> \r\n                                            </table>\r\n                                        </div>\r\n                                        <div class=\"col-md-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <br />\r\n                                                <h5>Common Comment*</h5>                                                \r\n                                                <textarea value={commonComment} onChange={(e)=>{setCommonComment(e.target.value);}} cols=\"30\" rows=\"10\" class=\"form-control\" required ></textarea>\r\n                                            </div>\r\n                                        </div>   \r\n                                        <div class=\"form-group p-4\">\r\n                                            <button class=\"btn  px-4 btn-primary\"  type=\"submit\" disabled={isSubmitting === true} > Send Request </button>\r\n                                            &nbsp;&nbsp;&nbsp;\r\n                                            <button class=\"btn  px-4 btn-primary\"  type=\"button\" onClick={handleCancel}> Cancel </button>\r\n                                            {/* <input type=\"submit\" value=\"Send Request\" class=\"btn  px-4 btn-primary\" disabled={isSubmitting} /> */}\r\n                                        </div>\r\n                                    </div>\r\n                                      \r\n                                </form>                                                        \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n        <Footer />        \r\n        {isLoading ?   <CallLoader />   : null  }\r\n    </Fragment>\r\n    )\r\n}\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import axios from 'axios';\r\nimport * as c from './config/Constants';\r\nimport checkError from './config/HttpClient';\r\nimport {authHeader} from './config/AuthHeader.js';\r\n\r\nconst PARAMS = ({ methodType = 'GET' }) => ({\r\n  method: methodType,\r\n  headers: authHeader(),\r\n});\r\n\r\nexport default {\r\n\r\n  getInvoiceList:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/getInvoiceList`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  getItemsForUpdateRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/getItemsForUpdateRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getItemsToHandleRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/getItemsToHandleRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n  \r\n  postItemUpdateRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/postItemUpdateRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  postInvoiceUpdateRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/postInvoiceUpdateRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  payInvoiceBill:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/payInvoiceBill`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  getTransactionDetails:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/getTransactionDetails`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  handleReqestRejection:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/handleReqestRejection`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  handleInvoiceToAcceptRequest:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/handleInvoiceToAcceptRequest`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  downloadOrderInvoiceVersion:async ({...payload }) => {\r\n    const URL = `${c.API_CONSUMER}/invoices/downloadOrderInvoiceVersion`;\r\n    try {\r\n      const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n        data: payload,\r\n      }),\r\n    );\r\n      return data;\r\n    } catch (error) {\r\n      checkError(error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // getMeasuredUnitofProduct:async ({...payload }) => {\r\n  //   const URL = `${c.API_CONSUMER}/staticrecords/getMeasuredUnitofProduct`;\r\n  //   try {\r\n  //     const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'POST' }), {\r\n  //       data: payload,\r\n  //     }),\r\n  //   );\r\n  //     return data;\r\n  //   } catch (error) {\r\n  //     checkError(error);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  // getOrderStatusList:async () => {\r\n  //   const URL = `${c.API_CONSUMER}/staticrecords/getOrderStatusList`;\r\n  //   try {\r\n  //     const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n  //     return data;\r\n  //   } catch (error) {\r\n  //     checkError(error);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n\r\n  // getInvoiceStateList:async () => {\r\n  //   const URL = `${c.API_CONSUMER}/staticrecords/getInvoiceStateList`;\r\n  //   try {\r\n  //     const { data } = await axios(URL, Object.assign({}, PARAMS({ methodType: 'GET' })));\r\n  //     return data;\r\n  //   } catch (error) {\r\n  //     checkError(error);\r\n  //     throw error;\r\n  //   }\r\n  // },\r\n};"],"sourceRoot":""}