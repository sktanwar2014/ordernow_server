{"version":3,"sources":["Views/Admin/ViewOrder.js"],"names":["RESET_VALUES","date","Date","orderStatus","ViewOrder","props","useState","inputs","setInputs","orderList","setOrderList","orderedProductList","setOrderedProductList","orderStatusList","setOrderStatusList","setOrderStatus","useEffect","getOrderListOfSingleDay","getOrderStatusList","handleInputChange","e","target","name","value","a","OrderAPI","order_status","getDate","result","orderedProducts","console","log","StaticAPI","handleGenerateInvoice","data","alert","handleOrderConfirmation","status","orderId","id","className","class","for","type","onChange","length","map","index","onClick","order","products","filter","pro","order_id","totalProduct","product","rowspan","getDateInDDMMYYYY","order_date","full_name","product_name","quantity","ordered_unit_name","price","flat_add","street_add","city","delivery_date","to","pathname","state","style","display"],"mappings":"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","file":"static/js/13.d4e2b54d.chunk.js","sourcesContent":["import React, {useState, useEffect, Fragment} from 'react';\r\nimport {Link} from  'react-router-dom';\r\n\r\n//Components \r\nimport Header from '../Partials/Header.js';\r\nimport Footer from '../Partials/Footer.js';\r\nimport OrderAPI from '../../api/order.js';\r\nimport StaticAPI from '../../api/static.js';\r\n\r\n\r\nimport {getDateInDDMMYYYY, getDate} from '../../common/moment.js';\r\n\r\nconst RESET_VALUES = {\r\n    date : new Date(),\r\n    orderStatus : '1',\r\n}\r\n\r\n\r\nexport default function ViewOrder(props) {\r\n\r\n    const [inputs, setInputs] =  useState(RESET_VALUES);\r\n\tconst [orderList, setOrderList] = useState([]);\r\n    const [orderedProductList, setOrderedProductList] = useState([]);\r\n    const [orderStatusList, setOrderStatusList]  = useState([]);\r\n    const [orderStatus, setOrderStatus] = useState(1);\r\n\r\n    useEffect(()=>{\r\n        getOrderListOfSingleDay();\r\n        getOrderStatusList();\r\n    },[]);\r\n\r\n\r\n    \r\n\tconst  handleInputChange = (e) => {\r\n\t\tsetInputs({...inputs, [e.target.name]: e.target.value});\r\n\t}\r\n\r\n    const getOrderListOfSingleDay = async () => {\r\n        setOrderStatus(inputs.orderStatus);\r\n\r\n        try{\r\n            const result = await OrderAPI.getOrderListOfSingleDay({\r\n                order_status : inputs.orderStatus,\r\n                date : getDate(inputs.date),\r\n            });\r\n            setOrderList(result.orderList);            \r\n            setOrderedProductList(result.orderedProducts);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    const getOrderStatusList = async () => {\r\n        try{\r\n            const result = await StaticAPI.getOrderStatusList({});\r\n            setOrderStatusList(result.orderStatusList);\r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n\r\n    const handleGenerateInvoice = async (data) =>{\r\n        // console.log(data);\r\n        alert('Work in Progress')\r\n    }\r\n\r\n    \r\n    const handleOrderConfirmation = async (data, status) =>{\r\n        try{\r\n            const result = await OrderAPI.handleOrderConfirmation({orderId: data.id, order_status : status, date : getDate(inputs.date),});\r\n            setOrderList(result.orderList);            \r\n            setOrderedProductList(result.orderedProducts);           \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n    return(\r\n\t\t<Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<section className=\"ftco-section\">\r\n                <div class=\"container\">\r\n                <h3>Modify Orders</h3>\r\n                <div class=\"row justify-content-center p-bottom-30\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <div class=\"p-5 bg-light b-top-dark\">\r\n                                    <div class=\"row align-items-end\">\r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"date\">Date * </label>\r\n                                                <input id=\"date\" name=\"date\" type=\"date\" value={getDate(inputs.date)} class=\"form-control\"  onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>   \r\n                                        <div class=\"col-md-6\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"orderStatus\">Status * </label>\r\n                                                <select id=\"orderStatus\" name=\"orderStatus\" value={inputs.orderStatus} class=\"form-control\" onChange={handleInputChange}>\r\n                                                    {(orderStatusList.length > 0 ? orderStatusList : [] ).map((data, index)=>{\r\n                                                        return(\r\n                                                          (data.id !== 4 && data.id !== 5 ) ?  <option id={data.id} value={data.id} >{data.order_status}</option>: null\r\n                                                        )\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"col-md-12 m-bottom-20\">\r\n                                            <div class=\"form-group\">\r\n                                                <div class=\"d-flex f-right\">\r\n                                                <button class=\"btn btn-primary px-4\" onClick={getOrderListOfSingleDay}> Click to view</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"w-100\">\r\n                                            <table className=\"unit-array-table\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Order Date</th>\r\n                                                        <th>Order Id</th>\r\n                                                        <th>Customer</th>\r\n                                                        <th>Product</th>\r\n                                                        <th>Quantity</th>\r\n                                                        {orderStatus != 1 && <th>Price</th> }\r\n                                                        <th>Address</th>\r\n                                                        {orderStatus != 1 && <th>Delivery Date</th> }\r\n                                                        {orderStatus != 2 && <th>Action</th> }\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {(orderList.length>0 ? orderList :[]).map((order, index) => {\r\n                                                    let products = orderedProductList.filter(pro => pro.order_id === order.id);                                                    \r\n                                                    let totalProduct = products.length;                                                    \r\n                                                    return(\r\n                                                        (products.length >0 ? products :[]).map((product) =>  {\r\n                                                            return(\r\n                                                                <tr class=\"text-center\">\r\n                                                                    {totalProduct !== 0 &&\r\n                                                                        <Fragment>                                                                            \r\n                                                                            <td rowspan={totalProduct}>{index + 1}</td>\r\n                                                                            <td rowspan={totalProduct}>{getDateInDDMMYYYY(order.order_date)}</td>\r\n                                                                            <td rowspan={totalProduct}>{order.order_id}</td>\r\n                                                                            <td rowspan={totalProduct}>{order.full_name}</td>\r\n                                                                        </Fragment>\r\n                                                                    }\r\n                                                                    <td>{product.product_name}</td>\r\n                                                                    <td>{`${product.quantity}  ${product.ordered_unit_name}`}</td>\r\n                                                                    {orderStatus != 1 &&  <td>{`${product.price}`}</td>}\r\n                                                                    {totalProduct !== 0 &&\r\n                                                                        <Fragment>\r\n                                                                            <td rowspan={totalProduct}>{`${order.flat_add}, ${order.street_add}, ${order.city}`}</td>\r\n                                                                            {orderStatus != 1 && <td rowspan={totalProduct}>{getDateInDDMMYYYY(order.delivery_date)}</td> }\r\n                                                                            <td rowspan={totalProduct}>\r\n                                                                                {orderStatus  == 1 ? <Link to={{pathname :'/delivery-form', state : {order: order, products: products}}}>Click to delivered</Link> :\r\n                                                                                 orderStatus  == 3 ?\r\n                                                                                    order.status == 3 ?\r\n                                                                                    <Fragment>\r\n                                                                                        <button class={ \"alter-purchase-record\"} type=\"submit\" onClick={()=>{handleOrderConfirmation(order, 4)}}> Accept </button>\r\n                                                                                        <button class={ \"alter-purchase-record\"} type=\"submit\" onClick={()=>{handleOrderConfirmation(order, 5)}}> Reject </button>\r\n                                                                                    </Fragment> :\r\n                                                                                    (order.status  == 4 || order.status  == 5) ?\r\n                                                                                   <button class=\"alter-purchase-record\" type=\"submit\" onClick={()=>{handleGenerateInvoice(order)}}> Generate Invoice </button> : ''\r\n                                                                                   :''\r\n                                                                                }\r\n                                                                                \r\n                                                                            </td>\r\n                                                                        </Fragment>\r\n                                                                    }   \r\n                                                                    <div style={{display:'none'}}>{totalProduct = 0}</div>\r\n                                                                </tr>\r\n                                                                )\r\n                                                            })\r\n                                                        )\r\n                                                    })\r\n                                                }\t\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n                    \r\n                </div>\r\n    </section>\r\n\t\t<Footer />\r\n\t</Fragment>\r\n    )\r\n}"],"sourceRoot":""}