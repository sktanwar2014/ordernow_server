{"version":3,"sources":["Views/Admin/Report/ViewOrderReport.js"],"names":["RESET_VALUES","toDate","Date","fromDate","orderStatus","ViewOrder","useState","inputs","setInputs","orderList","setOrderList","orderedProductList","setOrderedProductList","orderStatusList","setOrderStatusList","setOrderStatus","useEffect","getOrderList","getOrderStatusList","handleInputChange","e","target","name","value","a","OrderAPI","order_status","from_date","getDate","to_date","result","orderedProducts","console","log","StaticAPI","className","class","for","id","type","onChange","length","map","data","index","onClick","order","totalProduct","filter","pro","order_id","product","rowspan","getDateInDDMMYYYY","order_date","full_name","product_name","quantity","ordered_unit_name","price","flat_add","street_add","city","delivery_date","style","display"],"mappings":"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","file":"static/js/11.700f3059.chunk.js","sourcesContent":["import React, {useState, useEffect, Fragment} from 'react';\r\n\r\n//Components \r\nimport Header from '../../Partials/Header.js';\r\nimport Footer from '../../Partials/Footer.js';\r\nimport StaticAPI from '../../../api/static.js';\r\nimport OrderAPI from '../../../api/order.js';\r\n\r\nimport {getDateInDDMMYYYY, getDate} from '../../../common/moment.js';\r\n\r\nconst RESET_VALUES = {\r\n    toDate : new Date(),\r\n    fromDate : new Date(),\r\n    orderStatus : '1',\r\n}\r\n\r\n\r\nexport default function ViewOrder() {\r\n\r\n    const [inputs, setInputs] =  useState(RESET_VALUES);\r\n\tconst [orderList, setOrderList] = useState([]);\r\n    const [orderedProductList, setOrderedProductList] = useState([]);\r\n    const [orderStatusList, setOrderStatusList]  = useState([]);\r\n    const [orderStatus, setOrderStatus] = useState(1);\r\n\r\n    useEffect(()=>{\r\n\t\tgetOrderList();\t\t\r\n\t\tgetOrderStatusList();\t\t\r\n    },[]);\r\n\r\n\r\n    \r\n\tconst  handleInputChange = (e) => {\r\n\t\tsetInputs({...inputs, [e.target.name]: e.target.value});\r\n\t}\r\n\r\n    const getOrderList = async () => {\r\n        setOrderStatus(inputs.orderStatus);\r\n        try{\r\n            const result = await OrderAPI.getOrderList({\r\n                order_status : inputs.orderStatus,\r\n                from_date : getDate(inputs.fromDate),\r\n                to_date : getDate(inputs.toDate),\r\n            });\r\n            setOrderList(result.orderList);            \r\n            setOrderedProductList(result.orderedProducts);            \r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n\r\n    const getOrderStatusList = async () => {\r\n        try{\r\n            const result = await StaticAPI.getOrderStatusList({});\r\n            setOrderStatusList(result.orderStatusList);\r\n        }catch(e){\r\n            console.log('Error...',e);\r\n        }\r\n    }\r\n\r\n\r\n    return(\r\n\t\t<Fragment>\r\n\t\t\t<Header />\r\n\t\t\t<section className=\"ftco-section\">\r\n                <div class=\"container\">\r\n                <h3>View Order List</h3>\r\n                <div class=\"row justify-content-center p-bottom-30\">\r\n                        <div class=\"col-xl-12 ftco-animate fadeInUp ftco-animated\">\r\n                            <div class=\"p-5 bg-light b-top-dark\">\r\n                                    <div class=\"row align-items-end\">\r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"fromDate\">From * </label>\r\n                                                <input id=\"fromDate\" name=\"fromDate\" type=\"date\" value={getDate(inputs.fromDate)} class=\"form-control\"  onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>   \r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"toDate\">To * </label>\r\n                                                <input id=\"toDate\" name=\"toDate\" type=\"date\" value={getDate(inputs.toDate)} class=\"form-control\" onChange={handleInputChange} />\r\n                                            </div>\r\n                                        </div>  \r\n                                        <div class=\"col-md-4\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"orderStatus\">Status * </label>\r\n                                                <select id=\"orderStatus\" name=\"orderStatus\" value={inputs.orderStatus} class=\"form-control\" onChange={handleInputChange}>\r\n                                                    {(orderStatusList.length > 0 ? orderStatusList : [] ).map((data, index)=>{\r\n                                                        return(\r\n                                                            <option id={data.id} value={data.id} >{data.order_status}</option>\r\n                                                        )\r\n                                                        })\r\n                                                    }\r\n                                                </select>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"col-md-12 m-bottom-20\">\r\n                                            <div class=\"form-group\">\r\n                                                <div class=\"d-flex f-right\">\r\n                                                <button class=\"btn btn-primary px-4\" onClick={getOrderList}> Click to view</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> \r\n                                        <div class=\"w-100\">\r\n                                            <table className=\"unit-array-table\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Order Date</th>\r\n                                                        <th>Order Id</th>\r\n                                                        <th>Customer</th>\r\n                                                        <th>Product</th>\r\n                                                        <th>Quantity</th>\r\n                                                        {orderStatus != 1 && <th>Price</th> }\r\n                                                        <th>Address</th>\r\n                                                        {orderStatus != 1 && <th>Delivery Date</th> }\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {(orderList.length>0 ? orderList :[]).map((order, index) => {                                                    \r\n                                                    let totalProduct = orderedProductList.filter(pro => pro.order_id === order.id).length;                                                    \r\n                                                    return(\r\n                                                        (orderedProductList.length >0 ? orderedProductList :[]).map((product) =>  {\r\n                                                            if(product.order_id === order.id){\r\n                                                            return(\r\n                                                                <tr class=\"text-center\">\r\n                                                                    {totalProduct !== 0 &&                                                                    \r\n                                                                        <Fragment>                                                                            \r\n                                                                            <td rowspan={totalProduct}>{index + 1}</td>\r\n                                                                            <td rowspan={totalProduct}>{getDateInDDMMYYYY(order.order_date)}</td>\r\n                                                                            <td rowspan={totalProduct}>{order.order_id}</td>\r\n                                                                            <td rowspan={totalProduct}>{order.full_name}</td>\r\n                                                                        </Fragment>\r\n                                                                    }\r\n                                                                    <td>{product.product_name}</td>\r\n                                                                    <td>{`${product.quantity}  ${product.ordered_unit_name}`}</td>\r\n                                                                    {orderStatus != 1 &&  <td>{`${product.price}`}</td>}\r\n                                                                    {totalProduct !== 0 &&\r\n                                                                        <Fragment>\r\n                                                                            <td rowspan={totalProduct}>{`${order.flat_add}, ${order.street_add}, ${order.city}`}</td>\r\n                                                                            {orderStatus != 1 && <td rowspan={totalProduct}>{getDateInDDMMYYYY(order.delivery_date)}</td> }\r\n                                                                        </Fragment>\r\n                                                                    }   \r\n                                                                    <div style={{display:'none'}}>{totalProduct = 0}</div>\r\n                                                                </tr>\r\n                                                                )\r\n                                                            }\r\n                                                            })\r\n                                                        )\r\n                                                    })\r\n                                                }\t\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n                    \r\n                </div>\r\n    </section>\r\n\t\t<Footer />\r\n\t</Fragment>\r\n    )\r\n}"],"sourceRoot":""}